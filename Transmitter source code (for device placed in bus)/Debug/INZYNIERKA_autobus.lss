
INZYNIERKA_autobus.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000047b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000152  00800060  000047b6  0000484a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  008001b2  008001b2  0000499c  2**0
                  ALLOC
  3 .stab         00002cb8  00000000  00000000  0000499c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011ea  00000000  00000000  00007654  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  0000883e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  0000899e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  00008b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  0000ab72  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  0000bc73  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  0000cbf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  0000cd78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  0000d03a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000d8c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 eb       	ldi	r30, 0xB6	; 182
      68:	f7 e4       	ldi	r31, 0x47	; 71
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3b       	cpi	r26, 0xB2	; 178
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a2 eb       	ldi	r26, 0xB2	; 178
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 3c       	cpi	r26, 0xC0	; 192
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 02 14 	call	0x2804	; 0x2804 <main>
      8a:	0c 94 d9 23 	jmp	0x47b2	; 0x47b2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <InitUSART>:
#include <avr/io.h>
#include <util/delay.h>
#include <stdlib.h>

void InitUSART( unsigned long int baud ) // baud - czyli bitrate portu COM
{
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	00 d0       	rcall	.+0      	; 0x9c <InitUSART+0xa>
      9c:	00 d0       	rcall	.+0      	; 0x9e <InitUSART+0xc>
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	69 83       	std	Y+1, r22	; 0x01
      a4:	7a 83       	std	Y+2, r23	; 0x02
      a6:	8b 83       	std	Y+3, r24	; 0x03
      a8:	9c 83       	std	Y+4, r25	; 0x04
   //ustalenie stanu UBRR
   UBRRH = (unsigned char)(((F_CPU/(16UL*baud))-1)>>8);
      aa:	00 e4       	ldi	r16, 0x40	; 64
      ac:	10 e0       	ldi	r17, 0x00	; 0
      ae:	89 81       	ldd	r24, Y+1	; 0x01
      b0:	9a 81       	ldd	r25, Y+2	; 0x02
      b2:	ab 81       	ldd	r26, Y+3	; 0x03
      b4:	bc 81       	ldd	r27, Y+4	; 0x04
      b6:	88 0f       	add	r24, r24
      b8:	99 1f       	adc	r25, r25
      ba:	aa 1f       	adc	r26, r26
      bc:	bb 1f       	adc	r27, r27
      be:	88 0f       	add	r24, r24
      c0:	99 1f       	adc	r25, r25
      c2:	aa 1f       	adc	r26, r26
      c4:	bb 1f       	adc	r27, r27
      c6:	88 0f       	add	r24, r24
      c8:	99 1f       	adc	r25, r25
      ca:	aa 1f       	adc	r26, r26
      cc:	bb 1f       	adc	r27, r27
      ce:	88 0f       	add	r24, r24
      d0:	99 1f       	adc	r25, r25
      d2:	aa 1f       	adc	r26, r26
      d4:	bb 1f       	adc	r27, r27
      d6:	9c 01       	movw	r18, r24
      d8:	ad 01       	movw	r20, r26
      da:	80 e0       	ldi	r24, 0x00	; 0
      dc:	94 e2       	ldi	r25, 0x24	; 36
      de:	a4 ef       	ldi	r26, 0xF4	; 244
      e0:	b0 e0       	ldi	r27, 0x00	; 0
      e2:	bc 01       	movw	r22, r24
      e4:	cd 01       	movw	r24, r26
      e6:	0e 94 ff 22 	call	0x45fe	; 0x45fe <__udivmodsi4>
      ea:	da 01       	movw	r26, r20
      ec:	c9 01       	movw	r24, r18
      ee:	01 97       	sbiw	r24, 0x01	; 1
      f0:	a1 09       	sbc	r26, r1
      f2:	b1 09       	sbc	r27, r1
      f4:	89 2f       	mov	r24, r25
      f6:	9a 2f       	mov	r25, r26
      f8:	ab 2f       	mov	r26, r27
      fa:	bb 27       	eor	r27, r27
      fc:	f8 01       	movw	r30, r16
      fe:	80 83       	st	Z, r24
   UBRRL = (unsigned char)((F_CPU/(16UL*baud))-1);
     100:	09 e2       	ldi	r16, 0x29	; 41
     102:	10 e0       	ldi	r17, 0x00	; 0
     104:	89 81       	ldd	r24, Y+1	; 0x01
     106:	9a 81       	ldd	r25, Y+2	; 0x02
     108:	ab 81       	ldd	r26, Y+3	; 0x03
     10a:	bc 81       	ldd	r27, Y+4	; 0x04
     10c:	88 0f       	add	r24, r24
     10e:	99 1f       	adc	r25, r25
     110:	aa 1f       	adc	r26, r26
     112:	bb 1f       	adc	r27, r27
     114:	88 0f       	add	r24, r24
     116:	99 1f       	adc	r25, r25
     118:	aa 1f       	adc	r26, r26
     11a:	bb 1f       	adc	r27, r27
     11c:	88 0f       	add	r24, r24
     11e:	99 1f       	adc	r25, r25
     120:	aa 1f       	adc	r26, r26
     122:	bb 1f       	adc	r27, r27
     124:	88 0f       	add	r24, r24
     126:	99 1f       	adc	r25, r25
     128:	aa 1f       	adc	r26, r26
     12a:	bb 1f       	adc	r27, r27
     12c:	9c 01       	movw	r18, r24
     12e:	ad 01       	movw	r20, r26
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	94 e2       	ldi	r25, 0x24	; 36
     134:	a4 ef       	ldi	r26, 0xF4	; 244
     136:	b0 e0       	ldi	r27, 0x00	; 0
     138:	bc 01       	movw	r22, r24
     13a:	cd 01       	movw	r24, r26
     13c:	0e 94 ff 22 	call	0x45fe	; 0x45fe <__udivmodsi4>
     140:	da 01       	movw	r26, r20
     142:	c9 01       	movw	r24, r18
     144:	81 50       	subi	r24, 0x01	; 1
     146:	f8 01       	movw	r30, r16
     148:	80 83       	st	Z, r24
   // aktywny kana³ odbioru i nadawania
   UCSRB = (1<<RXEN)|(1<<TXEN);
     14a:	ea e2       	ldi	r30, 0x2A	; 42
     14c:	f0 e0       	ldi	r31, 0x00	; 0
     14e:	88 e1       	ldi	r24, 0x18	; 24
     150:	80 83       	st	Z, r24
   // 8bitów, brak parzystoœci, 2 bity stopu
   //UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
   // 8bitów, brak parzystoœci, 1 bit stopu
   UCSRC = (1<<URSEL)|(3<<UCSZ0);
     152:	e0 e4       	ldi	r30, 0x40	; 64
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	86 e8       	ldi	r24, 0x86	; 134
     158:	80 83       	st	Z, r24
}
     15a:	0f 90       	pop	r0
     15c:	0f 90       	pop	r0
     15e:	0f 90       	pop	r0
     160:	0f 90       	pop	r0
     162:	cf 91       	pop	r28
     164:	df 91       	pop	r29
     166:	1f 91       	pop	r17
     168:	0f 91       	pop	r16
     16a:	08 95       	ret

0000016c <ReceiveUSART>:

unsigned char ReceiveUSART( void )  // funkcja odbioru bajtu z RS232 (str.147)
{	//dopoki bufor nie bêdzie pusty zwraca wartosc funkcji
     16c:	df 93       	push	r29
     16e:	cf 93       	push	r28
     170:	cd b7       	in	r28, 0x3d	; 61
     172:	de b7       	in	r29, 0x3e	; 62
   while ( !(UCSRA & (1<<RXC)) );
     174:	eb e2       	ldi	r30, 0x2B	; 43
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	80 81       	ld	r24, Z
     17a:	88 23       	and	r24, r24
     17c:	dc f7       	brge	.-10     	; 0x174 <ReceiveUSART+0x8>
   return UDR;
     17e:	ec e2       	ldi	r30, 0x2C	; 44
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	80 81       	ld	r24, Z
}
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	08 95       	ret

0000018a <TransmitUSART>:

void TransmitUSART(unsigned char data)  // funkcja wys³ania bajtu przez RS232
{	//czeka na wys³anie poprzedniej danej
     18a:	df 93       	push	r29
     18c:	cf 93       	push	r28
     18e:	0f 92       	push	r0
     190:	cd b7       	in	r28, 0x3d	; 61
     192:	de b7       	in	r29, 0x3e	; 62
     194:	89 83       	std	Y+1, r24	; 0x01
   while ( !( UCSRA & (1<<UDRE)) );
     196:	eb e2       	ldi	r30, 0x2B	; 43
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	80 81       	ld	r24, Z
     19c:	88 2f       	mov	r24, r24
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	80 72       	andi	r24, 0x20	; 32
     1a2:	90 70       	andi	r25, 0x00	; 0
     1a4:	00 97       	sbiw	r24, 0x00	; 0
     1a6:	b9 f3       	breq	.-18     	; 0x196 <TransmitUSART+0xc>
   UDR = data;
     1a8:	ec e2       	ldi	r30, 0x2C	; 44
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	89 81       	ldd	r24, Y+1	; 0x01
     1ae:	80 83       	st	Z, r24
}
     1b0:	0f 90       	pop	r0
     1b2:	cf 91       	pop	r28
     1b4:	df 91       	pop	r29
     1b6:	08 95       	ret

000001b8 <bluetooth_transmit>:

void bluetooth_transmit(char autobusik_char[4])
{
     1b8:	df 93       	push	r29
     1ba:	cf 93       	push	r28
     1bc:	cd b7       	in	r28, 0x3d	; 61
     1be:	de b7       	in	r29, 0x3e	; 62
     1c0:	61 97       	sbiw	r28, 0x11	; 17
     1c2:	0f b6       	in	r0, 0x3f	; 63
     1c4:	f8 94       	cli
     1c6:	de bf       	out	0x3e, r29	; 62
     1c8:	0f be       	out	0x3f, r0	; 63
     1ca:	cd bf       	out	0x3d, r28	; 61
     1cc:	99 8b       	std	Y+17, r25	; 0x11
     1ce:	88 8b       	std	Y+16, r24	; 0x10
	for (uint8_t i=0; i<4; i++)
     1d0:	1f 86       	std	Y+15, r1	; 0x0f
     1d2:	80 c0       	rjmp	.+256    	; 0x2d4 <bluetooth_transmit+0x11c>
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	a0 e2       	ldi	r26, 0x20	; 32
     1da:	b2 e4       	ldi	r27, 0x42	; 66
     1dc:	8b 87       	std	Y+11, r24	; 0x0b
     1de:	9c 87       	std	Y+12, r25	; 0x0c
     1e0:	ad 87       	std	Y+13, r26	; 0x0d
     1e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1e4:	6b 85       	ldd	r22, Y+11	; 0x0b
     1e6:	7c 85       	ldd	r23, Y+12	; 0x0c
     1e8:	8d 85       	ldd	r24, Y+13	; 0x0d
     1ea:	9e 85       	ldd	r25, Y+14	; 0x0e
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	4a e7       	ldi	r20, 0x7A	; 122
     1f2:	55 e4       	ldi	r21, 0x45	; 69
     1f4:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
     1f8:	dc 01       	movw	r26, r24
     1fa:	cb 01       	movw	r24, r22
     1fc:	8f 83       	std	Y+7, r24	; 0x07
     1fe:	98 87       	std	Y+8, r25	; 0x08
     200:	a9 87       	std	Y+9, r26	; 0x09
     202:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     204:	6f 81       	ldd	r22, Y+7	; 0x07
     206:	78 85       	ldd	r23, Y+8	; 0x08
     208:	89 85       	ldd	r24, Y+9	; 0x09
     20a:	9a 85       	ldd	r25, Y+10	; 0x0a
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	40 e8       	ldi	r20, 0x80	; 128
     212:	5f e3       	ldi	r21, 0x3F	; 63
     214:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
     218:	88 23       	and	r24, r24
     21a:	2c f4       	brge	.+10     	; 0x226 <bluetooth_transmit+0x6e>
		__ticks = 1;
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	9e 83       	std	Y+6, r25	; 0x06
     222:	8d 83       	std	Y+5, r24	; 0x05
     224:	3f c0       	rjmp	.+126    	; 0x2a4 <bluetooth_transmit+0xec>
	else if (__tmp > 65535)
     226:	6f 81       	ldd	r22, Y+7	; 0x07
     228:	78 85       	ldd	r23, Y+8	; 0x08
     22a:	89 85       	ldd	r24, Y+9	; 0x09
     22c:	9a 85       	ldd	r25, Y+10	; 0x0a
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	3f ef       	ldi	r19, 0xFF	; 255
     232:	4f e7       	ldi	r20, 0x7F	; 127
     234:	57 e4       	ldi	r21, 0x47	; 71
     236:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
     23a:	18 16       	cp	r1, r24
     23c:	4c f5       	brge	.+82     	; 0x290 <bluetooth_transmit+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     23e:	6b 85       	ldd	r22, Y+11	; 0x0b
     240:	7c 85       	ldd	r23, Y+12	; 0x0c
     242:	8d 85       	ldd	r24, Y+13	; 0x0d
     244:	9e 85       	ldd	r25, Y+14	; 0x0e
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e2       	ldi	r20, 0x20	; 32
     24c:	51 e4       	ldi	r21, 0x41	; 65
     24e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
     252:	dc 01       	movw	r26, r24
     254:	cb 01       	movw	r24, r22
     256:	bc 01       	movw	r22, r24
     258:	cd 01       	movw	r24, r26
     25a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
     25e:	dc 01       	movw	r26, r24
     260:	cb 01       	movw	r24, r22
     262:	9e 83       	std	Y+6, r25	; 0x06
     264:	8d 83       	std	Y+5, r24	; 0x05
     266:	0f c0       	rjmp	.+30     	; 0x286 <bluetooth_transmit+0xce>
     268:	80 e9       	ldi	r24, 0x90	; 144
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	9c 83       	std	Y+4, r25	; 0x04
     26e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     270:	8b 81       	ldd	r24, Y+3	; 0x03
     272:	9c 81       	ldd	r25, Y+4	; 0x04
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <bluetooth_transmit+0xbc>
     278:	9c 83       	std	Y+4, r25	; 0x04
     27a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     27c:	8d 81       	ldd	r24, Y+5	; 0x05
     27e:	9e 81       	ldd	r25, Y+6	; 0x06
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	9e 83       	std	Y+6, r25	; 0x06
     284:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     286:	8d 81       	ldd	r24, Y+5	; 0x05
     288:	9e 81       	ldd	r25, Y+6	; 0x06
     28a:	00 97       	sbiw	r24, 0x00	; 0
     28c:	69 f7       	brne	.-38     	; 0x268 <bluetooth_transmit+0xb0>
     28e:	14 c0       	rjmp	.+40     	; 0x2b8 <bluetooth_transmit+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     290:	6f 81       	ldd	r22, Y+7	; 0x07
     292:	78 85       	ldd	r23, Y+8	; 0x08
     294:	89 85       	ldd	r24, Y+9	; 0x09
     296:	9a 85       	ldd	r25, Y+10	; 0x0a
     298:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
     29c:	dc 01       	movw	r26, r24
     29e:	cb 01       	movw	r24, r22
     2a0:	9e 83       	std	Y+6, r25	; 0x06
     2a2:	8d 83       	std	Y+5, r24	; 0x05
     2a4:	8d 81       	ldd	r24, Y+5	; 0x05
     2a6:	9e 81       	ldd	r25, Y+6	; 0x06
     2a8:	9a 83       	std	Y+2, r25	; 0x02
     2aa:	89 83       	std	Y+1, r24	; 0x01
     2ac:	89 81       	ldd	r24, Y+1	; 0x01
     2ae:	9a 81       	ldd	r25, Y+2	; 0x02
     2b0:	01 97       	sbiw	r24, 0x01	; 1
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <bluetooth_transmit+0xf8>
     2b4:	9a 83       	std	Y+2, r25	; 0x02
     2b6:	89 83       	std	Y+1, r24	; 0x01
	{
		_delay_ms(40);
		TransmitUSART(autobusik_char[i]);
     2b8:	8f 85       	ldd	r24, Y+15	; 0x0f
     2ba:	28 2f       	mov	r18, r24
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	88 89       	ldd	r24, Y+16	; 0x10
     2c0:	99 89       	ldd	r25, Y+17	; 0x11
     2c2:	fc 01       	movw	r30, r24
     2c4:	e2 0f       	add	r30, r18
     2c6:	f3 1f       	adc	r31, r19
     2c8:	80 81       	ld	r24, Z
     2ca:	0e 94 c5 00 	call	0x18a	; 0x18a <TransmitUSART>
   UDR = data;
}

void bluetooth_transmit(char autobusik_char[4])
{
	for (uint8_t i=0; i<4; i++)
     2ce:	8f 85       	ldd	r24, Y+15	; 0x0f
     2d0:	8f 5f       	subi	r24, 0xFF	; 255
     2d2:	8f 87       	std	Y+15, r24	; 0x0f
     2d4:	8f 85       	ldd	r24, Y+15	; 0x0f
     2d6:	84 30       	cpi	r24, 0x04	; 4
     2d8:	08 f4       	brcc	.+2      	; 0x2dc <bluetooth_transmit+0x124>
     2da:	7c cf       	rjmp	.-264    	; 0x1d4 <bluetooth_transmit+0x1c>
	{
		_delay_ms(40);
		TransmitUSART(autobusik_char[i]);
	}
}
     2dc:	61 96       	adiw	r28, 0x11	; 17
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	f8 94       	cli
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	cd bf       	out	0x3d, r28	; 61
     2e8:	cf 91       	pop	r28
     2ea:	df 91       	pop	r29
     2ec:	08 95       	ret

000002ee <wyswietl_numer>:
#include <util/delay.h>
#include <inttypes.h>
#include "lcd44780.h"

// funkcja odpowiedzialna za wyswietlenie wybranego numeru i kierunku, w którym jedzie pojazd komunikacji publicznej
void wyswietl_numer (cyfra){//zamiast wybor wstawic autobusik_uint
     2ee:	df 93       	push	r29
     2f0:	cf 93       	push	r28
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	c7 58       	subi	r28, 0x87	; 135
     2f8:	d1 40       	sbci	r29, 0x01	; 1
     2fa:	0f b6       	in	r0, 0x3f	; 63
     2fc:	f8 94       	cli
     2fe:	de bf       	out	0x3e, r29	; 62
     300:	0f be       	out	0x3f, r0	; 63
     302:	cd bf       	out	0x3d, r28	; 61
     304:	fe 01       	movw	r30, r28
     306:	e5 5e       	subi	r30, 0xE5	; 229
     308:	fe 4f       	sbci	r31, 0xFE	; 254
     30a:	91 83       	std	Z+1, r25	; 0x01
     30c:	80 83       	st	Z, r24
	char zero[] = {"0"};	//0
     30e:	80 91 62 00 	lds	r24, 0x0062
     312:	90 91 63 00 	lds	r25, 0x0063
     316:	9b 83       	std	Y+3, r25	; 0x03
     318:	8a 83       	std	Y+2, r24	; 0x02
	char jeden[] = {"1"};	//1
     31a:	80 91 64 00 	lds	r24, 0x0064
     31e:	90 91 65 00 	lds	r25, 0x0065
     322:	9d 83       	std	Y+5, r25	; 0x05
     324:	8c 83       	std	Y+4, r24	; 0x04
	char dwa[] = {"2"};		//2
     326:	80 91 66 00 	lds	r24, 0x0066
     32a:	90 91 67 00 	lds	r25, 0x0067
     32e:	9f 83       	std	Y+7, r25	; 0x07
     330:	8e 83       	std	Y+6, r24	; 0x06
	char trzy[] = {"3"};	//3
     332:	80 91 68 00 	lds	r24, 0x0068
     336:	90 91 69 00 	lds	r25, 0x0069
     33a:	99 87       	std	Y+9, r25	; 0x09
     33c:	88 87       	std	Y+8, r24	; 0x08
	char cztery[] = {"4"};	//4
     33e:	80 91 6a 00 	lds	r24, 0x006A
     342:	90 91 6b 00 	lds	r25, 0x006B
     346:	9b 87       	std	Y+11, r25	; 0x0b
     348:	8a 87       	std	Y+10, r24	; 0x0a
	char piec[] = {"5"};	//5
     34a:	80 91 6c 00 	lds	r24, 0x006C
     34e:	90 91 6d 00 	lds	r25, 0x006D
     352:	9d 87       	std	Y+13, r25	; 0x0d
     354:	8c 87       	std	Y+12, r24	; 0x0c
	char szesc[] = {"6"};	//6
     356:	80 91 6e 00 	lds	r24, 0x006E
     35a:	90 91 6f 00 	lds	r25, 0x006F
     35e:	9f 87       	std	Y+15, r25	; 0x0f
     360:	8e 87       	std	Y+14, r24	; 0x0e
	char siedem[] = {"7"};	//7
     362:	80 91 70 00 	lds	r24, 0x0070
     366:	90 91 71 00 	lds	r25, 0x0071
     36a:	99 8b       	std	Y+17, r25	; 0x11
     36c:	88 8b       	std	Y+16, r24	; 0x10
	char osiem[] = {"8"};	//8
     36e:	80 91 72 00 	lds	r24, 0x0072
     372:	90 91 73 00 	lds	r25, 0x0073
     376:	9b 8b       	std	Y+19, r25	; 0x13
     378:	8a 8b       	std	Y+18, r24	; 0x12
	char dziewiec[] = {"9"};//9
     37a:	80 91 74 00 	lds	r24, 0x0074
     37e:	90 91 75 00 	lds	r25, 0x0075
     382:	9d 8b       	std	Y+21, r25	; 0x15
     384:	8c 8b       	std	Y+20, r24	; 0x14

	char PKP_Olszynka_Grochowska[] = {"PKP Olsz. Groch."};
     386:	ce 01       	movw	r24, r28
     388:	46 96       	adiw	r24, 0x16	; 22
     38a:	c3 5e       	subi	r28, 0xE3	; 227
     38c:	de 4f       	sbci	r29, 0xFE	; 254
     38e:	99 83       	std	Y+1, r25	; 0x01
     390:	88 83       	st	Y, r24
     392:	cd 51       	subi	r28, 0x1D	; 29
     394:	d1 40       	sbci	r29, 0x01	; 1
     396:	e6 e7       	ldi	r30, 0x76	; 118
     398:	f0 e0       	ldi	r31, 0x00	; 0
     39a:	c1 5e       	subi	r28, 0xE1	; 225
     39c:	de 4f       	sbci	r29, 0xFE	; 254
     39e:	f9 83       	std	Y+1, r31	; 0x01
     3a0:	e8 83       	st	Y, r30
     3a2:	cf 51       	subi	r28, 0x1F	; 31
     3a4:	d1 40       	sbci	r29, 0x01	; 1
     3a6:	f1 e1       	ldi	r31, 0x11	; 17
     3a8:	cf 5d       	subi	r28, 0xDF	; 223
     3aa:	de 4f       	sbci	r29, 0xFE	; 254
     3ac:	f8 83       	st	Y, r31
     3ae:	c1 52       	subi	r28, 0x21	; 33
     3b0:	d1 40       	sbci	r29, 0x01	; 1
     3b2:	c1 5e       	subi	r28, 0xE1	; 225
     3b4:	de 4f       	sbci	r29, 0xFE	; 254
     3b6:	e8 81       	ld	r30, Y
     3b8:	f9 81       	ldd	r31, Y+1	; 0x01
     3ba:	cf 51       	subi	r28, 0x1F	; 31
     3bc:	d1 40       	sbci	r29, 0x01	; 1
     3be:	00 80       	ld	r0, Z
     3c0:	c1 5e       	subi	r28, 0xE1	; 225
     3c2:	de 4f       	sbci	r29, 0xFE	; 254
     3c4:	88 81       	ld	r24, Y
     3c6:	99 81       	ldd	r25, Y+1	; 0x01
     3c8:	cf 51       	subi	r28, 0x1F	; 31
     3ca:	d1 40       	sbci	r29, 0x01	; 1
     3cc:	01 96       	adiw	r24, 0x01	; 1
     3ce:	c1 5e       	subi	r28, 0xE1	; 225
     3d0:	de 4f       	sbci	r29, 0xFE	; 254
     3d2:	99 83       	std	Y+1, r25	; 0x01
     3d4:	88 83       	st	Y, r24
     3d6:	cf 51       	subi	r28, 0x1F	; 31
     3d8:	d1 40       	sbci	r29, 0x01	; 1
     3da:	c3 5e       	subi	r28, 0xE3	; 227
     3dc:	de 4f       	sbci	r29, 0xFE	; 254
     3de:	e8 81       	ld	r30, Y
     3e0:	f9 81       	ldd	r31, Y+1	; 0x01
     3e2:	cd 51       	subi	r28, 0x1D	; 29
     3e4:	d1 40       	sbci	r29, 0x01	; 1
     3e6:	00 82       	st	Z, r0
     3e8:	c3 5e       	subi	r28, 0xE3	; 227
     3ea:	de 4f       	sbci	r29, 0xFE	; 254
     3ec:	88 81       	ld	r24, Y
     3ee:	99 81       	ldd	r25, Y+1	; 0x01
     3f0:	cd 51       	subi	r28, 0x1D	; 29
     3f2:	d1 40       	sbci	r29, 0x01	; 1
     3f4:	01 96       	adiw	r24, 0x01	; 1
     3f6:	c3 5e       	subi	r28, 0xE3	; 227
     3f8:	de 4f       	sbci	r29, 0xFE	; 254
     3fa:	99 83       	std	Y+1, r25	; 0x01
     3fc:	88 83       	st	Y, r24
     3fe:	cd 51       	subi	r28, 0x1D	; 29
     400:	d1 40       	sbci	r29, 0x01	; 1
     402:	cf 5d       	subi	r28, 0xDF	; 223
     404:	de 4f       	sbci	r29, 0xFE	; 254
     406:	98 81       	ld	r25, Y
     408:	c1 52       	subi	r28, 0x21	; 33
     40a:	d1 40       	sbci	r29, 0x01	; 1
     40c:	91 50       	subi	r25, 0x01	; 1
     40e:	cf 5d       	subi	r28, 0xDF	; 223
     410:	de 4f       	sbci	r29, 0xFE	; 254
     412:	98 83       	st	Y, r25
     414:	c1 52       	subi	r28, 0x21	; 33
     416:	d1 40       	sbci	r29, 0x01	; 1
     418:	cf 5d       	subi	r28, 0xDF	; 223
     41a:	de 4f       	sbci	r29, 0xFE	; 254
     41c:	e8 81       	ld	r30, Y
     41e:	c1 52       	subi	r28, 0x21	; 33
     420:	d1 40       	sbci	r29, 0x01	; 1
     422:	ee 23       	and	r30, r30
     424:	31 f6       	brne	.-116    	; 0x3b2 <wyswietl_numer+0xc4>
	char Stare_Bemowo[] = {"Stare Bemowo"};
     426:	ce 01       	movw	r24, r28
     428:	87 96       	adiw	r24, 0x27	; 39
     42a:	ce 5d       	subi	r28, 0xDE	; 222
     42c:	de 4f       	sbci	r29, 0xFE	; 254
     42e:	99 83       	std	Y+1, r25	; 0x01
     430:	88 83       	st	Y, r24
     432:	c2 52       	subi	r28, 0x22	; 34
     434:	d1 40       	sbci	r29, 0x01	; 1
     436:	e7 e8       	ldi	r30, 0x87	; 135
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	cc 5d       	subi	r28, 0xDC	; 220
     43c:	de 4f       	sbci	r29, 0xFE	; 254
     43e:	f9 83       	std	Y+1, r31	; 0x01
     440:	e8 83       	st	Y, r30
     442:	c4 52       	subi	r28, 0x24	; 36
     444:	d1 40       	sbci	r29, 0x01	; 1
     446:	fd e0       	ldi	r31, 0x0D	; 13
     448:	ca 5d       	subi	r28, 0xDA	; 218
     44a:	de 4f       	sbci	r29, 0xFE	; 254
     44c:	f8 83       	st	Y, r31
     44e:	c6 52       	subi	r28, 0x26	; 38
     450:	d1 40       	sbci	r29, 0x01	; 1
     452:	cc 5d       	subi	r28, 0xDC	; 220
     454:	de 4f       	sbci	r29, 0xFE	; 254
     456:	e8 81       	ld	r30, Y
     458:	f9 81       	ldd	r31, Y+1	; 0x01
     45a:	c4 52       	subi	r28, 0x24	; 36
     45c:	d1 40       	sbci	r29, 0x01	; 1
     45e:	00 80       	ld	r0, Z
     460:	cc 5d       	subi	r28, 0xDC	; 220
     462:	de 4f       	sbci	r29, 0xFE	; 254
     464:	88 81       	ld	r24, Y
     466:	99 81       	ldd	r25, Y+1	; 0x01
     468:	c4 52       	subi	r28, 0x24	; 36
     46a:	d1 40       	sbci	r29, 0x01	; 1
     46c:	01 96       	adiw	r24, 0x01	; 1
     46e:	cc 5d       	subi	r28, 0xDC	; 220
     470:	de 4f       	sbci	r29, 0xFE	; 254
     472:	99 83       	std	Y+1, r25	; 0x01
     474:	88 83       	st	Y, r24
     476:	c4 52       	subi	r28, 0x24	; 36
     478:	d1 40       	sbci	r29, 0x01	; 1
     47a:	ce 5d       	subi	r28, 0xDE	; 222
     47c:	de 4f       	sbci	r29, 0xFE	; 254
     47e:	e8 81       	ld	r30, Y
     480:	f9 81       	ldd	r31, Y+1	; 0x01
     482:	c2 52       	subi	r28, 0x22	; 34
     484:	d1 40       	sbci	r29, 0x01	; 1
     486:	00 82       	st	Z, r0
     488:	ce 5d       	subi	r28, 0xDE	; 222
     48a:	de 4f       	sbci	r29, 0xFE	; 254
     48c:	88 81       	ld	r24, Y
     48e:	99 81       	ldd	r25, Y+1	; 0x01
     490:	c2 52       	subi	r28, 0x22	; 34
     492:	d1 40       	sbci	r29, 0x01	; 1
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	ce 5d       	subi	r28, 0xDE	; 222
     498:	de 4f       	sbci	r29, 0xFE	; 254
     49a:	99 83       	std	Y+1, r25	; 0x01
     49c:	88 83       	st	Y, r24
     49e:	c2 52       	subi	r28, 0x22	; 34
     4a0:	d1 40       	sbci	r29, 0x01	; 1
     4a2:	ca 5d       	subi	r28, 0xDA	; 218
     4a4:	de 4f       	sbci	r29, 0xFE	; 254
     4a6:	98 81       	ld	r25, Y
     4a8:	c6 52       	subi	r28, 0x26	; 38
     4aa:	d1 40       	sbci	r29, 0x01	; 1
     4ac:	91 50       	subi	r25, 0x01	; 1
     4ae:	ca 5d       	subi	r28, 0xDA	; 218
     4b0:	de 4f       	sbci	r29, 0xFE	; 254
     4b2:	98 83       	st	Y, r25
     4b4:	c6 52       	subi	r28, 0x26	; 38
     4b6:	d1 40       	sbci	r29, 0x01	; 1
     4b8:	ca 5d       	subi	r28, 0xDA	; 218
     4ba:	de 4f       	sbci	r29, 0xFE	; 254
     4bc:	e8 81       	ld	r30, Y
     4be:	c6 52       	subi	r28, 0x26	; 38
     4c0:	d1 40       	sbci	r29, 0x01	; 1
     4c2:	ee 23       	and	r30, r30
     4c4:	31 f6       	brne	.-116    	; 0x452 <wyswietl_numer+0x164>
	char Osiedle_Gorczewska[] = {"Os. Gorczewska"};
     4c6:	ce 01       	movw	r24, r28
     4c8:	c4 96       	adiw	r24, 0x34	; 52
     4ca:	c9 5d       	subi	r28, 0xD9	; 217
     4cc:	de 4f       	sbci	r29, 0xFE	; 254
     4ce:	99 83       	std	Y+1, r25	; 0x01
     4d0:	88 83       	st	Y, r24
     4d2:	c7 52       	subi	r28, 0x27	; 39
     4d4:	d1 40       	sbci	r29, 0x01	; 1
     4d6:	e4 e9       	ldi	r30, 0x94	; 148
     4d8:	f0 e0       	ldi	r31, 0x00	; 0
     4da:	c7 5d       	subi	r28, 0xD7	; 215
     4dc:	de 4f       	sbci	r29, 0xFE	; 254
     4de:	f9 83       	std	Y+1, r31	; 0x01
     4e0:	e8 83       	st	Y, r30
     4e2:	c9 52       	subi	r28, 0x29	; 41
     4e4:	d1 40       	sbci	r29, 0x01	; 1
     4e6:	ff e0       	ldi	r31, 0x0F	; 15
     4e8:	c5 5d       	subi	r28, 0xD5	; 213
     4ea:	de 4f       	sbci	r29, 0xFE	; 254
     4ec:	f8 83       	st	Y, r31
     4ee:	cb 52       	subi	r28, 0x2B	; 43
     4f0:	d1 40       	sbci	r29, 0x01	; 1
     4f2:	c7 5d       	subi	r28, 0xD7	; 215
     4f4:	de 4f       	sbci	r29, 0xFE	; 254
     4f6:	e8 81       	ld	r30, Y
     4f8:	f9 81       	ldd	r31, Y+1	; 0x01
     4fa:	c9 52       	subi	r28, 0x29	; 41
     4fc:	d1 40       	sbci	r29, 0x01	; 1
     4fe:	00 80       	ld	r0, Z
     500:	c7 5d       	subi	r28, 0xD7	; 215
     502:	de 4f       	sbci	r29, 0xFE	; 254
     504:	88 81       	ld	r24, Y
     506:	99 81       	ldd	r25, Y+1	; 0x01
     508:	c9 52       	subi	r28, 0x29	; 41
     50a:	d1 40       	sbci	r29, 0x01	; 1
     50c:	01 96       	adiw	r24, 0x01	; 1
     50e:	c7 5d       	subi	r28, 0xD7	; 215
     510:	de 4f       	sbci	r29, 0xFE	; 254
     512:	99 83       	std	Y+1, r25	; 0x01
     514:	88 83       	st	Y, r24
     516:	c9 52       	subi	r28, 0x29	; 41
     518:	d1 40       	sbci	r29, 0x01	; 1
     51a:	c9 5d       	subi	r28, 0xD9	; 217
     51c:	de 4f       	sbci	r29, 0xFE	; 254
     51e:	e8 81       	ld	r30, Y
     520:	f9 81       	ldd	r31, Y+1	; 0x01
     522:	c7 52       	subi	r28, 0x27	; 39
     524:	d1 40       	sbci	r29, 0x01	; 1
     526:	00 82       	st	Z, r0
     528:	c9 5d       	subi	r28, 0xD9	; 217
     52a:	de 4f       	sbci	r29, 0xFE	; 254
     52c:	88 81       	ld	r24, Y
     52e:	99 81       	ldd	r25, Y+1	; 0x01
     530:	c7 52       	subi	r28, 0x27	; 39
     532:	d1 40       	sbci	r29, 0x01	; 1
     534:	01 96       	adiw	r24, 0x01	; 1
     536:	c9 5d       	subi	r28, 0xD9	; 217
     538:	de 4f       	sbci	r29, 0xFE	; 254
     53a:	99 83       	std	Y+1, r25	; 0x01
     53c:	88 83       	st	Y, r24
     53e:	c7 52       	subi	r28, 0x27	; 39
     540:	d1 40       	sbci	r29, 0x01	; 1
     542:	c5 5d       	subi	r28, 0xD5	; 213
     544:	de 4f       	sbci	r29, 0xFE	; 254
     546:	98 81       	ld	r25, Y
     548:	cb 52       	subi	r28, 0x2B	; 43
     54a:	d1 40       	sbci	r29, 0x01	; 1
     54c:	91 50       	subi	r25, 0x01	; 1
     54e:	c5 5d       	subi	r28, 0xD5	; 213
     550:	de 4f       	sbci	r29, 0xFE	; 254
     552:	98 83       	st	Y, r25
     554:	cb 52       	subi	r28, 0x2B	; 43
     556:	d1 40       	sbci	r29, 0x01	; 1
     558:	c5 5d       	subi	r28, 0xD5	; 213
     55a:	de 4f       	sbci	r29, 0xFE	; 254
     55c:	e8 81       	ld	r30, Y
     55e:	cb 52       	subi	r28, 0x2B	; 43
     560:	d1 40       	sbci	r29, 0x01	; 1
     562:	ee 23       	and	r30, r30
     564:	31 f6       	brne	.-116    	; 0x4f2 <wyswietl_numer+0x204>
	char Gwiazdzista[] = {"Gwiazdzista"};
     566:	ce 01       	movw	r24, r28
     568:	8d 5b       	subi	r24, 0xBD	; 189
     56a:	9f 4f       	sbci	r25, 0xFF	; 255
     56c:	c4 5d       	subi	r28, 0xD4	; 212
     56e:	de 4f       	sbci	r29, 0xFE	; 254
     570:	99 83       	std	Y+1, r25	; 0x01
     572:	88 83       	st	Y, r24
     574:	cc 52       	subi	r28, 0x2C	; 44
     576:	d1 40       	sbci	r29, 0x01	; 1
     578:	83 ea       	ldi	r24, 0xA3	; 163
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	c2 5d       	subi	r28, 0xD2	; 210
     57e:	de 4f       	sbci	r29, 0xFE	; 254
     580:	99 83       	std	Y+1, r25	; 0x01
     582:	88 83       	st	Y, r24
     584:	ce 52       	subi	r28, 0x2E	; 46
     586:	d1 40       	sbci	r29, 0x01	; 1
     588:	9c e0       	ldi	r25, 0x0C	; 12
     58a:	c0 5d       	subi	r28, 0xD0	; 208
     58c:	de 4f       	sbci	r29, 0xFE	; 254
     58e:	98 83       	st	Y, r25
     590:	c0 53       	subi	r28, 0x30	; 48
     592:	d1 40       	sbci	r29, 0x01	; 1
     594:	c2 5d       	subi	r28, 0xD2	; 210
     596:	de 4f       	sbci	r29, 0xFE	; 254
     598:	e8 81       	ld	r30, Y
     59a:	f9 81       	ldd	r31, Y+1	; 0x01
     59c:	ce 52       	subi	r28, 0x2E	; 46
     59e:	d1 40       	sbci	r29, 0x01	; 1
     5a0:	00 80       	ld	r0, Z
     5a2:	c2 5d       	subi	r28, 0xD2	; 210
     5a4:	de 4f       	sbci	r29, 0xFE	; 254
     5a6:	88 81       	ld	r24, Y
     5a8:	99 81       	ldd	r25, Y+1	; 0x01
     5aa:	ce 52       	subi	r28, 0x2E	; 46
     5ac:	d1 40       	sbci	r29, 0x01	; 1
     5ae:	01 96       	adiw	r24, 0x01	; 1
     5b0:	c2 5d       	subi	r28, 0xD2	; 210
     5b2:	de 4f       	sbci	r29, 0xFE	; 254
     5b4:	99 83       	std	Y+1, r25	; 0x01
     5b6:	88 83       	st	Y, r24
     5b8:	ce 52       	subi	r28, 0x2E	; 46
     5ba:	d1 40       	sbci	r29, 0x01	; 1
     5bc:	c4 5d       	subi	r28, 0xD4	; 212
     5be:	de 4f       	sbci	r29, 0xFE	; 254
     5c0:	e8 81       	ld	r30, Y
     5c2:	f9 81       	ldd	r31, Y+1	; 0x01
     5c4:	cc 52       	subi	r28, 0x2C	; 44
     5c6:	d1 40       	sbci	r29, 0x01	; 1
     5c8:	00 82       	st	Z, r0
     5ca:	c4 5d       	subi	r28, 0xD4	; 212
     5cc:	de 4f       	sbci	r29, 0xFE	; 254
     5ce:	88 81       	ld	r24, Y
     5d0:	99 81       	ldd	r25, Y+1	; 0x01
     5d2:	cc 52       	subi	r28, 0x2C	; 44
     5d4:	d1 40       	sbci	r29, 0x01	; 1
     5d6:	01 96       	adiw	r24, 0x01	; 1
     5d8:	c4 5d       	subi	r28, 0xD4	; 212
     5da:	de 4f       	sbci	r29, 0xFE	; 254
     5dc:	99 83       	std	Y+1, r25	; 0x01
     5de:	88 83       	st	Y, r24
     5e0:	cc 52       	subi	r28, 0x2C	; 44
     5e2:	d1 40       	sbci	r29, 0x01	; 1
     5e4:	c0 5d       	subi	r28, 0xD0	; 208
     5e6:	de 4f       	sbci	r29, 0xFE	; 254
     5e8:	98 81       	ld	r25, Y
     5ea:	c0 53       	subi	r28, 0x30	; 48
     5ec:	d1 40       	sbci	r29, 0x01	; 1
     5ee:	91 50       	subi	r25, 0x01	; 1
     5f0:	c0 5d       	subi	r28, 0xD0	; 208
     5f2:	de 4f       	sbci	r29, 0xFE	; 254
     5f4:	98 83       	st	Y, r25
     5f6:	c0 53       	subi	r28, 0x30	; 48
     5f8:	d1 40       	sbci	r29, 0x01	; 1
     5fa:	c0 5d       	subi	r28, 0xD0	; 208
     5fc:	de 4f       	sbci	r29, 0xFE	; 254
     5fe:	e8 81       	ld	r30, Y
     600:	c0 53       	subi	r28, 0x30	; 48
     602:	d1 40       	sbci	r29, 0x01	; 1
     604:	ee 23       	and	r30, r30
     606:	31 f6       	brne	.-116    	; 0x594 <wyswietl_numer+0x2a6>
	char PR_Al_Krakowska[] = {"P+R Al. Krakow."};
     608:	ce 01       	movw	r24, r28
     60a:	81 5b       	subi	r24, 0xB1	; 177
     60c:	9f 4f       	sbci	r25, 0xFF	; 255
     60e:	cf 5c       	subi	r28, 0xCF	; 207
     610:	de 4f       	sbci	r29, 0xFE	; 254
     612:	99 83       	std	Y+1, r25	; 0x01
     614:	88 83       	st	Y, r24
     616:	c1 53       	subi	r28, 0x31	; 49
     618:	d1 40       	sbci	r29, 0x01	; 1
     61a:	8f ea       	ldi	r24, 0xAF	; 175
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	cd 5c       	subi	r28, 0xCD	; 205
     620:	de 4f       	sbci	r29, 0xFE	; 254
     622:	99 83       	std	Y+1, r25	; 0x01
     624:	88 83       	st	Y, r24
     626:	c3 53       	subi	r28, 0x33	; 51
     628:	d1 40       	sbci	r29, 0x01	; 1
     62a:	90 e1       	ldi	r25, 0x10	; 16
     62c:	cb 5c       	subi	r28, 0xCB	; 203
     62e:	de 4f       	sbci	r29, 0xFE	; 254
     630:	98 83       	st	Y, r25
     632:	c5 53       	subi	r28, 0x35	; 53
     634:	d1 40       	sbci	r29, 0x01	; 1
     636:	cd 5c       	subi	r28, 0xCD	; 205
     638:	de 4f       	sbci	r29, 0xFE	; 254
     63a:	e8 81       	ld	r30, Y
     63c:	f9 81       	ldd	r31, Y+1	; 0x01
     63e:	c3 53       	subi	r28, 0x33	; 51
     640:	d1 40       	sbci	r29, 0x01	; 1
     642:	00 80       	ld	r0, Z
     644:	cd 5c       	subi	r28, 0xCD	; 205
     646:	de 4f       	sbci	r29, 0xFE	; 254
     648:	88 81       	ld	r24, Y
     64a:	99 81       	ldd	r25, Y+1	; 0x01
     64c:	c3 53       	subi	r28, 0x33	; 51
     64e:	d1 40       	sbci	r29, 0x01	; 1
     650:	01 96       	adiw	r24, 0x01	; 1
     652:	cd 5c       	subi	r28, 0xCD	; 205
     654:	de 4f       	sbci	r29, 0xFE	; 254
     656:	99 83       	std	Y+1, r25	; 0x01
     658:	88 83       	st	Y, r24
     65a:	c3 53       	subi	r28, 0x33	; 51
     65c:	d1 40       	sbci	r29, 0x01	; 1
     65e:	cf 5c       	subi	r28, 0xCF	; 207
     660:	de 4f       	sbci	r29, 0xFE	; 254
     662:	e8 81       	ld	r30, Y
     664:	f9 81       	ldd	r31, Y+1	; 0x01
     666:	c1 53       	subi	r28, 0x31	; 49
     668:	d1 40       	sbci	r29, 0x01	; 1
     66a:	00 82       	st	Z, r0
     66c:	cf 5c       	subi	r28, 0xCF	; 207
     66e:	de 4f       	sbci	r29, 0xFE	; 254
     670:	88 81       	ld	r24, Y
     672:	99 81       	ldd	r25, Y+1	; 0x01
     674:	c1 53       	subi	r28, 0x31	; 49
     676:	d1 40       	sbci	r29, 0x01	; 1
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	cf 5c       	subi	r28, 0xCF	; 207
     67c:	de 4f       	sbci	r29, 0xFE	; 254
     67e:	99 83       	std	Y+1, r25	; 0x01
     680:	88 83       	st	Y, r24
     682:	c1 53       	subi	r28, 0x31	; 49
     684:	d1 40       	sbci	r29, 0x01	; 1
     686:	cb 5c       	subi	r28, 0xCB	; 203
     688:	de 4f       	sbci	r29, 0xFE	; 254
     68a:	98 81       	ld	r25, Y
     68c:	c5 53       	subi	r28, 0x35	; 53
     68e:	d1 40       	sbci	r29, 0x01	; 1
     690:	91 50       	subi	r25, 0x01	; 1
     692:	cb 5c       	subi	r28, 0xCB	; 203
     694:	de 4f       	sbci	r29, 0xFE	; 254
     696:	98 83       	st	Y, r25
     698:	c5 53       	subi	r28, 0x35	; 53
     69a:	d1 40       	sbci	r29, 0x01	; 1
     69c:	cb 5c       	subi	r28, 0xCB	; 203
     69e:	de 4f       	sbci	r29, 0xFE	; 254
     6a0:	e8 81       	ld	r30, Y
     6a2:	c5 53       	subi	r28, 0x35	; 53
     6a4:	d1 40       	sbci	r29, 0x01	; 1
     6a6:	ee 23       	and	r30, r30
     6a8:	31 f6       	brne	.-116    	; 0x636 <wyswietl_numer+0x348>
	char Boernerowo[] = {"Boernerowo"};
     6aa:	ce 01       	movw	r24, r28
     6ac:	81 5a       	subi	r24, 0xA1	; 161
     6ae:	9f 4f       	sbci	r25, 0xFF	; 255
     6b0:	ca 5c       	subi	r28, 0xCA	; 202
     6b2:	de 4f       	sbci	r29, 0xFE	; 254
     6b4:	99 83       	std	Y+1, r25	; 0x01
     6b6:	88 83       	st	Y, r24
     6b8:	c6 53       	subi	r28, 0x36	; 54
     6ba:	d1 40       	sbci	r29, 0x01	; 1
     6bc:	8f eb       	ldi	r24, 0xBF	; 191
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	c8 5c       	subi	r28, 0xC8	; 200
     6c2:	de 4f       	sbci	r29, 0xFE	; 254
     6c4:	99 83       	std	Y+1, r25	; 0x01
     6c6:	88 83       	st	Y, r24
     6c8:	c8 53       	subi	r28, 0x38	; 56
     6ca:	d1 40       	sbci	r29, 0x01	; 1
     6cc:	9b e0       	ldi	r25, 0x0B	; 11
     6ce:	c6 5c       	subi	r28, 0xC6	; 198
     6d0:	de 4f       	sbci	r29, 0xFE	; 254
     6d2:	98 83       	st	Y, r25
     6d4:	ca 53       	subi	r28, 0x3A	; 58
     6d6:	d1 40       	sbci	r29, 0x01	; 1
     6d8:	c8 5c       	subi	r28, 0xC8	; 200
     6da:	de 4f       	sbci	r29, 0xFE	; 254
     6dc:	e8 81       	ld	r30, Y
     6de:	f9 81       	ldd	r31, Y+1	; 0x01
     6e0:	c8 53       	subi	r28, 0x38	; 56
     6e2:	d1 40       	sbci	r29, 0x01	; 1
     6e4:	00 80       	ld	r0, Z
     6e6:	c8 5c       	subi	r28, 0xC8	; 200
     6e8:	de 4f       	sbci	r29, 0xFE	; 254
     6ea:	88 81       	ld	r24, Y
     6ec:	99 81       	ldd	r25, Y+1	; 0x01
     6ee:	c8 53       	subi	r28, 0x38	; 56
     6f0:	d1 40       	sbci	r29, 0x01	; 1
     6f2:	01 96       	adiw	r24, 0x01	; 1
     6f4:	c8 5c       	subi	r28, 0xC8	; 200
     6f6:	de 4f       	sbci	r29, 0xFE	; 254
     6f8:	99 83       	std	Y+1, r25	; 0x01
     6fa:	88 83       	st	Y, r24
     6fc:	c8 53       	subi	r28, 0x38	; 56
     6fe:	d1 40       	sbci	r29, 0x01	; 1
     700:	ca 5c       	subi	r28, 0xCA	; 202
     702:	de 4f       	sbci	r29, 0xFE	; 254
     704:	e8 81       	ld	r30, Y
     706:	f9 81       	ldd	r31, Y+1	; 0x01
     708:	c6 53       	subi	r28, 0x36	; 54
     70a:	d1 40       	sbci	r29, 0x01	; 1
     70c:	00 82       	st	Z, r0
     70e:	ca 5c       	subi	r28, 0xCA	; 202
     710:	de 4f       	sbci	r29, 0xFE	; 254
     712:	88 81       	ld	r24, Y
     714:	99 81       	ldd	r25, Y+1	; 0x01
     716:	c6 53       	subi	r28, 0x36	; 54
     718:	d1 40       	sbci	r29, 0x01	; 1
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	ca 5c       	subi	r28, 0xCA	; 202
     71e:	de 4f       	sbci	r29, 0xFE	; 254
     720:	99 83       	std	Y+1, r25	; 0x01
     722:	88 83       	st	Y, r24
     724:	c6 53       	subi	r28, 0x36	; 54
     726:	d1 40       	sbci	r29, 0x01	; 1
     728:	c6 5c       	subi	r28, 0xC6	; 198
     72a:	de 4f       	sbci	r29, 0xFE	; 254
     72c:	98 81       	ld	r25, Y
     72e:	ca 53       	subi	r28, 0x3A	; 58
     730:	d1 40       	sbci	r29, 0x01	; 1
     732:	91 50       	subi	r25, 0x01	; 1
     734:	c6 5c       	subi	r28, 0xC6	; 198
     736:	de 4f       	sbci	r29, 0xFE	; 254
     738:	98 83       	st	Y, r25
     73a:	ca 53       	subi	r28, 0x3A	; 58
     73c:	d1 40       	sbci	r29, 0x01	; 1
     73e:	c6 5c       	subi	r28, 0xC6	; 198
     740:	de 4f       	sbci	r29, 0xFE	; 254
     742:	e8 81       	ld	r30, Y
     744:	ca 53       	subi	r28, 0x3A	; 58
     746:	d1 40       	sbci	r29, 0x01	; 1
     748:	ee 23       	and	r30, r30
     74a:	31 f6       	brne	.-116    	; 0x6d8 <wyswietl_numer+0x3ea>
	char Zeran_FSO[] = {"Zeran FSO"};
     74c:	ce 01       	movw	r24, r28
     74e:	86 59       	subi	r24, 0x96	; 150
     750:	9f 4f       	sbci	r25, 0xFF	; 255
     752:	c5 5c       	subi	r28, 0xC5	; 197
     754:	de 4f       	sbci	r29, 0xFE	; 254
     756:	99 83       	std	Y+1, r25	; 0x01
     758:	88 83       	st	Y, r24
     75a:	cb 53       	subi	r28, 0x3B	; 59
     75c:	d1 40       	sbci	r29, 0x01	; 1
     75e:	8a ec       	ldi	r24, 0xCA	; 202
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	c3 5c       	subi	r28, 0xC3	; 195
     764:	de 4f       	sbci	r29, 0xFE	; 254
     766:	99 83       	std	Y+1, r25	; 0x01
     768:	88 83       	st	Y, r24
     76a:	cd 53       	subi	r28, 0x3D	; 61
     76c:	d1 40       	sbci	r29, 0x01	; 1
     76e:	9a e0       	ldi	r25, 0x0A	; 10
     770:	c1 5c       	subi	r28, 0xC1	; 193
     772:	de 4f       	sbci	r29, 0xFE	; 254
     774:	98 83       	st	Y, r25
     776:	cf 53       	subi	r28, 0x3F	; 63
     778:	d1 40       	sbci	r29, 0x01	; 1
     77a:	c3 5c       	subi	r28, 0xC3	; 195
     77c:	de 4f       	sbci	r29, 0xFE	; 254
     77e:	e8 81       	ld	r30, Y
     780:	f9 81       	ldd	r31, Y+1	; 0x01
     782:	cd 53       	subi	r28, 0x3D	; 61
     784:	d1 40       	sbci	r29, 0x01	; 1
     786:	00 80       	ld	r0, Z
     788:	c3 5c       	subi	r28, 0xC3	; 195
     78a:	de 4f       	sbci	r29, 0xFE	; 254
     78c:	88 81       	ld	r24, Y
     78e:	99 81       	ldd	r25, Y+1	; 0x01
     790:	cd 53       	subi	r28, 0x3D	; 61
     792:	d1 40       	sbci	r29, 0x01	; 1
     794:	01 96       	adiw	r24, 0x01	; 1
     796:	c3 5c       	subi	r28, 0xC3	; 195
     798:	de 4f       	sbci	r29, 0xFE	; 254
     79a:	99 83       	std	Y+1, r25	; 0x01
     79c:	88 83       	st	Y, r24
     79e:	cd 53       	subi	r28, 0x3D	; 61
     7a0:	d1 40       	sbci	r29, 0x01	; 1
     7a2:	c5 5c       	subi	r28, 0xC5	; 197
     7a4:	de 4f       	sbci	r29, 0xFE	; 254
     7a6:	e8 81       	ld	r30, Y
     7a8:	f9 81       	ldd	r31, Y+1	; 0x01
     7aa:	cb 53       	subi	r28, 0x3B	; 59
     7ac:	d1 40       	sbci	r29, 0x01	; 1
     7ae:	00 82       	st	Z, r0
     7b0:	c5 5c       	subi	r28, 0xC5	; 197
     7b2:	de 4f       	sbci	r29, 0xFE	; 254
     7b4:	88 81       	ld	r24, Y
     7b6:	99 81       	ldd	r25, Y+1	; 0x01
     7b8:	cb 53       	subi	r28, 0x3B	; 59
     7ba:	d1 40       	sbci	r29, 0x01	; 1
     7bc:	01 96       	adiw	r24, 0x01	; 1
     7be:	c5 5c       	subi	r28, 0xC5	; 197
     7c0:	de 4f       	sbci	r29, 0xFE	; 254
     7c2:	99 83       	std	Y+1, r25	; 0x01
     7c4:	88 83       	st	Y, r24
     7c6:	cb 53       	subi	r28, 0x3B	; 59
     7c8:	d1 40       	sbci	r29, 0x01	; 1
     7ca:	c1 5c       	subi	r28, 0xC1	; 193
     7cc:	de 4f       	sbci	r29, 0xFE	; 254
     7ce:	98 81       	ld	r25, Y
     7d0:	cf 53       	subi	r28, 0x3F	; 63
     7d2:	d1 40       	sbci	r29, 0x01	; 1
     7d4:	91 50       	subi	r25, 0x01	; 1
     7d6:	c1 5c       	subi	r28, 0xC1	; 193
     7d8:	de 4f       	sbci	r29, 0xFE	; 254
     7da:	98 83       	st	Y, r25
     7dc:	cf 53       	subi	r28, 0x3F	; 63
     7de:	d1 40       	sbci	r29, 0x01	; 1
     7e0:	c1 5c       	subi	r28, 0xC1	; 193
     7e2:	de 4f       	sbci	r29, 0xFE	; 254
     7e4:	e8 81       	ld	r30, Y
     7e6:	cf 53       	subi	r28, 0x3F	; 63
     7e8:	d1 40       	sbci	r29, 0x01	; 1
     7ea:	ee 23       	and	r30, r30
     7ec:	31 f6       	brne	.-116    	; 0x77a <wyswietl_numer+0x48c>
	char Sadyba[] = {"Sadyba"};
     7ee:	ce 01       	movw	r24, r28
     7f0:	8c 58       	subi	r24, 0x8C	; 140
     7f2:	9f 4f       	sbci	r25, 0xFF	; 255
     7f4:	c0 5c       	subi	r28, 0xC0	; 192
     7f6:	de 4f       	sbci	r29, 0xFE	; 254
     7f8:	99 83       	std	Y+1, r25	; 0x01
     7fa:	88 83       	st	Y, r24
     7fc:	c0 54       	subi	r28, 0x40	; 64
     7fe:	d1 40       	sbci	r29, 0x01	; 1
     800:	84 ed       	ldi	r24, 0xD4	; 212
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	ce 5b       	subi	r28, 0xBE	; 190
     806:	de 4f       	sbci	r29, 0xFE	; 254
     808:	99 83       	std	Y+1, r25	; 0x01
     80a:	88 83       	st	Y, r24
     80c:	c2 54       	subi	r28, 0x42	; 66
     80e:	d1 40       	sbci	r29, 0x01	; 1
     810:	97 e0       	ldi	r25, 0x07	; 7
     812:	cc 5b       	subi	r28, 0xBC	; 188
     814:	de 4f       	sbci	r29, 0xFE	; 254
     816:	98 83       	st	Y, r25
     818:	c4 54       	subi	r28, 0x44	; 68
     81a:	d1 40       	sbci	r29, 0x01	; 1
     81c:	ce 5b       	subi	r28, 0xBE	; 190
     81e:	de 4f       	sbci	r29, 0xFE	; 254
     820:	e8 81       	ld	r30, Y
     822:	f9 81       	ldd	r31, Y+1	; 0x01
     824:	c2 54       	subi	r28, 0x42	; 66
     826:	d1 40       	sbci	r29, 0x01	; 1
     828:	00 80       	ld	r0, Z
     82a:	ce 5b       	subi	r28, 0xBE	; 190
     82c:	de 4f       	sbci	r29, 0xFE	; 254
     82e:	88 81       	ld	r24, Y
     830:	99 81       	ldd	r25, Y+1	; 0x01
     832:	c2 54       	subi	r28, 0x42	; 66
     834:	d1 40       	sbci	r29, 0x01	; 1
     836:	01 96       	adiw	r24, 0x01	; 1
     838:	ce 5b       	subi	r28, 0xBE	; 190
     83a:	de 4f       	sbci	r29, 0xFE	; 254
     83c:	99 83       	std	Y+1, r25	; 0x01
     83e:	88 83       	st	Y, r24
     840:	c2 54       	subi	r28, 0x42	; 66
     842:	d1 40       	sbci	r29, 0x01	; 1
     844:	c0 5c       	subi	r28, 0xC0	; 192
     846:	de 4f       	sbci	r29, 0xFE	; 254
     848:	e8 81       	ld	r30, Y
     84a:	f9 81       	ldd	r31, Y+1	; 0x01
     84c:	c0 54       	subi	r28, 0x40	; 64
     84e:	d1 40       	sbci	r29, 0x01	; 1
     850:	00 82       	st	Z, r0
     852:	c0 5c       	subi	r28, 0xC0	; 192
     854:	de 4f       	sbci	r29, 0xFE	; 254
     856:	88 81       	ld	r24, Y
     858:	99 81       	ldd	r25, Y+1	; 0x01
     85a:	c0 54       	subi	r28, 0x40	; 64
     85c:	d1 40       	sbci	r29, 0x01	; 1
     85e:	01 96       	adiw	r24, 0x01	; 1
     860:	c0 5c       	subi	r28, 0xC0	; 192
     862:	de 4f       	sbci	r29, 0xFE	; 254
     864:	99 83       	std	Y+1, r25	; 0x01
     866:	88 83       	st	Y, r24
     868:	c0 54       	subi	r28, 0x40	; 64
     86a:	d1 40       	sbci	r29, 0x01	; 1
     86c:	cc 5b       	subi	r28, 0xBC	; 188
     86e:	de 4f       	sbci	r29, 0xFE	; 254
     870:	98 81       	ld	r25, Y
     872:	c4 54       	subi	r28, 0x44	; 68
     874:	d1 40       	sbci	r29, 0x01	; 1
     876:	91 50       	subi	r25, 0x01	; 1
     878:	cc 5b       	subi	r28, 0xBC	; 188
     87a:	de 4f       	sbci	r29, 0xFE	; 254
     87c:	98 83       	st	Y, r25
     87e:	c4 54       	subi	r28, 0x44	; 68
     880:	d1 40       	sbci	r29, 0x01	; 1
     882:	cc 5b       	subi	r28, 0xBC	; 188
     884:	de 4f       	sbci	r29, 0xFE	; 254
     886:	e8 81       	ld	r30, Y
     888:	c4 54       	subi	r28, 0x44	; 68
     88a:	d1 40       	sbci	r29, 0x01	; 1
     88c:	ee 23       	and	r30, r30
     88e:	31 f6       	brne	.-116    	; 0x81c <wyswietl_numer+0x52e>
	char Szczesliwice[] = {"Szczesliwice"};
     890:	ce 01       	movw	r24, r28
     892:	85 58       	subi	r24, 0x85	; 133
     894:	9f 4f       	sbci	r25, 0xFF	; 255
     896:	cb 5b       	subi	r28, 0xBB	; 187
     898:	de 4f       	sbci	r29, 0xFE	; 254
     89a:	99 83       	std	Y+1, r25	; 0x01
     89c:	88 83       	st	Y, r24
     89e:	c5 54       	subi	r28, 0x45	; 69
     8a0:	d1 40       	sbci	r29, 0x01	; 1
     8a2:	8b ed       	ldi	r24, 0xDB	; 219
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	c9 5b       	subi	r28, 0xB9	; 185
     8a8:	de 4f       	sbci	r29, 0xFE	; 254
     8aa:	99 83       	std	Y+1, r25	; 0x01
     8ac:	88 83       	st	Y, r24
     8ae:	c7 54       	subi	r28, 0x47	; 71
     8b0:	d1 40       	sbci	r29, 0x01	; 1
     8b2:	9d e0       	ldi	r25, 0x0D	; 13
     8b4:	c7 5b       	subi	r28, 0xB7	; 183
     8b6:	de 4f       	sbci	r29, 0xFE	; 254
     8b8:	98 83       	st	Y, r25
     8ba:	c9 54       	subi	r28, 0x49	; 73
     8bc:	d1 40       	sbci	r29, 0x01	; 1
     8be:	c9 5b       	subi	r28, 0xB9	; 185
     8c0:	de 4f       	sbci	r29, 0xFE	; 254
     8c2:	e8 81       	ld	r30, Y
     8c4:	f9 81       	ldd	r31, Y+1	; 0x01
     8c6:	c7 54       	subi	r28, 0x47	; 71
     8c8:	d1 40       	sbci	r29, 0x01	; 1
     8ca:	00 80       	ld	r0, Z
     8cc:	c9 5b       	subi	r28, 0xB9	; 185
     8ce:	de 4f       	sbci	r29, 0xFE	; 254
     8d0:	88 81       	ld	r24, Y
     8d2:	99 81       	ldd	r25, Y+1	; 0x01
     8d4:	c7 54       	subi	r28, 0x47	; 71
     8d6:	d1 40       	sbci	r29, 0x01	; 1
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	c9 5b       	subi	r28, 0xB9	; 185
     8dc:	de 4f       	sbci	r29, 0xFE	; 254
     8de:	99 83       	std	Y+1, r25	; 0x01
     8e0:	88 83       	st	Y, r24
     8e2:	c7 54       	subi	r28, 0x47	; 71
     8e4:	d1 40       	sbci	r29, 0x01	; 1
     8e6:	cb 5b       	subi	r28, 0xBB	; 187
     8e8:	de 4f       	sbci	r29, 0xFE	; 254
     8ea:	e8 81       	ld	r30, Y
     8ec:	f9 81       	ldd	r31, Y+1	; 0x01
     8ee:	c5 54       	subi	r28, 0x45	; 69
     8f0:	d1 40       	sbci	r29, 0x01	; 1
     8f2:	00 82       	st	Z, r0
     8f4:	cb 5b       	subi	r28, 0xBB	; 187
     8f6:	de 4f       	sbci	r29, 0xFE	; 254
     8f8:	88 81       	ld	r24, Y
     8fa:	99 81       	ldd	r25, Y+1	; 0x01
     8fc:	c5 54       	subi	r28, 0x45	; 69
     8fe:	d1 40       	sbci	r29, 0x01	; 1
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	cb 5b       	subi	r28, 0xBB	; 187
     904:	de 4f       	sbci	r29, 0xFE	; 254
     906:	99 83       	std	Y+1, r25	; 0x01
     908:	88 83       	st	Y, r24
     90a:	c5 54       	subi	r28, 0x45	; 69
     90c:	d1 40       	sbci	r29, 0x01	; 1
     90e:	c7 5b       	subi	r28, 0xB7	; 183
     910:	de 4f       	sbci	r29, 0xFE	; 254
     912:	98 81       	ld	r25, Y
     914:	c9 54       	subi	r28, 0x49	; 73
     916:	d1 40       	sbci	r29, 0x01	; 1
     918:	91 50       	subi	r25, 0x01	; 1
     91a:	c7 5b       	subi	r28, 0xB7	; 183
     91c:	de 4f       	sbci	r29, 0xFE	; 254
     91e:	98 83       	st	Y, r25
     920:	c9 54       	subi	r28, 0x49	; 73
     922:	d1 40       	sbci	r29, 0x01	; 1
     924:	c7 5b       	subi	r28, 0xB7	; 183
     926:	de 4f       	sbci	r29, 0xFE	; 254
     928:	e8 81       	ld	r30, Y
     92a:	c9 54       	subi	r28, 0x49	; 73
     92c:	d1 40       	sbci	r29, 0x01	; 1
     92e:	ee 23       	and	r30, r30
     930:	31 f6       	brne	.-116    	; 0x8be <__stack+0x5f>
	char Nowodwory[] = {"Nowodwory"};
     932:	ce 01       	movw	r24, r28
     934:	88 57       	subi	r24, 0x78	; 120
     936:	9f 4f       	sbci	r25, 0xFF	; 255
     938:	c6 5b       	subi	r28, 0xB6	; 182
     93a:	de 4f       	sbci	r29, 0xFE	; 254
     93c:	99 83       	std	Y+1, r25	; 0x01
     93e:	88 83       	st	Y, r24
     940:	ca 54       	subi	r28, 0x4A	; 74
     942:	d1 40       	sbci	r29, 0x01	; 1
     944:	88 ee       	ldi	r24, 0xE8	; 232
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	c4 5b       	subi	r28, 0xB4	; 180
     94a:	de 4f       	sbci	r29, 0xFE	; 254
     94c:	99 83       	std	Y+1, r25	; 0x01
     94e:	88 83       	st	Y, r24
     950:	cc 54       	subi	r28, 0x4C	; 76
     952:	d1 40       	sbci	r29, 0x01	; 1
     954:	9a e0       	ldi	r25, 0x0A	; 10
     956:	c2 5b       	subi	r28, 0xB2	; 178
     958:	de 4f       	sbci	r29, 0xFE	; 254
     95a:	98 83       	st	Y, r25
     95c:	ce 54       	subi	r28, 0x4E	; 78
     95e:	d1 40       	sbci	r29, 0x01	; 1
     960:	c4 5b       	subi	r28, 0xB4	; 180
     962:	de 4f       	sbci	r29, 0xFE	; 254
     964:	e8 81       	ld	r30, Y
     966:	f9 81       	ldd	r31, Y+1	; 0x01
     968:	cc 54       	subi	r28, 0x4C	; 76
     96a:	d1 40       	sbci	r29, 0x01	; 1
     96c:	00 80       	ld	r0, Z
     96e:	c4 5b       	subi	r28, 0xB4	; 180
     970:	de 4f       	sbci	r29, 0xFE	; 254
     972:	88 81       	ld	r24, Y
     974:	99 81       	ldd	r25, Y+1	; 0x01
     976:	cc 54       	subi	r28, 0x4C	; 76
     978:	d1 40       	sbci	r29, 0x01	; 1
     97a:	01 96       	adiw	r24, 0x01	; 1
     97c:	c4 5b       	subi	r28, 0xB4	; 180
     97e:	de 4f       	sbci	r29, 0xFE	; 254
     980:	99 83       	std	Y+1, r25	; 0x01
     982:	88 83       	st	Y, r24
     984:	cc 54       	subi	r28, 0x4C	; 76
     986:	d1 40       	sbci	r29, 0x01	; 1
     988:	c6 5b       	subi	r28, 0xB6	; 182
     98a:	de 4f       	sbci	r29, 0xFE	; 254
     98c:	e8 81       	ld	r30, Y
     98e:	f9 81       	ldd	r31, Y+1	; 0x01
     990:	ca 54       	subi	r28, 0x4A	; 74
     992:	d1 40       	sbci	r29, 0x01	; 1
     994:	00 82       	st	Z, r0
     996:	c6 5b       	subi	r28, 0xB6	; 182
     998:	de 4f       	sbci	r29, 0xFE	; 254
     99a:	88 81       	ld	r24, Y
     99c:	99 81       	ldd	r25, Y+1	; 0x01
     99e:	ca 54       	subi	r28, 0x4A	; 74
     9a0:	d1 40       	sbci	r29, 0x01	; 1
     9a2:	01 96       	adiw	r24, 0x01	; 1
     9a4:	c6 5b       	subi	r28, 0xB6	; 182
     9a6:	de 4f       	sbci	r29, 0xFE	; 254
     9a8:	99 83       	std	Y+1, r25	; 0x01
     9aa:	88 83       	st	Y, r24
     9ac:	ca 54       	subi	r28, 0x4A	; 74
     9ae:	d1 40       	sbci	r29, 0x01	; 1
     9b0:	c2 5b       	subi	r28, 0xB2	; 178
     9b2:	de 4f       	sbci	r29, 0xFE	; 254
     9b4:	98 81       	ld	r25, Y
     9b6:	ce 54       	subi	r28, 0x4E	; 78
     9b8:	d1 40       	sbci	r29, 0x01	; 1
     9ba:	91 50       	subi	r25, 0x01	; 1
     9bc:	c2 5b       	subi	r28, 0xB2	; 178
     9be:	de 4f       	sbci	r29, 0xFE	; 254
     9c0:	98 83       	st	Y, r25
     9c2:	ce 54       	subi	r28, 0x4E	; 78
     9c4:	d1 40       	sbci	r29, 0x01	; 1
     9c6:	c2 5b       	subi	r28, 0xB2	; 178
     9c8:	de 4f       	sbci	r29, 0xFE	; 254
     9ca:	e8 81       	ld	r30, Y
     9cc:	ce 54       	subi	r28, 0x4E	; 78
     9ce:	d1 40       	sbci	r29, 0x01	; 1
     9d0:	ee 23       	and	r30, r30
     9d2:	31 f6       	brne	.-116    	; 0x960 <__stack+0x101>
	char Metro_Mlociny[] = {"Metro Mlociny"};
     9d4:	ce 01       	movw	r24, r28
     9d6:	8e 56       	subi	r24, 0x6E	; 110
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	c1 5b       	subi	r28, 0xB1	; 177
     9dc:	de 4f       	sbci	r29, 0xFE	; 254
     9de:	99 83       	std	Y+1, r25	; 0x01
     9e0:	88 83       	st	Y, r24
     9e2:	cf 54       	subi	r28, 0x4F	; 79
     9e4:	d1 40       	sbci	r29, 0x01	; 1
     9e6:	82 ef       	ldi	r24, 0xF2	; 242
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	cf 5a       	subi	r28, 0xAF	; 175
     9ec:	de 4f       	sbci	r29, 0xFE	; 254
     9ee:	99 83       	std	Y+1, r25	; 0x01
     9f0:	88 83       	st	Y, r24
     9f2:	c1 55       	subi	r28, 0x51	; 81
     9f4:	d1 40       	sbci	r29, 0x01	; 1
     9f6:	9e e0       	ldi	r25, 0x0E	; 14
     9f8:	cd 5a       	subi	r28, 0xAD	; 173
     9fa:	de 4f       	sbci	r29, 0xFE	; 254
     9fc:	98 83       	st	Y, r25
     9fe:	c3 55       	subi	r28, 0x53	; 83
     a00:	d1 40       	sbci	r29, 0x01	; 1
     a02:	cf 5a       	subi	r28, 0xAF	; 175
     a04:	de 4f       	sbci	r29, 0xFE	; 254
     a06:	e8 81       	ld	r30, Y
     a08:	f9 81       	ldd	r31, Y+1	; 0x01
     a0a:	c1 55       	subi	r28, 0x51	; 81
     a0c:	d1 40       	sbci	r29, 0x01	; 1
     a0e:	00 80       	ld	r0, Z
     a10:	cf 5a       	subi	r28, 0xAF	; 175
     a12:	de 4f       	sbci	r29, 0xFE	; 254
     a14:	88 81       	ld	r24, Y
     a16:	99 81       	ldd	r25, Y+1	; 0x01
     a18:	c1 55       	subi	r28, 0x51	; 81
     a1a:	d1 40       	sbci	r29, 0x01	; 1
     a1c:	01 96       	adiw	r24, 0x01	; 1
     a1e:	cf 5a       	subi	r28, 0xAF	; 175
     a20:	de 4f       	sbci	r29, 0xFE	; 254
     a22:	99 83       	std	Y+1, r25	; 0x01
     a24:	88 83       	st	Y, r24
     a26:	c1 55       	subi	r28, 0x51	; 81
     a28:	d1 40       	sbci	r29, 0x01	; 1
     a2a:	c1 5b       	subi	r28, 0xB1	; 177
     a2c:	de 4f       	sbci	r29, 0xFE	; 254
     a2e:	e8 81       	ld	r30, Y
     a30:	f9 81       	ldd	r31, Y+1	; 0x01
     a32:	cf 54       	subi	r28, 0x4F	; 79
     a34:	d1 40       	sbci	r29, 0x01	; 1
     a36:	00 82       	st	Z, r0
     a38:	c1 5b       	subi	r28, 0xB1	; 177
     a3a:	de 4f       	sbci	r29, 0xFE	; 254
     a3c:	88 81       	ld	r24, Y
     a3e:	99 81       	ldd	r25, Y+1	; 0x01
     a40:	cf 54       	subi	r28, 0x4F	; 79
     a42:	d1 40       	sbci	r29, 0x01	; 1
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	c1 5b       	subi	r28, 0xB1	; 177
     a48:	de 4f       	sbci	r29, 0xFE	; 254
     a4a:	99 83       	std	Y+1, r25	; 0x01
     a4c:	88 83       	st	Y, r24
     a4e:	cf 54       	subi	r28, 0x4F	; 79
     a50:	d1 40       	sbci	r29, 0x01	; 1
     a52:	cd 5a       	subi	r28, 0xAD	; 173
     a54:	de 4f       	sbci	r29, 0xFE	; 254
     a56:	98 81       	ld	r25, Y
     a58:	c3 55       	subi	r28, 0x53	; 83
     a5a:	d1 40       	sbci	r29, 0x01	; 1
     a5c:	91 50       	subi	r25, 0x01	; 1
     a5e:	cd 5a       	subi	r28, 0xAD	; 173
     a60:	de 4f       	sbci	r29, 0xFE	; 254
     a62:	98 83       	st	Y, r25
     a64:	c3 55       	subi	r28, 0x53	; 83
     a66:	d1 40       	sbci	r29, 0x01	; 1
     a68:	cd 5a       	subi	r28, 0xAD	; 173
     a6a:	de 4f       	sbci	r29, 0xFE	; 254
     a6c:	e8 81       	ld	r30, Y
     a6e:	c3 55       	subi	r28, 0x53	; 83
     a70:	d1 40       	sbci	r29, 0x01	; 1
     a72:	ee 23       	and	r30, r30
     a74:	31 f6       	brne	.-116    	; 0xa02 <__stack+0x1a3>
	char CH_Blue_City[] = {"CH Blue City"};
     a76:	ce 01       	movw	r24, r28
     a78:	80 56       	subi	r24, 0x60	; 96
     a7a:	9f 4f       	sbci	r25, 0xFF	; 255
     a7c:	cc 5a       	subi	r28, 0xAC	; 172
     a7e:	de 4f       	sbci	r29, 0xFE	; 254
     a80:	99 83       	std	Y+1, r25	; 0x01
     a82:	88 83       	st	Y, r24
     a84:	c4 55       	subi	r28, 0x54	; 84
     a86:	d1 40       	sbci	r29, 0x01	; 1
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	ca 5a       	subi	r28, 0xAA	; 170
     a8e:	de 4f       	sbci	r29, 0xFE	; 254
     a90:	99 83       	std	Y+1, r25	; 0x01
     a92:	88 83       	st	Y, r24
     a94:	c6 55       	subi	r28, 0x56	; 86
     a96:	d1 40       	sbci	r29, 0x01	; 1
     a98:	9d e0       	ldi	r25, 0x0D	; 13
     a9a:	c8 5a       	subi	r28, 0xA8	; 168
     a9c:	de 4f       	sbci	r29, 0xFE	; 254
     a9e:	98 83       	st	Y, r25
     aa0:	c8 55       	subi	r28, 0x58	; 88
     aa2:	d1 40       	sbci	r29, 0x01	; 1
     aa4:	ca 5a       	subi	r28, 0xAA	; 170
     aa6:	de 4f       	sbci	r29, 0xFE	; 254
     aa8:	e8 81       	ld	r30, Y
     aaa:	f9 81       	ldd	r31, Y+1	; 0x01
     aac:	c6 55       	subi	r28, 0x56	; 86
     aae:	d1 40       	sbci	r29, 0x01	; 1
     ab0:	00 80       	ld	r0, Z
     ab2:	ca 5a       	subi	r28, 0xAA	; 170
     ab4:	de 4f       	sbci	r29, 0xFE	; 254
     ab6:	88 81       	ld	r24, Y
     ab8:	99 81       	ldd	r25, Y+1	; 0x01
     aba:	c6 55       	subi	r28, 0x56	; 86
     abc:	d1 40       	sbci	r29, 0x01	; 1
     abe:	01 96       	adiw	r24, 0x01	; 1
     ac0:	ca 5a       	subi	r28, 0xAA	; 170
     ac2:	de 4f       	sbci	r29, 0xFE	; 254
     ac4:	99 83       	std	Y+1, r25	; 0x01
     ac6:	88 83       	st	Y, r24
     ac8:	c6 55       	subi	r28, 0x56	; 86
     aca:	d1 40       	sbci	r29, 0x01	; 1
     acc:	cc 5a       	subi	r28, 0xAC	; 172
     ace:	de 4f       	sbci	r29, 0xFE	; 254
     ad0:	e8 81       	ld	r30, Y
     ad2:	f9 81       	ldd	r31, Y+1	; 0x01
     ad4:	c4 55       	subi	r28, 0x54	; 84
     ad6:	d1 40       	sbci	r29, 0x01	; 1
     ad8:	00 82       	st	Z, r0
     ada:	cc 5a       	subi	r28, 0xAC	; 172
     adc:	de 4f       	sbci	r29, 0xFE	; 254
     ade:	88 81       	ld	r24, Y
     ae0:	99 81       	ldd	r25, Y+1	; 0x01
     ae2:	c4 55       	subi	r28, 0x54	; 84
     ae4:	d1 40       	sbci	r29, 0x01	; 1
     ae6:	01 96       	adiw	r24, 0x01	; 1
     ae8:	cc 5a       	subi	r28, 0xAC	; 172
     aea:	de 4f       	sbci	r29, 0xFE	; 254
     aec:	99 83       	std	Y+1, r25	; 0x01
     aee:	88 83       	st	Y, r24
     af0:	c4 55       	subi	r28, 0x54	; 84
     af2:	d1 40       	sbci	r29, 0x01	; 1
     af4:	c8 5a       	subi	r28, 0xA8	; 168
     af6:	de 4f       	sbci	r29, 0xFE	; 254
     af8:	98 81       	ld	r25, Y
     afa:	c8 55       	subi	r28, 0x58	; 88
     afc:	d1 40       	sbci	r29, 0x01	; 1
     afe:	91 50       	subi	r25, 0x01	; 1
     b00:	c8 5a       	subi	r28, 0xA8	; 168
     b02:	de 4f       	sbci	r29, 0xFE	; 254
     b04:	98 83       	st	Y, r25
     b06:	c8 55       	subi	r28, 0x58	; 88
     b08:	d1 40       	sbci	r29, 0x01	; 1
     b0a:	c8 5a       	subi	r28, 0xA8	; 168
     b0c:	de 4f       	sbci	r29, 0xFE	; 254
     b0e:	e8 81       	ld	r30, Y
     b10:	c8 55       	subi	r28, 0x58	; 88
     b12:	d1 40       	sbci	r29, 0x01	; 1
     b14:	ee 23       	and	r30, r30
     b16:	31 f6       	brne	.-116    	; 0xaa4 <__stack+0x245>
	char CH_Reduta[] ={"CH Reduta"};
     b18:	ce 01       	movw	r24, r28
     b1a:	83 55       	subi	r24, 0x53	; 83
     b1c:	9f 4f       	sbci	r25, 0xFF	; 255
     b1e:	c7 5a       	subi	r28, 0xA7	; 167
     b20:	de 4f       	sbci	r29, 0xFE	; 254
     b22:	99 83       	std	Y+1, r25	; 0x01
     b24:	88 83       	st	Y, r24
     b26:	c9 55       	subi	r28, 0x59	; 89
     b28:	d1 40       	sbci	r29, 0x01	; 1
     b2a:	8d e0       	ldi	r24, 0x0D	; 13
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	c5 5a       	subi	r28, 0xA5	; 165
     b30:	de 4f       	sbci	r29, 0xFE	; 254
     b32:	99 83       	std	Y+1, r25	; 0x01
     b34:	88 83       	st	Y, r24
     b36:	cb 55       	subi	r28, 0x5B	; 91
     b38:	d1 40       	sbci	r29, 0x01	; 1
     b3a:	9a e0       	ldi	r25, 0x0A	; 10
     b3c:	c3 5a       	subi	r28, 0xA3	; 163
     b3e:	de 4f       	sbci	r29, 0xFE	; 254
     b40:	98 83       	st	Y, r25
     b42:	cd 55       	subi	r28, 0x5D	; 93
     b44:	d1 40       	sbci	r29, 0x01	; 1
     b46:	c5 5a       	subi	r28, 0xA5	; 165
     b48:	de 4f       	sbci	r29, 0xFE	; 254
     b4a:	e8 81       	ld	r30, Y
     b4c:	f9 81       	ldd	r31, Y+1	; 0x01
     b4e:	cb 55       	subi	r28, 0x5B	; 91
     b50:	d1 40       	sbci	r29, 0x01	; 1
     b52:	00 80       	ld	r0, Z
     b54:	c5 5a       	subi	r28, 0xA5	; 165
     b56:	de 4f       	sbci	r29, 0xFE	; 254
     b58:	88 81       	ld	r24, Y
     b5a:	99 81       	ldd	r25, Y+1	; 0x01
     b5c:	cb 55       	subi	r28, 0x5B	; 91
     b5e:	d1 40       	sbci	r29, 0x01	; 1
     b60:	01 96       	adiw	r24, 0x01	; 1
     b62:	c5 5a       	subi	r28, 0xA5	; 165
     b64:	de 4f       	sbci	r29, 0xFE	; 254
     b66:	99 83       	std	Y+1, r25	; 0x01
     b68:	88 83       	st	Y, r24
     b6a:	cb 55       	subi	r28, 0x5B	; 91
     b6c:	d1 40       	sbci	r29, 0x01	; 1
     b6e:	c7 5a       	subi	r28, 0xA7	; 167
     b70:	de 4f       	sbci	r29, 0xFE	; 254
     b72:	e8 81       	ld	r30, Y
     b74:	f9 81       	ldd	r31, Y+1	; 0x01
     b76:	c9 55       	subi	r28, 0x59	; 89
     b78:	d1 40       	sbci	r29, 0x01	; 1
     b7a:	00 82       	st	Z, r0
     b7c:	c7 5a       	subi	r28, 0xA7	; 167
     b7e:	de 4f       	sbci	r29, 0xFE	; 254
     b80:	88 81       	ld	r24, Y
     b82:	99 81       	ldd	r25, Y+1	; 0x01
     b84:	c9 55       	subi	r28, 0x59	; 89
     b86:	d1 40       	sbci	r29, 0x01	; 1
     b88:	01 96       	adiw	r24, 0x01	; 1
     b8a:	c7 5a       	subi	r28, 0xA7	; 167
     b8c:	de 4f       	sbci	r29, 0xFE	; 254
     b8e:	99 83       	std	Y+1, r25	; 0x01
     b90:	88 83       	st	Y, r24
     b92:	c9 55       	subi	r28, 0x59	; 89
     b94:	d1 40       	sbci	r29, 0x01	; 1
     b96:	c3 5a       	subi	r28, 0xA3	; 163
     b98:	de 4f       	sbci	r29, 0xFE	; 254
     b9a:	98 81       	ld	r25, Y
     b9c:	cd 55       	subi	r28, 0x5D	; 93
     b9e:	d1 40       	sbci	r29, 0x01	; 1
     ba0:	91 50       	subi	r25, 0x01	; 1
     ba2:	c3 5a       	subi	r28, 0xA3	; 163
     ba4:	de 4f       	sbci	r29, 0xFE	; 254
     ba6:	98 83       	st	Y, r25
     ba8:	cd 55       	subi	r28, 0x5D	; 93
     baa:	d1 40       	sbci	r29, 0x01	; 1
     bac:	c3 5a       	subi	r28, 0xA3	; 163
     bae:	de 4f       	sbci	r29, 0xFE	; 254
     bb0:	e8 81       	ld	r30, Y
     bb2:	cd 55       	subi	r28, 0x5D	; 93
     bb4:	d1 40       	sbci	r29, 0x01	; 1
     bb6:	ee 23       	and	r30, r30
     bb8:	31 f6       	brne	.-116    	; 0xb46 <__stack+0x2e7>
	char Witolin[] = {"Witolin"};
     bba:	ce 01       	movw	r24, r28
     bbc:	89 54       	subi	r24, 0x49	; 73
     bbe:	9f 4f       	sbci	r25, 0xFF	; 255
     bc0:	c2 5a       	subi	r28, 0xA2	; 162
     bc2:	de 4f       	sbci	r29, 0xFE	; 254
     bc4:	99 83       	std	Y+1, r25	; 0x01
     bc6:	88 83       	st	Y, r24
     bc8:	ce 55       	subi	r28, 0x5E	; 94
     bca:	d1 40       	sbci	r29, 0x01	; 1
     bcc:	87 e1       	ldi	r24, 0x17	; 23
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	c0 5a       	subi	r28, 0xA0	; 160
     bd2:	de 4f       	sbci	r29, 0xFE	; 254
     bd4:	99 83       	std	Y+1, r25	; 0x01
     bd6:	88 83       	st	Y, r24
     bd8:	c0 56       	subi	r28, 0x60	; 96
     bda:	d1 40       	sbci	r29, 0x01	; 1
     bdc:	98 e0       	ldi	r25, 0x08	; 8
     bde:	ce 59       	subi	r28, 0x9E	; 158
     be0:	de 4f       	sbci	r29, 0xFE	; 254
     be2:	98 83       	st	Y, r25
     be4:	c2 56       	subi	r28, 0x62	; 98
     be6:	d1 40       	sbci	r29, 0x01	; 1
     be8:	c0 5a       	subi	r28, 0xA0	; 160
     bea:	de 4f       	sbci	r29, 0xFE	; 254
     bec:	e8 81       	ld	r30, Y
     bee:	f9 81       	ldd	r31, Y+1	; 0x01
     bf0:	c0 56       	subi	r28, 0x60	; 96
     bf2:	d1 40       	sbci	r29, 0x01	; 1
     bf4:	00 80       	ld	r0, Z
     bf6:	c0 5a       	subi	r28, 0xA0	; 160
     bf8:	de 4f       	sbci	r29, 0xFE	; 254
     bfa:	88 81       	ld	r24, Y
     bfc:	99 81       	ldd	r25, Y+1	; 0x01
     bfe:	c0 56       	subi	r28, 0x60	; 96
     c00:	d1 40       	sbci	r29, 0x01	; 1
     c02:	01 96       	adiw	r24, 0x01	; 1
     c04:	c0 5a       	subi	r28, 0xA0	; 160
     c06:	de 4f       	sbci	r29, 0xFE	; 254
     c08:	99 83       	std	Y+1, r25	; 0x01
     c0a:	88 83       	st	Y, r24
     c0c:	c0 56       	subi	r28, 0x60	; 96
     c0e:	d1 40       	sbci	r29, 0x01	; 1
     c10:	c2 5a       	subi	r28, 0xA2	; 162
     c12:	de 4f       	sbci	r29, 0xFE	; 254
     c14:	e8 81       	ld	r30, Y
     c16:	f9 81       	ldd	r31, Y+1	; 0x01
     c18:	ce 55       	subi	r28, 0x5E	; 94
     c1a:	d1 40       	sbci	r29, 0x01	; 1
     c1c:	00 82       	st	Z, r0
     c1e:	c2 5a       	subi	r28, 0xA2	; 162
     c20:	de 4f       	sbci	r29, 0xFE	; 254
     c22:	88 81       	ld	r24, Y
     c24:	99 81       	ldd	r25, Y+1	; 0x01
     c26:	ce 55       	subi	r28, 0x5E	; 94
     c28:	d1 40       	sbci	r29, 0x01	; 1
     c2a:	01 96       	adiw	r24, 0x01	; 1
     c2c:	c2 5a       	subi	r28, 0xA2	; 162
     c2e:	de 4f       	sbci	r29, 0xFE	; 254
     c30:	99 83       	std	Y+1, r25	; 0x01
     c32:	88 83       	st	Y, r24
     c34:	ce 55       	subi	r28, 0x5E	; 94
     c36:	d1 40       	sbci	r29, 0x01	; 1
     c38:	ce 59       	subi	r28, 0x9E	; 158
     c3a:	de 4f       	sbci	r29, 0xFE	; 254
     c3c:	98 81       	ld	r25, Y
     c3e:	c2 56       	subi	r28, 0x62	; 98
     c40:	d1 40       	sbci	r29, 0x01	; 1
     c42:	91 50       	subi	r25, 0x01	; 1
     c44:	ce 59       	subi	r28, 0x9E	; 158
     c46:	de 4f       	sbci	r29, 0xFE	; 254
     c48:	98 83       	st	Y, r25
     c4a:	c2 56       	subi	r28, 0x62	; 98
     c4c:	d1 40       	sbci	r29, 0x01	; 1
     c4e:	ce 59       	subi	r28, 0x9E	; 158
     c50:	de 4f       	sbci	r29, 0xFE	; 254
     c52:	e8 81       	ld	r30, Y
     c54:	c2 56       	subi	r28, 0x62	; 98
     c56:	d1 40       	sbci	r29, 0x01	; 1
     c58:	ee 23       	and	r30, r30
     c5a:	31 f6       	brne	.-116    	; 0xbe8 <__stack+0x389>
	char Natolin_Pln[] = {"Natolin Polnocny"};
     c5c:	ce 01       	movw	r24, r28
     c5e:	81 54       	subi	r24, 0x41	; 65
     c60:	9f 4f       	sbci	r25, 0xFF	; 255
     c62:	cd 59       	subi	r28, 0x9D	; 157
     c64:	de 4f       	sbci	r29, 0xFE	; 254
     c66:	99 83       	std	Y+1, r25	; 0x01
     c68:	88 83       	st	Y, r24
     c6a:	c3 56       	subi	r28, 0x63	; 99
     c6c:	d1 40       	sbci	r29, 0x01	; 1
     c6e:	8f e1       	ldi	r24, 0x1F	; 31
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	cb 59       	subi	r28, 0x9B	; 155
     c74:	de 4f       	sbci	r29, 0xFE	; 254
     c76:	99 83       	std	Y+1, r25	; 0x01
     c78:	88 83       	st	Y, r24
     c7a:	c5 56       	subi	r28, 0x65	; 101
     c7c:	d1 40       	sbci	r29, 0x01	; 1
     c7e:	91 e1       	ldi	r25, 0x11	; 17
     c80:	c9 59       	subi	r28, 0x99	; 153
     c82:	de 4f       	sbci	r29, 0xFE	; 254
     c84:	98 83       	st	Y, r25
     c86:	c7 56       	subi	r28, 0x67	; 103
     c88:	d1 40       	sbci	r29, 0x01	; 1
     c8a:	cb 59       	subi	r28, 0x9B	; 155
     c8c:	de 4f       	sbci	r29, 0xFE	; 254
     c8e:	e8 81       	ld	r30, Y
     c90:	f9 81       	ldd	r31, Y+1	; 0x01
     c92:	c5 56       	subi	r28, 0x65	; 101
     c94:	d1 40       	sbci	r29, 0x01	; 1
     c96:	00 80       	ld	r0, Z
     c98:	cb 59       	subi	r28, 0x9B	; 155
     c9a:	de 4f       	sbci	r29, 0xFE	; 254
     c9c:	88 81       	ld	r24, Y
     c9e:	99 81       	ldd	r25, Y+1	; 0x01
     ca0:	c5 56       	subi	r28, 0x65	; 101
     ca2:	d1 40       	sbci	r29, 0x01	; 1
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	cb 59       	subi	r28, 0x9B	; 155
     ca8:	de 4f       	sbci	r29, 0xFE	; 254
     caa:	99 83       	std	Y+1, r25	; 0x01
     cac:	88 83       	st	Y, r24
     cae:	c5 56       	subi	r28, 0x65	; 101
     cb0:	d1 40       	sbci	r29, 0x01	; 1
     cb2:	cd 59       	subi	r28, 0x9D	; 157
     cb4:	de 4f       	sbci	r29, 0xFE	; 254
     cb6:	e8 81       	ld	r30, Y
     cb8:	f9 81       	ldd	r31, Y+1	; 0x01
     cba:	c3 56       	subi	r28, 0x63	; 99
     cbc:	d1 40       	sbci	r29, 0x01	; 1
     cbe:	00 82       	st	Z, r0
     cc0:	cd 59       	subi	r28, 0x9D	; 157
     cc2:	de 4f       	sbci	r29, 0xFE	; 254
     cc4:	88 81       	ld	r24, Y
     cc6:	99 81       	ldd	r25, Y+1	; 0x01
     cc8:	c3 56       	subi	r28, 0x63	; 99
     cca:	d1 40       	sbci	r29, 0x01	; 1
     ccc:	01 96       	adiw	r24, 0x01	; 1
     cce:	cd 59       	subi	r28, 0x9D	; 157
     cd0:	de 4f       	sbci	r29, 0xFE	; 254
     cd2:	99 83       	std	Y+1, r25	; 0x01
     cd4:	88 83       	st	Y, r24
     cd6:	c3 56       	subi	r28, 0x63	; 99
     cd8:	d1 40       	sbci	r29, 0x01	; 1
     cda:	c9 59       	subi	r28, 0x99	; 153
     cdc:	de 4f       	sbci	r29, 0xFE	; 254
     cde:	98 81       	ld	r25, Y
     ce0:	c7 56       	subi	r28, 0x67	; 103
     ce2:	d1 40       	sbci	r29, 0x01	; 1
     ce4:	91 50       	subi	r25, 0x01	; 1
     ce6:	c9 59       	subi	r28, 0x99	; 153
     ce8:	de 4f       	sbci	r29, 0xFE	; 254
     cea:	98 83       	st	Y, r25
     cec:	c7 56       	subi	r28, 0x67	; 103
     cee:	d1 40       	sbci	r29, 0x01	; 1
     cf0:	c9 59       	subi	r28, 0x99	; 153
     cf2:	de 4f       	sbci	r29, 0xFE	; 254
     cf4:	e8 81       	ld	r30, Y
     cf6:	c7 56       	subi	r28, 0x67	; 103
     cf8:	d1 40       	sbci	r29, 0x01	; 1
     cfa:	ee 23       	and	r30, r30
     cfc:	31 f6       	brne	.-116    	; 0xc8a <__stack+0x42b>
	char Konwiktorska[] = {"Konwiktorska"};
     cfe:	ce 01       	movw	r24, r28
     d00:	80 53       	subi	r24, 0x30	; 48
     d02:	9f 4f       	sbci	r25, 0xFF	; 255
     d04:	c8 59       	subi	r28, 0x98	; 152
     d06:	de 4f       	sbci	r29, 0xFE	; 254
     d08:	99 83       	std	Y+1, r25	; 0x01
     d0a:	88 83       	st	Y, r24
     d0c:	c8 56       	subi	r28, 0x68	; 104
     d0e:	d1 40       	sbci	r29, 0x01	; 1
     d10:	80 e3       	ldi	r24, 0x30	; 48
     d12:	91 e0       	ldi	r25, 0x01	; 1
     d14:	c6 59       	subi	r28, 0x96	; 150
     d16:	de 4f       	sbci	r29, 0xFE	; 254
     d18:	99 83       	std	Y+1, r25	; 0x01
     d1a:	88 83       	st	Y, r24
     d1c:	ca 56       	subi	r28, 0x6A	; 106
     d1e:	d1 40       	sbci	r29, 0x01	; 1
     d20:	9d e0       	ldi	r25, 0x0D	; 13
     d22:	c4 59       	subi	r28, 0x94	; 148
     d24:	de 4f       	sbci	r29, 0xFE	; 254
     d26:	98 83       	st	Y, r25
     d28:	cc 56       	subi	r28, 0x6C	; 108
     d2a:	d1 40       	sbci	r29, 0x01	; 1
     d2c:	c6 59       	subi	r28, 0x96	; 150
     d2e:	de 4f       	sbci	r29, 0xFE	; 254
     d30:	e8 81       	ld	r30, Y
     d32:	f9 81       	ldd	r31, Y+1	; 0x01
     d34:	ca 56       	subi	r28, 0x6A	; 106
     d36:	d1 40       	sbci	r29, 0x01	; 1
     d38:	00 80       	ld	r0, Z
     d3a:	c6 59       	subi	r28, 0x96	; 150
     d3c:	de 4f       	sbci	r29, 0xFE	; 254
     d3e:	88 81       	ld	r24, Y
     d40:	99 81       	ldd	r25, Y+1	; 0x01
     d42:	ca 56       	subi	r28, 0x6A	; 106
     d44:	d1 40       	sbci	r29, 0x01	; 1
     d46:	01 96       	adiw	r24, 0x01	; 1
     d48:	c6 59       	subi	r28, 0x96	; 150
     d4a:	de 4f       	sbci	r29, 0xFE	; 254
     d4c:	99 83       	std	Y+1, r25	; 0x01
     d4e:	88 83       	st	Y, r24
     d50:	ca 56       	subi	r28, 0x6A	; 106
     d52:	d1 40       	sbci	r29, 0x01	; 1
     d54:	c8 59       	subi	r28, 0x98	; 152
     d56:	de 4f       	sbci	r29, 0xFE	; 254
     d58:	e8 81       	ld	r30, Y
     d5a:	f9 81       	ldd	r31, Y+1	; 0x01
     d5c:	c8 56       	subi	r28, 0x68	; 104
     d5e:	d1 40       	sbci	r29, 0x01	; 1
     d60:	00 82       	st	Z, r0
     d62:	c8 59       	subi	r28, 0x98	; 152
     d64:	de 4f       	sbci	r29, 0xFE	; 254
     d66:	88 81       	ld	r24, Y
     d68:	99 81       	ldd	r25, Y+1	; 0x01
     d6a:	c8 56       	subi	r28, 0x68	; 104
     d6c:	d1 40       	sbci	r29, 0x01	; 1
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	c8 59       	subi	r28, 0x98	; 152
     d72:	de 4f       	sbci	r29, 0xFE	; 254
     d74:	99 83       	std	Y+1, r25	; 0x01
     d76:	88 83       	st	Y, r24
     d78:	c8 56       	subi	r28, 0x68	; 104
     d7a:	d1 40       	sbci	r29, 0x01	; 1
     d7c:	c4 59       	subi	r28, 0x94	; 148
     d7e:	de 4f       	sbci	r29, 0xFE	; 254
     d80:	98 81       	ld	r25, Y
     d82:	cc 56       	subi	r28, 0x6C	; 108
     d84:	d1 40       	sbci	r29, 0x01	; 1
     d86:	91 50       	subi	r25, 0x01	; 1
     d88:	c4 59       	subi	r28, 0x94	; 148
     d8a:	de 4f       	sbci	r29, 0xFE	; 254
     d8c:	98 83       	st	Y, r25
     d8e:	cc 56       	subi	r28, 0x6C	; 108
     d90:	d1 40       	sbci	r29, 0x01	; 1
     d92:	c4 59       	subi	r28, 0x94	; 148
     d94:	de 4f       	sbci	r29, 0xFE	; 254
     d96:	e8 81       	ld	r30, Y
     d98:	cc 56       	subi	r28, 0x6C	; 108
     d9a:	d1 40       	sbci	r29, 0x01	; 1
     d9c:	ee 23       	and	r30, r30
     d9e:	31 f6       	brne	.-116    	; 0xd2c <__stack+0x4cd>
	char Metro_Marymont[] = {"Metro Marymont"};
     da0:	ce 01       	movw	r24, r28
     da2:	83 52       	subi	r24, 0x23	; 35
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	c3 59       	subi	r28, 0x93	; 147
     da8:	de 4f       	sbci	r29, 0xFE	; 254
     daa:	99 83       	std	Y+1, r25	; 0x01
     dac:	88 83       	st	Y, r24
     dae:	cd 56       	subi	r28, 0x6D	; 109
     db0:	d1 40       	sbci	r29, 0x01	; 1
     db2:	8d e3       	ldi	r24, 0x3D	; 61
     db4:	91 e0       	ldi	r25, 0x01	; 1
     db6:	c1 59       	subi	r28, 0x91	; 145
     db8:	de 4f       	sbci	r29, 0xFE	; 254
     dba:	99 83       	std	Y+1, r25	; 0x01
     dbc:	88 83       	st	Y, r24
     dbe:	cf 56       	subi	r28, 0x6F	; 111
     dc0:	d1 40       	sbci	r29, 0x01	; 1
     dc2:	9f e0       	ldi	r25, 0x0F	; 15
     dc4:	cf 58       	subi	r28, 0x8F	; 143
     dc6:	de 4f       	sbci	r29, 0xFE	; 254
     dc8:	98 83       	st	Y, r25
     dca:	c1 57       	subi	r28, 0x71	; 113
     dcc:	d1 40       	sbci	r29, 0x01	; 1
     dce:	c1 59       	subi	r28, 0x91	; 145
     dd0:	de 4f       	sbci	r29, 0xFE	; 254
     dd2:	e8 81       	ld	r30, Y
     dd4:	f9 81       	ldd	r31, Y+1	; 0x01
     dd6:	cf 56       	subi	r28, 0x6F	; 111
     dd8:	d1 40       	sbci	r29, 0x01	; 1
     dda:	00 80       	ld	r0, Z
     ddc:	c1 59       	subi	r28, 0x91	; 145
     dde:	de 4f       	sbci	r29, 0xFE	; 254
     de0:	88 81       	ld	r24, Y
     de2:	99 81       	ldd	r25, Y+1	; 0x01
     de4:	cf 56       	subi	r28, 0x6F	; 111
     de6:	d1 40       	sbci	r29, 0x01	; 1
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	c1 59       	subi	r28, 0x91	; 145
     dec:	de 4f       	sbci	r29, 0xFE	; 254
     dee:	99 83       	std	Y+1, r25	; 0x01
     df0:	88 83       	st	Y, r24
     df2:	cf 56       	subi	r28, 0x6F	; 111
     df4:	d1 40       	sbci	r29, 0x01	; 1
     df6:	c3 59       	subi	r28, 0x93	; 147
     df8:	de 4f       	sbci	r29, 0xFE	; 254
     dfa:	e8 81       	ld	r30, Y
     dfc:	f9 81       	ldd	r31, Y+1	; 0x01
     dfe:	cd 56       	subi	r28, 0x6D	; 109
     e00:	d1 40       	sbci	r29, 0x01	; 1
     e02:	00 82       	st	Z, r0
     e04:	c3 59       	subi	r28, 0x93	; 147
     e06:	de 4f       	sbci	r29, 0xFE	; 254
     e08:	88 81       	ld	r24, Y
     e0a:	99 81       	ldd	r25, Y+1	; 0x01
     e0c:	cd 56       	subi	r28, 0x6D	; 109
     e0e:	d1 40       	sbci	r29, 0x01	; 1
     e10:	01 96       	adiw	r24, 0x01	; 1
     e12:	c3 59       	subi	r28, 0x93	; 147
     e14:	de 4f       	sbci	r29, 0xFE	; 254
     e16:	99 83       	std	Y+1, r25	; 0x01
     e18:	88 83       	st	Y, r24
     e1a:	cd 56       	subi	r28, 0x6D	; 109
     e1c:	d1 40       	sbci	r29, 0x01	; 1
     e1e:	cf 58       	subi	r28, 0x8F	; 143
     e20:	de 4f       	sbci	r29, 0xFE	; 254
     e22:	98 81       	ld	r25, Y
     e24:	c1 57       	subi	r28, 0x71	; 113
     e26:	d1 40       	sbci	r29, 0x01	; 1
     e28:	91 50       	subi	r25, 0x01	; 1
     e2a:	cf 58       	subi	r28, 0x8F	; 143
     e2c:	de 4f       	sbci	r29, 0xFE	; 254
     e2e:	98 83       	st	Y, r25
     e30:	c1 57       	subi	r28, 0x71	; 113
     e32:	d1 40       	sbci	r29, 0x01	; 1
     e34:	cf 58       	subi	r28, 0x8F	; 143
     e36:	de 4f       	sbci	r29, 0xFE	; 254
     e38:	e8 81       	ld	r30, Y
     e3a:	c1 57       	subi	r28, 0x71	; 113
     e3c:	d1 40       	sbci	r29, 0x01	; 1
     e3e:	ee 23       	and	r30, r30
     e40:	31 f6       	brne	.-116    	; 0xdce <__stack+0x56f>
	char Dw_Wsch_Kijowska[] = {"Dw.Wsch.Kijowska"};
     e42:	ce 01       	movw	r24, r28
     e44:	84 51       	subi	r24, 0x14	; 20
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	ce 58       	subi	r28, 0x8E	; 142
     e4a:	de 4f       	sbci	r29, 0xFE	; 254
     e4c:	99 83       	std	Y+1, r25	; 0x01
     e4e:	88 83       	st	Y, r24
     e50:	c2 57       	subi	r28, 0x72	; 114
     e52:	d1 40       	sbci	r29, 0x01	; 1
     e54:	8c e4       	ldi	r24, 0x4C	; 76
     e56:	91 e0       	ldi	r25, 0x01	; 1
     e58:	cc 58       	subi	r28, 0x8C	; 140
     e5a:	de 4f       	sbci	r29, 0xFE	; 254
     e5c:	99 83       	std	Y+1, r25	; 0x01
     e5e:	88 83       	st	Y, r24
     e60:	c4 57       	subi	r28, 0x74	; 116
     e62:	d1 40       	sbci	r29, 0x01	; 1
     e64:	91 e1       	ldi	r25, 0x11	; 17
     e66:	ca 58       	subi	r28, 0x8A	; 138
     e68:	de 4f       	sbci	r29, 0xFE	; 254
     e6a:	98 83       	st	Y, r25
     e6c:	c6 57       	subi	r28, 0x76	; 118
     e6e:	d1 40       	sbci	r29, 0x01	; 1
     e70:	cc 58       	subi	r28, 0x8C	; 140
     e72:	de 4f       	sbci	r29, 0xFE	; 254
     e74:	e8 81       	ld	r30, Y
     e76:	f9 81       	ldd	r31, Y+1	; 0x01
     e78:	c4 57       	subi	r28, 0x74	; 116
     e7a:	d1 40       	sbci	r29, 0x01	; 1
     e7c:	00 80       	ld	r0, Z
     e7e:	cc 58       	subi	r28, 0x8C	; 140
     e80:	de 4f       	sbci	r29, 0xFE	; 254
     e82:	88 81       	ld	r24, Y
     e84:	99 81       	ldd	r25, Y+1	; 0x01
     e86:	c4 57       	subi	r28, 0x74	; 116
     e88:	d1 40       	sbci	r29, 0x01	; 1
     e8a:	01 96       	adiw	r24, 0x01	; 1
     e8c:	cc 58       	subi	r28, 0x8C	; 140
     e8e:	de 4f       	sbci	r29, 0xFE	; 254
     e90:	99 83       	std	Y+1, r25	; 0x01
     e92:	88 83       	st	Y, r24
     e94:	c4 57       	subi	r28, 0x74	; 116
     e96:	d1 40       	sbci	r29, 0x01	; 1
     e98:	ce 58       	subi	r28, 0x8E	; 142
     e9a:	de 4f       	sbci	r29, 0xFE	; 254
     e9c:	e8 81       	ld	r30, Y
     e9e:	f9 81       	ldd	r31, Y+1	; 0x01
     ea0:	c2 57       	subi	r28, 0x72	; 114
     ea2:	d1 40       	sbci	r29, 0x01	; 1
     ea4:	00 82       	st	Z, r0
     ea6:	ce 58       	subi	r28, 0x8E	; 142
     ea8:	de 4f       	sbci	r29, 0xFE	; 254
     eaa:	88 81       	ld	r24, Y
     eac:	99 81       	ldd	r25, Y+1	; 0x01
     eae:	c2 57       	subi	r28, 0x72	; 114
     eb0:	d1 40       	sbci	r29, 0x01	; 1
     eb2:	01 96       	adiw	r24, 0x01	; 1
     eb4:	ce 58       	subi	r28, 0x8E	; 142
     eb6:	de 4f       	sbci	r29, 0xFE	; 254
     eb8:	99 83       	std	Y+1, r25	; 0x01
     eba:	88 83       	st	Y, r24
     ebc:	c2 57       	subi	r28, 0x72	; 114
     ebe:	d1 40       	sbci	r29, 0x01	; 1
     ec0:	ca 58       	subi	r28, 0x8A	; 138
     ec2:	de 4f       	sbci	r29, 0xFE	; 254
     ec4:	98 81       	ld	r25, Y
     ec6:	c6 57       	subi	r28, 0x76	; 118
     ec8:	d1 40       	sbci	r29, 0x01	; 1
     eca:	91 50       	subi	r25, 0x01	; 1
     ecc:	ca 58       	subi	r28, 0x8A	; 138
     ece:	de 4f       	sbci	r29, 0xFE	; 254
     ed0:	98 83       	st	Y, r25
     ed2:	c6 57       	subi	r28, 0x76	; 118
     ed4:	d1 40       	sbci	r29, 0x01	; 1
     ed6:	ca 58       	subi	r28, 0x8A	; 138
     ed8:	de 4f       	sbci	r29, 0xFE	; 254
     eda:	e8 81       	ld	r30, Y
     edc:	c6 57       	subi	r28, 0x76	; 118
     ede:	d1 40       	sbci	r29, 0x01	; 1
     ee0:	ee 23       	and	r30, r30
     ee2:	31 f6       	brne	.-116    	; 0xe70 <__stack+0x611>
	char Annopol[] = {"Annopol"};
     ee4:	ce 01       	movw	r24, r28
     ee6:	83 50       	subi	r24, 0x03	; 3
     ee8:	9f 4f       	sbci	r25, 0xFF	; 255
     eea:	c9 58       	subi	r28, 0x89	; 137
     eec:	de 4f       	sbci	r29, 0xFE	; 254
     eee:	99 83       	std	Y+1, r25	; 0x01
     ef0:	88 83       	st	Y, r24
     ef2:	c7 57       	subi	r28, 0x77	; 119
     ef4:	d1 40       	sbci	r29, 0x01	; 1
     ef6:	8d e5       	ldi	r24, 0x5D	; 93
     ef8:	91 e0       	ldi	r25, 0x01	; 1
     efa:	c7 58       	subi	r28, 0x87	; 135
     efc:	de 4f       	sbci	r29, 0xFE	; 254
     efe:	99 83       	std	Y+1, r25	; 0x01
     f00:	88 83       	st	Y, r24
     f02:	c9 57       	subi	r28, 0x79	; 121
     f04:	d1 40       	sbci	r29, 0x01	; 1
     f06:	98 e0       	ldi	r25, 0x08	; 8
     f08:	c5 58       	subi	r28, 0x85	; 133
     f0a:	de 4f       	sbci	r29, 0xFE	; 254
     f0c:	98 83       	st	Y, r25
     f0e:	cb 57       	subi	r28, 0x7B	; 123
     f10:	d1 40       	sbci	r29, 0x01	; 1
     f12:	c7 58       	subi	r28, 0x87	; 135
     f14:	de 4f       	sbci	r29, 0xFE	; 254
     f16:	e8 81       	ld	r30, Y
     f18:	f9 81       	ldd	r31, Y+1	; 0x01
     f1a:	c9 57       	subi	r28, 0x79	; 121
     f1c:	d1 40       	sbci	r29, 0x01	; 1
     f1e:	00 80       	ld	r0, Z
     f20:	c7 58       	subi	r28, 0x87	; 135
     f22:	de 4f       	sbci	r29, 0xFE	; 254
     f24:	88 81       	ld	r24, Y
     f26:	99 81       	ldd	r25, Y+1	; 0x01
     f28:	c9 57       	subi	r28, 0x79	; 121
     f2a:	d1 40       	sbci	r29, 0x01	; 1
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	c7 58       	subi	r28, 0x87	; 135
     f30:	de 4f       	sbci	r29, 0xFE	; 254
     f32:	99 83       	std	Y+1, r25	; 0x01
     f34:	88 83       	st	Y, r24
     f36:	c9 57       	subi	r28, 0x79	; 121
     f38:	d1 40       	sbci	r29, 0x01	; 1
     f3a:	c9 58       	subi	r28, 0x89	; 137
     f3c:	de 4f       	sbci	r29, 0xFE	; 254
     f3e:	e8 81       	ld	r30, Y
     f40:	f9 81       	ldd	r31, Y+1	; 0x01
     f42:	c7 57       	subi	r28, 0x77	; 119
     f44:	d1 40       	sbci	r29, 0x01	; 1
     f46:	00 82       	st	Z, r0
     f48:	c9 58       	subi	r28, 0x89	; 137
     f4a:	de 4f       	sbci	r29, 0xFE	; 254
     f4c:	88 81       	ld	r24, Y
     f4e:	99 81       	ldd	r25, Y+1	; 0x01
     f50:	c7 57       	subi	r28, 0x77	; 119
     f52:	d1 40       	sbci	r29, 0x01	; 1
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	c9 58       	subi	r28, 0x89	; 137
     f58:	de 4f       	sbci	r29, 0xFE	; 254
     f5a:	99 83       	std	Y+1, r25	; 0x01
     f5c:	88 83       	st	Y, r24
     f5e:	c7 57       	subi	r28, 0x77	; 119
     f60:	d1 40       	sbci	r29, 0x01	; 1
     f62:	c5 58       	subi	r28, 0x85	; 133
     f64:	de 4f       	sbci	r29, 0xFE	; 254
     f66:	98 81       	ld	r25, Y
     f68:	cb 57       	subi	r28, 0x7B	; 123
     f6a:	d1 40       	sbci	r29, 0x01	; 1
     f6c:	91 50       	subi	r25, 0x01	; 1
     f6e:	c5 58       	subi	r28, 0x85	; 133
     f70:	de 4f       	sbci	r29, 0xFE	; 254
     f72:	98 83       	st	Y, r25
     f74:	cb 57       	subi	r28, 0x7B	; 123
     f76:	d1 40       	sbci	r29, 0x01	; 1
     f78:	c5 58       	subi	r28, 0x85	; 133
     f7a:	de 4f       	sbci	r29, 0xFE	; 254
     f7c:	e8 81       	ld	r30, Y
     f7e:	cb 57       	subi	r28, 0x7B	; 123
     f80:	d1 40       	sbci	r29, 0x01	; 1
     f82:	ee 23       	and	r30, r30
     f84:	31 f6       	brne	.-116    	; 0xf12 <__stack+0x6b3>
	char Banacha[] = {"Banacha"};
     f86:	ce 01       	movw	r24, r28
     f88:	8b 5f       	subi	r24, 0xFB	; 251
     f8a:	9e 4f       	sbci	r25, 0xFE	; 254
     f8c:	c4 58       	subi	r28, 0x84	; 132
     f8e:	de 4f       	sbci	r29, 0xFE	; 254
     f90:	99 83       	std	Y+1, r25	; 0x01
     f92:	88 83       	st	Y, r24
     f94:	cc 57       	subi	r28, 0x7C	; 124
     f96:	d1 40       	sbci	r29, 0x01	; 1
     f98:	85 e6       	ldi	r24, 0x65	; 101
     f9a:	91 e0       	ldi	r25, 0x01	; 1
     f9c:	c2 58       	subi	r28, 0x82	; 130
     f9e:	de 4f       	sbci	r29, 0xFE	; 254
     fa0:	99 83       	std	Y+1, r25	; 0x01
     fa2:	88 83       	st	Y, r24
     fa4:	ce 57       	subi	r28, 0x7E	; 126
     fa6:	d1 40       	sbci	r29, 0x01	; 1
     fa8:	98 e0       	ldi	r25, 0x08	; 8
     faa:	c0 58       	subi	r28, 0x80	; 128
     fac:	de 4f       	sbci	r29, 0xFE	; 254
     fae:	98 83       	st	Y, r25
     fb0:	c0 58       	subi	r28, 0x80	; 128
     fb2:	d1 40       	sbci	r29, 0x01	; 1
     fb4:	c2 58       	subi	r28, 0x82	; 130
     fb6:	de 4f       	sbci	r29, 0xFE	; 254
     fb8:	e8 81       	ld	r30, Y
     fba:	f9 81       	ldd	r31, Y+1	; 0x01
     fbc:	ce 57       	subi	r28, 0x7E	; 126
     fbe:	d1 40       	sbci	r29, 0x01	; 1
     fc0:	00 80       	ld	r0, Z
     fc2:	c2 58       	subi	r28, 0x82	; 130
     fc4:	de 4f       	sbci	r29, 0xFE	; 254
     fc6:	88 81       	ld	r24, Y
     fc8:	99 81       	ldd	r25, Y+1	; 0x01
     fca:	ce 57       	subi	r28, 0x7E	; 126
     fcc:	d1 40       	sbci	r29, 0x01	; 1
     fce:	01 96       	adiw	r24, 0x01	; 1
     fd0:	c2 58       	subi	r28, 0x82	; 130
     fd2:	de 4f       	sbci	r29, 0xFE	; 254
     fd4:	99 83       	std	Y+1, r25	; 0x01
     fd6:	88 83       	st	Y, r24
     fd8:	ce 57       	subi	r28, 0x7E	; 126
     fda:	d1 40       	sbci	r29, 0x01	; 1
     fdc:	c4 58       	subi	r28, 0x84	; 132
     fde:	de 4f       	sbci	r29, 0xFE	; 254
     fe0:	e8 81       	ld	r30, Y
     fe2:	f9 81       	ldd	r31, Y+1	; 0x01
     fe4:	cc 57       	subi	r28, 0x7C	; 124
     fe6:	d1 40       	sbci	r29, 0x01	; 1
     fe8:	00 82       	st	Z, r0
     fea:	c4 58       	subi	r28, 0x84	; 132
     fec:	de 4f       	sbci	r29, 0xFE	; 254
     fee:	88 81       	ld	r24, Y
     ff0:	99 81       	ldd	r25, Y+1	; 0x01
     ff2:	cc 57       	subi	r28, 0x7C	; 124
     ff4:	d1 40       	sbci	r29, 0x01	; 1
     ff6:	01 96       	adiw	r24, 0x01	; 1
     ff8:	c4 58       	subi	r28, 0x84	; 132
     ffa:	de 4f       	sbci	r29, 0xFE	; 254
     ffc:	99 83       	std	Y+1, r25	; 0x01
     ffe:	88 83       	st	Y, r24
    1000:	cc 57       	subi	r28, 0x7C	; 124
    1002:	d1 40       	sbci	r29, 0x01	; 1
    1004:	c0 58       	subi	r28, 0x80	; 128
    1006:	de 4f       	sbci	r29, 0xFE	; 254
    1008:	98 81       	ld	r25, Y
    100a:	c0 58       	subi	r28, 0x80	; 128
    100c:	d1 40       	sbci	r29, 0x01	; 1
    100e:	91 50       	subi	r25, 0x01	; 1
    1010:	c0 58       	subi	r28, 0x80	; 128
    1012:	de 4f       	sbci	r29, 0xFE	; 254
    1014:	98 83       	st	Y, r25
    1016:	c0 58       	subi	r28, 0x80	; 128
    1018:	d1 40       	sbci	r29, 0x01	; 1
    101a:	c0 58       	subi	r28, 0x80	; 128
    101c:	de 4f       	sbci	r29, 0xFE	; 254
    101e:	e8 81       	ld	r30, Y
    1020:	c0 58       	subi	r28, 0x80	; 128
    1022:	d1 40       	sbci	r29, 0x01	; 1
    1024:	ee 23       	and	r30, r30
    1026:	31 f6       	brne	.-116    	; 0xfb4 <__stack+0x755>
	char Lipkow_Muzeum[] ={"Lipkow-Muzeum"};
    1028:	ce 01       	movw	r24, r28
    102a:	83 5f       	subi	r24, 0xF3	; 243
    102c:	9e 4f       	sbci	r25, 0xFE	; 254
    102e:	cf 57       	subi	r28, 0x7F	; 127
    1030:	de 4f       	sbci	r29, 0xFE	; 254
    1032:	99 83       	std	Y+1, r25	; 0x01
    1034:	88 83       	st	Y, r24
    1036:	c1 58       	subi	r28, 0x81	; 129
    1038:	d1 40       	sbci	r29, 0x01	; 1
    103a:	8d e6       	ldi	r24, 0x6D	; 109
    103c:	91 e0       	ldi	r25, 0x01	; 1
    103e:	cd 57       	subi	r28, 0x7D	; 125
    1040:	de 4f       	sbci	r29, 0xFE	; 254
    1042:	99 83       	std	Y+1, r25	; 0x01
    1044:	88 83       	st	Y, r24
    1046:	c3 58       	subi	r28, 0x83	; 131
    1048:	d1 40       	sbci	r29, 0x01	; 1
    104a:	9e e0       	ldi	r25, 0x0E	; 14
    104c:	cb 57       	subi	r28, 0x7B	; 123
    104e:	de 4f       	sbci	r29, 0xFE	; 254
    1050:	98 83       	st	Y, r25
    1052:	c5 58       	subi	r28, 0x85	; 133
    1054:	d1 40       	sbci	r29, 0x01	; 1
    1056:	cd 57       	subi	r28, 0x7D	; 125
    1058:	de 4f       	sbci	r29, 0xFE	; 254
    105a:	e8 81       	ld	r30, Y
    105c:	f9 81       	ldd	r31, Y+1	; 0x01
    105e:	c3 58       	subi	r28, 0x83	; 131
    1060:	d1 40       	sbci	r29, 0x01	; 1
    1062:	00 80       	ld	r0, Z
    1064:	cd 57       	subi	r28, 0x7D	; 125
    1066:	de 4f       	sbci	r29, 0xFE	; 254
    1068:	88 81       	ld	r24, Y
    106a:	99 81       	ldd	r25, Y+1	; 0x01
    106c:	c3 58       	subi	r28, 0x83	; 131
    106e:	d1 40       	sbci	r29, 0x01	; 1
    1070:	01 96       	adiw	r24, 0x01	; 1
    1072:	cd 57       	subi	r28, 0x7D	; 125
    1074:	de 4f       	sbci	r29, 0xFE	; 254
    1076:	99 83       	std	Y+1, r25	; 0x01
    1078:	88 83       	st	Y, r24
    107a:	c3 58       	subi	r28, 0x83	; 131
    107c:	d1 40       	sbci	r29, 0x01	; 1
    107e:	cf 57       	subi	r28, 0x7F	; 127
    1080:	de 4f       	sbci	r29, 0xFE	; 254
    1082:	e8 81       	ld	r30, Y
    1084:	f9 81       	ldd	r31, Y+1	; 0x01
    1086:	c1 58       	subi	r28, 0x81	; 129
    1088:	d1 40       	sbci	r29, 0x01	; 1
    108a:	00 82       	st	Z, r0
    108c:	cf 57       	subi	r28, 0x7F	; 127
    108e:	de 4f       	sbci	r29, 0xFE	; 254
    1090:	88 81       	ld	r24, Y
    1092:	99 81       	ldd	r25, Y+1	; 0x01
    1094:	c1 58       	subi	r28, 0x81	; 129
    1096:	d1 40       	sbci	r29, 0x01	; 1
    1098:	01 96       	adiw	r24, 0x01	; 1
    109a:	cf 57       	subi	r28, 0x7F	; 127
    109c:	de 4f       	sbci	r29, 0xFE	; 254
    109e:	99 83       	std	Y+1, r25	; 0x01
    10a0:	88 83       	st	Y, r24
    10a2:	c1 58       	subi	r28, 0x81	; 129
    10a4:	d1 40       	sbci	r29, 0x01	; 1
    10a6:	cb 57       	subi	r28, 0x7B	; 123
    10a8:	de 4f       	sbci	r29, 0xFE	; 254
    10aa:	98 81       	ld	r25, Y
    10ac:	c5 58       	subi	r28, 0x85	; 133
    10ae:	d1 40       	sbci	r29, 0x01	; 1
    10b0:	91 50       	subi	r25, 0x01	; 1
    10b2:	cb 57       	subi	r28, 0x7B	; 123
    10b4:	de 4f       	sbci	r29, 0xFE	; 254
    10b6:	98 83       	st	Y, r25
    10b8:	c5 58       	subi	r28, 0x85	; 133
    10ba:	d1 40       	sbci	r29, 0x01	; 1
    10bc:	cb 57       	subi	r28, 0x7B	; 123
    10be:	de 4f       	sbci	r29, 0xFE	; 254
    10c0:	e8 81       	ld	r30, Y
    10c2:	c5 58       	subi	r28, 0x85	; 133
    10c4:	d1 40       	sbci	r29, 0x01	; 1
    10c6:	ee 23       	and	r30, r30
    10c8:	31 f6       	brne	.-116    	; 0x1056 <__stack+0x7f7>


	for (uint8_t k=0; k<16; k++){
    10ca:	19 82       	std	Y+1, r1	; 0x01
    10cc:	0b c0       	rjmp	.+22     	; 0x10e4 <__stack+0x885>
		lcd_locate(1,k);
    10ce:	81 e0       	ldi	r24, 0x01	; 1
    10d0:	69 81       	ldd	r22, Y+1	; 0x01
    10d2:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
		lcd_str(" ");
    10d6:	80 e6       	ldi	r24, 0x60	; 96
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
	char Annopol[] = {"Annopol"};
	char Banacha[] = {"Banacha"};
	char Lipkow_Muzeum[] ={"Lipkow-Muzeum"};


	for (uint8_t k=0; k<16; k++){
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	8f 5f       	subi	r24, 0xFF	; 255
    10e2:	89 83       	std	Y+1, r24	; 0x01
    10e4:	89 81       	ldd	r24, Y+1	; 0x01
    10e6:	80 31       	cpi	r24, 0x10	; 16
    10e8:	90 f3       	brcs	.-28     	; 0x10ce <__stack+0x86f>
		lcd_locate(1,k);
		lcd_str(" ");
	}
	lcd_locate(0,15);
    10ea:	80 e0       	ldi	r24, 0x00	; 0
    10ec:	6f e0       	ldi	r22, 0x0F	; 15
    10ee:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
	switch (cyfra){
    10f2:	fe 01       	movw	r30, r28
    10f4:	e5 5e       	subi	r30, 0xE5	; 229
    10f6:	fe 4f       	sbci	r31, 0xFE	; 254
    10f8:	80 81       	ld	r24, Z
    10fa:	91 81       	ldd	r25, Z+1	; 0x01
    10fc:	ca 57       	subi	r28, 0x7A	; 122
    10fe:	de 4f       	sbci	r29, 0xFE	; 254
    1100:	99 83       	std	Y+1, r25	; 0x01
    1102:	88 83       	st	Y, r24
    1104:	c6 58       	subi	r28, 0x86	; 134
    1106:	d1 40       	sbci	r29, 0x01	; 1
    1108:	ca 57       	subi	r28, 0x7A	; 122
    110a:	de 4f       	sbci	r29, 0xFE	; 254
    110c:	e8 81       	ld	r30, Y
    110e:	f9 81       	ldd	r31, Y+1	; 0x01
    1110:	c6 58       	subi	r28, 0x86	; 134
    1112:	d1 40       	sbci	r29, 0x01	; 1
    1114:	e3 32       	cpi	r30, 0x23	; 35
    1116:	f1 05       	cpc	r31, r1
    1118:	09 f4       	brne	.+2      	; 0x111c <__stack+0x8bd>
    111a:	a3 c1       	rjmp	.+838    	; 0x1462 <__stack+0xc03>
    111c:	ca 57       	subi	r28, 0x7A	; 122
    111e:	de 4f       	sbci	r29, 0xFE	; 254
    1120:	88 81       	ld	r24, Y
    1122:	99 81       	ldd	r25, Y+1	; 0x01
    1124:	c6 58       	subi	r28, 0x86	; 134
    1126:	d1 40       	sbci	r29, 0x01	; 1
    1128:	84 32       	cpi	r24, 0x24	; 36
    112a:	91 05       	cpc	r25, r1
    112c:	0c f0       	brlt	.+2      	; 0x1130 <__stack+0x8d1>
    112e:	a1 c0       	rjmp	.+322    	; 0x1272 <__stack+0xa13>
    1130:	ca 57       	subi	r28, 0x7A	; 122
    1132:	de 4f       	sbci	r29, 0xFE	; 254
    1134:	e8 81       	ld	r30, Y
    1136:	f9 81       	ldd	r31, Y+1	; 0x01
    1138:	c6 58       	subi	r28, 0x86	; 134
    113a:	d1 40       	sbci	r29, 0x01	; 1
    113c:	e7 30       	cpi	r30, 0x07	; 7
    113e:	f1 05       	cpc	r31, r1
    1140:	09 f4       	brne	.+2      	; 0x1144 <__stack+0x8e5>
    1142:	51 c1       	rjmp	.+674    	; 0x13e6 <__stack+0xb87>
    1144:	ca 57       	subi	r28, 0x7A	; 122
    1146:	de 4f       	sbci	r29, 0xFE	; 254
    1148:	88 81       	ld	r24, Y
    114a:	99 81       	ldd	r25, Y+1	; 0x01
    114c:	c6 58       	subi	r28, 0x86	; 134
    114e:	d1 40       	sbci	r29, 0x01	; 1
    1150:	88 30       	cpi	r24, 0x08	; 8
    1152:	91 05       	cpc	r25, r1
    1154:	0c f0       	brlt	.+2      	; 0x1158 <__stack+0x8f9>
    1156:	46 c0       	rjmp	.+140    	; 0x11e4 <__stack+0x985>
    1158:	ca 57       	subi	r28, 0x7A	; 122
    115a:	de 4f       	sbci	r29, 0xFE	; 254
    115c:	e8 81       	ld	r30, Y
    115e:	f9 81       	ldd	r31, Y+1	; 0x01
    1160:	c6 58       	subi	r28, 0x86	; 134
    1162:	d1 40       	sbci	r29, 0x01	; 1
    1164:	e3 30       	cpi	r30, 0x03	; 3
    1166:	f1 05       	cpc	r31, r1
    1168:	09 f4       	brne	.+2      	; 0x116c <__stack+0x90d>
    116a:	29 c1       	rjmp	.+594    	; 0x13be <__stack+0xb5f>
    116c:	ca 57       	subi	r28, 0x7A	; 122
    116e:	de 4f       	sbci	r29, 0xFE	; 254
    1170:	88 81       	ld	r24, Y
    1172:	99 81       	ldd	r25, Y+1	; 0x01
    1174:	c6 58       	subi	r28, 0x86	; 134
    1176:	d1 40       	sbci	r29, 0x01	; 1
    1178:	84 30       	cpi	r24, 0x04	; 4
    117a:	91 05       	cpc	r25, r1
    117c:	f4 f4       	brge	.+60     	; 0x11ba <__stack+0x95b>
    117e:	ca 57       	subi	r28, 0x7A	; 122
    1180:	de 4f       	sbci	r29, 0xFE	; 254
    1182:	e8 81       	ld	r30, Y
    1184:	f9 81       	ldd	r31, Y+1	; 0x01
    1186:	c6 58       	subi	r28, 0x86	; 134
    1188:	d1 40       	sbci	r29, 0x01	; 1
    118a:	e1 30       	cpi	r30, 0x01	; 1
    118c:	f1 05       	cpc	r31, r1
    118e:	09 f4       	brne	.+2      	; 0x1192 <__stack+0x933>
    1190:	0c c1       	rjmp	.+536    	; 0x13aa <__stack+0xb4b>
    1192:	ca 57       	subi	r28, 0x7A	; 122
    1194:	de 4f       	sbci	r29, 0xFE	; 254
    1196:	88 81       	ld	r24, Y
    1198:	99 81       	ldd	r25, Y+1	; 0x01
    119a:	c6 58       	subi	r28, 0x86	; 134
    119c:	d1 40       	sbci	r29, 0x01	; 1
    119e:	82 30       	cpi	r24, 0x02	; 2
    11a0:	91 05       	cpc	r25, r1
    11a2:	0c f0       	brlt	.+2      	; 0x11a6 <__stack+0x947>
    11a4:	07 c1       	rjmp	.+526    	; 0x13b4 <__stack+0xb55>
    11a6:	ca 57       	subi	r28, 0x7A	; 122
    11a8:	de 4f       	sbci	r29, 0xFE	; 254
    11aa:	e8 81       	ld	r30, Y
    11ac:	f9 81       	ldd	r31, Y+1	; 0x01
    11ae:	c6 58       	subi	r28, 0x86	; 134
    11b0:	d1 40       	sbci	r29, 0x01	; 1
    11b2:	30 97       	sbiw	r30, 0x00	; 0
    11b4:	09 f4       	brne	.+2      	; 0x11b8 <__stack+0x959>
    11b6:	f4 c0       	rjmp	.+488    	; 0x13a0 <__stack+0xb41>
    11b8:	f3 c1       	rjmp	.+998    	; 0x15a0 <__stack+0xd41>
    11ba:	ca 57       	subi	r28, 0x7A	; 122
    11bc:	de 4f       	sbci	r29, 0xFE	; 254
    11be:	88 81       	ld	r24, Y
    11c0:	99 81       	ldd	r25, Y+1	; 0x01
    11c2:	c6 58       	subi	r28, 0x86	; 134
    11c4:	d1 40       	sbci	r29, 0x01	; 1
    11c6:	85 30       	cpi	r24, 0x05	; 5
    11c8:	91 05       	cpc	r25, r1
    11ca:	09 f4       	brne	.+2      	; 0x11ce <__stack+0x96f>
    11cc:	02 c1       	rjmp	.+516    	; 0x13d2 <__stack+0xb73>
    11ce:	ca 57       	subi	r28, 0x7A	; 122
    11d0:	de 4f       	sbci	r29, 0xFE	; 254
    11d2:	e8 81       	ld	r30, Y
    11d4:	f9 81       	ldd	r31, Y+1	; 0x01
    11d6:	c6 58       	subi	r28, 0x86	; 134
    11d8:	d1 40       	sbci	r29, 0x01	; 1
    11da:	e6 30       	cpi	r30, 0x06	; 6
    11dc:	f1 05       	cpc	r31, r1
    11de:	0c f0       	brlt	.+2      	; 0x11e2 <__stack+0x983>
    11e0:	fd c0       	rjmp	.+506    	; 0x13dc <__stack+0xb7d>
    11e2:	f2 c0       	rjmp	.+484    	; 0x13c8 <__stack+0xb69>
    11e4:	ca 57       	subi	r28, 0x7A	; 122
    11e6:	de 4f       	sbci	r29, 0xFE	; 254
    11e8:	88 81       	ld	r24, Y
    11ea:	99 81       	ldd	r25, Y+1	; 0x01
    11ec:	c6 58       	subi	r28, 0x86	; 134
    11ee:	d1 40       	sbci	r29, 0x01	; 1
    11f0:	8f 31       	cpi	r24, 0x1F	; 31
    11f2:	91 05       	cpc	r25, r1
    11f4:	09 f4       	brne	.+2      	; 0x11f8 <__stack+0x999>
    11f6:	0f c1       	rjmp	.+542    	; 0x1416 <__stack+0xbb7>
    11f8:	ca 57       	subi	r28, 0x7A	; 122
    11fa:	de 4f       	sbci	r29, 0xFE	; 254
    11fc:	e8 81       	ld	r30, Y
    11fe:	f9 81       	ldd	r31, Y+1	; 0x01
    1200:	c6 58       	subi	r28, 0x86	; 134
    1202:	d1 40       	sbci	r29, 0x01	; 1
    1204:	e0 32       	cpi	r30, 0x20	; 32
    1206:	f1 05       	cpc	r31, r1
    1208:	fc f4       	brge	.+62     	; 0x1248 <__stack+0x9e9>
    120a:	ca 57       	subi	r28, 0x7A	; 122
    120c:	de 4f       	sbci	r29, 0xFE	; 254
    120e:	88 81       	ld	r24, Y
    1210:	99 81       	ldd	r25, Y+1	; 0x01
    1212:	c6 58       	subi	r28, 0x86	; 134
    1214:	d1 40       	sbci	r29, 0x01	; 1
    1216:	89 30       	cpi	r24, 0x09	; 9
    1218:	91 05       	cpc	r25, r1
    121a:	09 f4       	brne	.+2      	; 0x121e <__stack+0x9bf>
    121c:	ee c0       	rjmp	.+476    	; 0x13fa <__stack+0xb9b>
    121e:	ca 57       	subi	r28, 0x7A	; 122
    1220:	de 4f       	sbci	r29, 0xFE	; 254
    1222:	e8 81       	ld	r30, Y
    1224:	f9 81       	ldd	r31, Y+1	; 0x01
    1226:	c6 58       	subi	r28, 0x86	; 134
    1228:	d1 40       	sbci	r29, 0x01	; 1
    122a:	e9 30       	cpi	r30, 0x09	; 9
    122c:	f1 05       	cpc	r31, r1
    122e:	0c f4       	brge	.+2      	; 0x1232 <__stack+0x9d3>
    1230:	df c0       	rjmp	.+446    	; 0x13f0 <__stack+0xb91>
    1232:	ca 57       	subi	r28, 0x7A	; 122
    1234:	de 4f       	sbci	r29, 0xFE	; 254
    1236:	88 81       	ld	r24, Y
    1238:	99 81       	ldd	r25, Y+1	; 0x01
    123a:	c6 58       	subi	r28, 0x86	; 134
    123c:	d1 40       	sbci	r29, 0x01	; 1
    123e:	8e 31       	cpi	r24, 0x1E	; 30
    1240:	91 05       	cpc	r25, r1
    1242:	09 f4       	brne	.+2      	; 0x1246 <__stack+0x9e7>
    1244:	df c0       	rjmp	.+446    	; 0x1404 <__stack+0xba5>
    1246:	ac c1       	rjmp	.+856    	; 0x15a0 <__stack+0xd41>
    1248:	ca 57       	subi	r28, 0x7A	; 122
    124a:	de 4f       	sbci	r29, 0xFE	; 254
    124c:	e8 81       	ld	r30, Y
    124e:	f9 81       	ldd	r31, Y+1	; 0x01
    1250:	c6 58       	subi	r28, 0x86	; 134
    1252:	d1 40       	sbci	r29, 0x01	; 1
    1254:	e1 32       	cpi	r30, 0x21	; 33
    1256:	f1 05       	cpc	r31, r1
    1258:	09 f4       	brne	.+2      	; 0x125c <__stack+0x9fd>
    125a:	ef c0       	rjmp	.+478    	; 0x143a <__stack+0xbdb>
    125c:	ca 57       	subi	r28, 0x7A	; 122
    125e:	de 4f       	sbci	r29, 0xFE	; 254
    1260:	88 81       	ld	r24, Y
    1262:	99 81       	ldd	r25, Y+1	; 0x01
    1264:	c6 58       	subi	r28, 0x86	; 134
    1266:	d1 40       	sbci	r29, 0x01	; 1
    1268:	82 32       	cpi	r24, 0x22	; 34
    126a:	91 05       	cpc	r25, r1
    126c:	0c f0       	brlt	.+2      	; 0x1270 <__stack+0xa11>
    126e:	ef c0       	rjmp	.+478    	; 0x144e <__stack+0xbef>
    1270:	db c0       	rjmp	.+438    	; 0x1428 <__stack+0xbc9>
    1272:	ca 57       	subi	r28, 0x7A	; 122
    1274:	de 4f       	sbci	r29, 0xFE	; 254
    1276:	e8 81       	ld	r30, Y
    1278:	f9 81       	ldd	r31, Y+1	; 0x01
    127a:	c6 58       	subi	r28, 0x86	; 134
    127c:	d1 40       	sbci	r29, 0x01	; 1
    127e:	eb 32       	cpi	r30, 0x2B	; 43
    1280:	f1 05       	cpc	r31, r1
    1282:	09 f4       	brne	.+2      	; 0x1286 <__stack+0xa27>
    1284:	3e c1       	rjmp	.+636    	; 0x1502 <__stack+0xca3>
    1286:	ca 57       	subi	r28, 0x7A	; 122
    1288:	de 4f       	sbci	r29, 0xFE	; 254
    128a:	88 81       	ld	r24, Y
    128c:	99 81       	ldd	r25, Y+1	; 0x01
    128e:	c6 58       	subi	r28, 0x86	; 134
    1290:	d1 40       	sbci	r29, 0x01	; 1
    1292:	8c 32       	cpi	r24, 0x2C	; 44
    1294:	91 05       	cpc	r25, r1
    1296:	ec f5       	brge	.+122    	; 0x1312 <__stack+0xab3>
    1298:	ca 57       	subi	r28, 0x7A	; 122
    129a:	de 4f       	sbci	r29, 0xFE	; 254
    129c:	e8 81       	ld	r30, Y
    129e:	f9 81       	ldd	r31, Y+1	; 0x01
    12a0:	c6 58       	subi	r28, 0x86	; 134
    12a2:	d1 40       	sbci	r29, 0x01	; 1
    12a4:	e7 32       	cpi	r30, 0x27	; 39
    12a6:	f1 05       	cpc	r31, r1
    12a8:	09 f4       	brne	.+2      	; 0x12ac <__stack+0xa4d>
    12aa:	03 c1       	rjmp	.+518    	; 0x14b2 <__stack+0xc53>
    12ac:	ca 57       	subi	r28, 0x7A	; 122
    12ae:	de 4f       	sbci	r29, 0xFE	; 254
    12b0:	88 81       	ld	r24, Y
    12b2:	99 81       	ldd	r25, Y+1	; 0x01
    12b4:	c6 58       	subi	r28, 0x86	; 134
    12b6:	d1 40       	sbci	r29, 0x01	; 1
    12b8:	88 32       	cpi	r24, 0x28	; 40
    12ba:	91 05       	cpc	r25, r1
    12bc:	ac f4       	brge	.+42     	; 0x12e8 <__stack+0xa89>
    12be:	ca 57       	subi	r28, 0x7A	; 122
    12c0:	de 4f       	sbci	r29, 0xFE	; 254
    12c2:	e8 81       	ld	r30, Y
    12c4:	f9 81       	ldd	r31, Y+1	; 0x01
    12c6:	c6 58       	subi	r28, 0x86	; 134
    12c8:	d1 40       	sbci	r29, 0x01	; 1
    12ca:	e5 32       	cpi	r30, 0x25	; 37
    12cc:	f1 05       	cpc	r31, r1
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <__stack+0xa73>
    12d0:	dc c0       	rjmp	.+440    	; 0x148a <__stack+0xc2b>
    12d2:	ca 57       	subi	r28, 0x7A	; 122
    12d4:	de 4f       	sbci	r29, 0xFE	; 254
    12d6:	88 81       	ld	r24, Y
    12d8:	99 81       	ldd	r25, Y+1	; 0x01
    12da:	c6 58       	subi	r28, 0x86	; 134
    12dc:	d1 40       	sbci	r29, 0x01	; 1
    12de:	86 32       	cpi	r24, 0x26	; 38
    12e0:	91 05       	cpc	r25, r1
    12e2:	0c f0       	brlt	.+2      	; 0x12e6 <__stack+0xa87>
    12e4:	dc c0       	rjmp	.+440    	; 0x149e <__stack+0xc3f>
    12e6:	c7 c0       	rjmp	.+398    	; 0x1476 <__stack+0xc17>
    12e8:	ca 57       	subi	r28, 0x7A	; 122
    12ea:	de 4f       	sbci	r29, 0xFE	; 254
    12ec:	e8 81       	ld	r30, Y
    12ee:	f9 81       	ldd	r31, Y+1	; 0x01
    12f0:	c6 58       	subi	r28, 0x86	; 134
    12f2:	d1 40       	sbci	r29, 0x01	; 1
    12f4:	e9 32       	cpi	r30, 0x29	; 41
    12f6:	f1 05       	cpc	r31, r1
    12f8:	09 f4       	brne	.+2      	; 0x12fc <__stack+0xa9d>
    12fa:	ef c0       	rjmp	.+478    	; 0x14da <__stack+0xc7b>
    12fc:	ca 57       	subi	r28, 0x7A	; 122
    12fe:	de 4f       	sbci	r29, 0xFE	; 254
    1300:	88 81       	ld	r24, Y
    1302:	99 81       	ldd	r25, Y+1	; 0x01
    1304:	c6 58       	subi	r28, 0x86	; 134
    1306:	d1 40       	sbci	r29, 0x01	; 1
    1308:	8a 32       	cpi	r24, 0x2A	; 42
    130a:	91 05       	cpc	r25, r1
    130c:	0c f0       	brlt	.+2      	; 0x1310 <__stack+0xab1>
    130e:	ef c0       	rjmp	.+478    	; 0x14ee <__stack+0xc8f>
    1310:	da c0       	rjmp	.+436    	; 0x14c6 <__stack+0xc67>
    1312:	ca 57       	subi	r28, 0x7A	; 122
    1314:	de 4f       	sbci	r29, 0xFE	; 254
    1316:	e8 81       	ld	r30, Y
    1318:	f9 81       	ldd	r31, Y+1	; 0x01
    131a:	c6 58       	subi	r28, 0x86	; 134
    131c:	d1 40       	sbci	r29, 0x01	; 1
    131e:	ef 32       	cpi	r30, 0x2F	; 47
    1320:	f1 05       	cpc	r31, r1
    1322:	09 f4       	brne	.+2      	; 0x1326 <__stack+0xac7>
    1324:	16 c1       	rjmp	.+556    	; 0x1552 <__stack+0xcf3>
    1326:	ca 57       	subi	r28, 0x7A	; 122
    1328:	de 4f       	sbci	r29, 0xFE	; 254
    132a:	88 81       	ld	r24, Y
    132c:	99 81       	ldd	r25, Y+1	; 0x01
    132e:	c6 58       	subi	r28, 0x86	; 134
    1330:	d1 40       	sbci	r29, 0x01	; 1
    1332:	80 33       	cpi	r24, 0x30	; 48
    1334:	91 05       	cpc	r25, r1
    1336:	ac f4       	brge	.+42     	; 0x1362 <__stack+0xb03>
    1338:	ca 57       	subi	r28, 0x7A	; 122
    133a:	de 4f       	sbci	r29, 0xFE	; 254
    133c:	e8 81       	ld	r30, Y
    133e:	f9 81       	ldd	r31, Y+1	; 0x01
    1340:	c6 58       	subi	r28, 0x86	; 134
    1342:	d1 40       	sbci	r29, 0x01	; 1
    1344:	ed 32       	cpi	r30, 0x2D	; 45
    1346:	f1 05       	cpc	r31, r1
    1348:	09 f4       	brne	.+2      	; 0x134c <__stack+0xaed>
    134a:	ef c0       	rjmp	.+478    	; 0x152a <__stack+0xccb>
    134c:	ca 57       	subi	r28, 0x7A	; 122
    134e:	de 4f       	sbci	r29, 0xFE	; 254
    1350:	88 81       	ld	r24, Y
    1352:	99 81       	ldd	r25, Y+1	; 0x01
    1354:	c6 58       	subi	r28, 0x86	; 134
    1356:	d1 40       	sbci	r29, 0x01	; 1
    1358:	8e 32       	cpi	r24, 0x2E	; 46
    135a:	91 05       	cpc	r25, r1
    135c:	0c f0       	brlt	.+2      	; 0x1360 <__stack+0xb01>
    135e:	ef c0       	rjmp	.+478    	; 0x153e <__stack+0xcdf>
    1360:	da c0       	rjmp	.+436    	; 0x1516 <__stack+0xcb7>
    1362:	ca 57       	subi	r28, 0x7A	; 122
    1364:	de 4f       	sbci	r29, 0xFE	; 254
    1366:	e8 81       	ld	r30, Y
    1368:	f9 81       	ldd	r31, Y+1	; 0x01
    136a:	c6 58       	subi	r28, 0x86	; 134
    136c:	d1 40       	sbci	r29, 0x01	; 1
    136e:	e1 33       	cpi	r30, 0x31	; 49
    1370:	f1 05       	cpc	r31, r1
    1372:	09 f4       	brne	.+2      	; 0x1376 <__stack+0xb17>
    1374:	02 c1       	rjmp	.+516    	; 0x157a <__stack+0xd1b>
    1376:	ca 57       	subi	r28, 0x7A	; 122
    1378:	de 4f       	sbci	r29, 0xFE	; 254
    137a:	88 81       	ld	r24, Y
    137c:	99 81       	ldd	r25, Y+1	; 0x01
    137e:	c6 58       	subi	r28, 0x86	; 134
    1380:	d1 40       	sbci	r29, 0x01	; 1
    1382:	81 33       	cpi	r24, 0x31	; 49
    1384:	91 05       	cpc	r25, r1
    1386:	0c f4       	brge	.+2      	; 0x138a <__stack+0xb2b>
    1388:	ee c0       	rjmp	.+476    	; 0x1566 <__stack+0xd07>
    138a:	ca 57       	subi	r28, 0x7A	; 122
    138c:	de 4f       	sbci	r29, 0xFE	; 254
    138e:	e8 81       	ld	r30, Y
    1390:	f9 81       	ldd	r31, Y+1	; 0x01
    1392:	c6 58       	subi	r28, 0x86	; 134
    1394:	d1 40       	sbci	r29, 0x01	; 1
    1396:	e2 33       	cpi	r30, 0x32	; 50
    1398:	f1 05       	cpc	r31, r1
    139a:	09 f4       	brne	.+2      	; 0x139e <__stack+0xb3f>
    139c:	f8 c0       	rjmp	.+496    	; 0x158e <__stack+0xd2f>
    139e:	00 c1       	rjmp	.+512    	; 0x15a0 <__stack+0xd41>
		case 0 :   lcd_str(zero);		  		break;
    13a0:	ce 01       	movw	r24, r28
    13a2:	02 96       	adiw	r24, 0x02	; 2
    13a4:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13a8:	fb c0       	rjmp	.+502    	; 0x15a0 <__stack+0xd41>
		case 1 :   lcd_str(jeden); 		 		break;
    13aa:	ce 01       	movw	r24, r28
    13ac:	04 96       	adiw	r24, 0x04	; 4
    13ae:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13b2:	f6 c0       	rjmp	.+492    	; 0x15a0 <__stack+0xd41>
		case 2 :   lcd_str(dwa);				break;
    13b4:	ce 01       	movw	r24, r28
    13b6:	06 96       	adiw	r24, 0x06	; 6
    13b8:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13bc:	f1 c0       	rjmp	.+482    	; 0x15a0 <__stack+0xd41>
		case 3 :   lcd_str(trzy); 		  		break;
    13be:	ce 01       	movw	r24, r28
    13c0:	08 96       	adiw	r24, 0x08	; 8
    13c2:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13c6:	ec c0       	rjmp	.+472    	; 0x15a0 <__stack+0xd41>
		case 4 :   lcd_str(cztery); 	  		break;
    13c8:	ce 01       	movw	r24, r28
    13ca:	0a 96       	adiw	r24, 0x0a	; 10
    13cc:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13d0:	e7 c0       	rjmp	.+462    	; 0x15a0 <__stack+0xd41>
		case 5 :   lcd_str(piec); 		  		break;
    13d2:	ce 01       	movw	r24, r28
    13d4:	0c 96       	adiw	r24, 0x0c	; 12
    13d6:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13da:	e2 c0       	rjmp	.+452    	; 0x15a0 <__stack+0xd41>
		case 6 :   lcd_str(szesc); 		 	 	break;
    13dc:	ce 01       	movw	r24, r28
    13de:	0e 96       	adiw	r24, 0x0e	; 14
    13e0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13e4:	dd c0       	rjmp	.+442    	; 0x15a0 <__stack+0xd41>
		case 7 :   lcd_str(siedem); 	  		break;
    13e6:	ce 01       	movw	r24, r28
    13e8:	40 96       	adiw	r24, 0x10	; 16
    13ea:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13ee:	d8 c0       	rjmp	.+432    	; 0x15a0 <__stack+0xd41>
		case 8 :   lcd_str(osiem); 		  		break;
    13f0:	ce 01       	movw	r24, r28
    13f2:	42 96       	adiw	r24, 0x12	; 18
    13f4:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    13f8:	d3 c0       	rjmp	.+422    	; 0x15a0 <__stack+0xd41>
		case 9 :   lcd_str(dziewiec); 	  		break;
    13fa:	ce 01       	movw	r24, r28
    13fc:	44 96       	adiw	r24, 0x14	; 20
    13fe:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1402:	ce c0       	rjmp	.+412    	; 0x15a0 <__stack+0xd41>

		case 30:   lcd_locate(1,0);lcd_str(Stare_Bemowo);			break;
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	60 e0       	ldi	r22, 0x00	; 0
    1408:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    140c:	ce 01       	movw	r24, r28
    140e:	87 96       	adiw	r24, 0x27	; 39
    1410:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1414:	c5 c0       	rjmp	.+394    	; 0x15a0 <__stack+0xd41>
		case 31:   lcd_locate(1,0);lcd_str(PKP_Olszynka_Grochowska);break;
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	60 e0       	ldi	r22, 0x00	; 0
    141a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    141e:	ce 01       	movw	r24, r28
    1420:	46 96       	adiw	r24, 0x16	; 22
    1422:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1426:	bc c0       	rjmp	.+376    	; 0x15a0 <__stack+0xd41>
		case 32:   lcd_locate(1,0);lcd_str(Osiedle_Gorczewska);		break;
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	60 e0       	ldi	r22, 0x00	; 0
    142c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1430:	ce 01       	movw	r24, r28
    1432:	c4 96       	adiw	r24, 0x34	; 52
    1434:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1438:	b3 c0       	rjmp	.+358    	; 0x15a0 <__stack+0xd41>
		case 33:   lcd_locate(1,0);lcd_str(Gwiazdzista);			break;
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	60 e0       	ldi	r22, 0x00	; 0
    143e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1442:	ce 01       	movw	r24, r28
    1444:	8d 5b       	subi	r24, 0xBD	; 189
    1446:	9f 4f       	sbci	r25, 0xFF	; 255
    1448:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    144c:	a9 c0       	rjmp	.+338    	; 0x15a0 <__stack+0xd41>
		case 34:   lcd_locate(1,0);lcd_str(PR_Al_Krakowska);		break;
    144e:	81 e0       	ldi	r24, 0x01	; 1
    1450:	60 e0       	ldi	r22, 0x00	; 0
    1452:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1456:	ce 01       	movw	r24, r28
    1458:	81 5b       	subi	r24, 0xB1	; 177
    145a:	9f 4f       	sbci	r25, 0xFF	; 255
    145c:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1460:	9f c0       	rjmp	.+318    	; 0x15a0 <__stack+0xd41>
		case 35:   lcd_locate(1,0);lcd_str(Boernerowo);				break;
    1462:	81 e0       	ldi	r24, 0x01	; 1
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    146a:	ce 01       	movw	r24, r28
    146c:	81 5a       	subi	r24, 0xA1	; 161
    146e:	9f 4f       	sbci	r25, 0xFF	; 255
    1470:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1474:	95 c0       	rjmp	.+298    	; 0x15a0 <__stack+0xd41>
		case 36:   lcd_locate(1,0);lcd_str(Zeran_FSO);				break;
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    147e:	ce 01       	movw	r24, r28
    1480:	86 59       	subi	r24, 0x96	; 150
    1482:	9f 4f       	sbci	r25, 0xFF	; 255
    1484:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1488:	8b c0       	rjmp	.+278    	; 0x15a0 <__stack+0xd41>
		case 37:   lcd_locate(1,0);lcd_str(Sadyba);					break;
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	60 e0       	ldi	r22, 0x00	; 0
    148e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1492:	ce 01       	movw	r24, r28
    1494:	8c 58       	subi	r24, 0x8C	; 140
    1496:	9f 4f       	sbci	r25, 0xFF	; 255
    1498:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    149c:	81 c0       	rjmp	.+258    	; 0x15a0 <__stack+0xd41>
		case 38:   lcd_locate(1,0);lcd_str(Szczesliwice);			break;
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    14a6:	ce 01       	movw	r24, r28
    14a8:	85 58       	subi	r24, 0x85	; 133
    14aa:	9f 4f       	sbci	r25, 0xFF	; 255
    14ac:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    14b0:	77 c0       	rjmp	.+238    	; 0x15a0 <__stack+0xd41>
		case 39:   lcd_locate(1,0);lcd_str(Nowodwory);				break;
    14b2:	81 e0       	ldi	r24, 0x01	; 1
    14b4:	60 e0       	ldi	r22, 0x00	; 0
    14b6:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    14ba:	ce 01       	movw	r24, r28
    14bc:	88 57       	subi	r24, 0x78	; 120
    14be:	9f 4f       	sbci	r25, 0xFF	; 255
    14c0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    14c4:	6d c0       	rjmp	.+218    	; 0x15a0 <__stack+0xd41>
		case 40:   lcd_locate(1,0);lcd_str(Metro_Mlociny);			break;
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	60 e0       	ldi	r22, 0x00	; 0
    14ca:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    14ce:	ce 01       	movw	r24, r28
    14d0:	8e 56       	subi	r24, 0x6E	; 110
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    14d8:	63 c0       	rjmp	.+198    	; 0x15a0 <__stack+0xd41>
		case 41:   lcd_locate(1,0);lcd_str(CH_Blue_City);			break;
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	60 e0       	ldi	r22, 0x00	; 0
    14de:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    14e2:	ce 01       	movw	r24, r28
    14e4:	80 56       	subi	r24, 0x60	; 96
    14e6:	9f 4f       	sbci	r25, 0xFF	; 255
    14e8:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    14ec:	59 c0       	rjmp	.+178    	; 0x15a0 <__stack+0xd41>
		case 42:   lcd_locate(1,0);lcd_str(CH_Reduta);				break;
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    14f6:	ce 01       	movw	r24, r28
    14f8:	83 55       	subi	r24, 0x53	; 83
    14fa:	9f 4f       	sbci	r25, 0xFF	; 255
    14fc:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1500:	4f c0       	rjmp	.+158    	; 0x15a0 <__stack+0xd41>
		case 43:   lcd_locate(1,0);lcd_str(Witolin);				break;
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	60 e0       	ldi	r22, 0x00	; 0
    1506:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    150a:	ce 01       	movw	r24, r28
    150c:	89 54       	subi	r24, 0x49	; 73
    150e:	9f 4f       	sbci	r25, 0xFF	; 255
    1510:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1514:	45 c0       	rjmp	.+138    	; 0x15a0 <__stack+0xd41>
		case 44:   lcd_locate(1,0);lcd_str(Natolin_Pln);			break;
    1516:	81 e0       	ldi	r24, 0x01	; 1
    1518:	60 e0       	ldi	r22, 0x00	; 0
    151a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    151e:	ce 01       	movw	r24, r28
    1520:	81 54       	subi	r24, 0x41	; 65
    1522:	9f 4f       	sbci	r25, 0xFF	; 255
    1524:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1528:	3b c0       	rjmp	.+118    	; 0x15a0 <__stack+0xd41>
		case 45:   lcd_locate(1,0);lcd_str(Konwiktorska);			break;
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	60 e0       	ldi	r22, 0x00	; 0
    152e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1532:	ce 01       	movw	r24, r28
    1534:	80 53       	subi	r24, 0x30	; 48
    1536:	9f 4f       	sbci	r25, 0xFF	; 255
    1538:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    153c:	31 c0       	rjmp	.+98     	; 0x15a0 <__stack+0xd41>
		case 46:   lcd_locate(1,0);lcd_str(Metro_Marymont);			break;
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1546:	ce 01       	movw	r24, r28
    1548:	83 52       	subi	r24, 0x23	; 35
    154a:	9f 4f       	sbci	r25, 0xFF	; 255
    154c:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1550:	27 c0       	rjmp	.+78     	; 0x15a0 <__stack+0xd41>
		case 47:   lcd_locate(1,0);lcd_str(Dw_Wsch_Kijowska);		break;
    1552:	81 e0       	ldi	r24, 0x01	; 1
    1554:	60 e0       	ldi	r22, 0x00	; 0
    1556:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    155a:	ce 01       	movw	r24, r28
    155c:	84 51       	subi	r24, 0x14	; 20
    155e:	9f 4f       	sbci	r25, 0xFF	; 255
    1560:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1564:	1d c0       	rjmp	.+58     	; 0x15a0 <__stack+0xd41>
		case 48:   lcd_locate(1,0);lcd_str(Annopol);				break;
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    156e:	ce 01       	movw	r24, r28
    1570:	83 50       	subi	r24, 0x03	; 3
    1572:	9f 4f       	sbci	r25, 0xFF	; 255
    1574:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    1578:	13 c0       	rjmp	.+38     	; 0x15a0 <__stack+0xd41>
		case 49:   lcd_locate(1,0);lcd_str(Banacha);				break;
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1582:	ce 01       	movw	r24, r28
    1584:	8b 5f       	subi	r24, 0xFB	; 251
    1586:	9e 4f       	sbci	r25, 0xFE	; 254
    1588:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    158c:	09 c0       	rjmp	.+18     	; 0x15a0 <__stack+0xd41>
		case 50:   lcd_locate(1,0);lcd_str(Lipkow_Muzeum);			break;
    158e:	81 e0       	ldi	r24, 0x01	; 1
    1590:	60 e0       	ldi	r22, 0x00	; 0
    1592:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    1596:	ce 01       	movw	r24, r28
    1598:	83 5f       	subi	r24, 0xF3	; 243
    159a:	9e 4f       	sbci	r25, 0xFE	; 254
    159c:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>

	}
}
    15a0:	c9 57       	subi	r28, 0x79	; 121
    15a2:	de 4f       	sbci	r29, 0xFE	; 254
    15a4:	0f b6       	in	r0, 0x3f	; 63
    15a6:	f8 94       	cli
    15a8:	de bf       	out	0x3e, r29	; 62
    15aa:	0f be       	out	0x3f, r0	; 63
    15ac:	cd bf       	out	0x3d, r28	; 61
    15ae:	cf 91       	pop	r28
    15b0:	df 91       	pop	r29
    15b2:	08 95       	ret

000015b4 <start>:
//-------------------------------------------------------------------------------------------------

// animacja startowa-------------------------------------------------------------------------------
void start(void){
    15b4:	df 93       	push	r29
    15b6:	cf 93       	push	r28
    15b8:	cd b7       	in	r28, 0x3d	; 61
    15ba:	de b7       	in	r29, 0x3e	; 62
    15bc:	ab 97       	sbiw	r28, 0x2b	; 43
    15be:	0f b6       	in	r0, 0x3f	; 63
    15c0:	f8 94       	cli
    15c2:	de bf       	out	0x3e, r29	; 62
    15c4:	0f be       	out	0x3f, r0	; 63
    15c6:	cd bf       	out	0x3d, r28	; 61
	lcd_cls();
    15c8:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <lcd_cls>
	lcd_locate(0,5);
    15cc:	80 e0       	ldi	r24, 0x00	; 0
    15ce:	65 e0       	ldi	r22, 0x05	; 5
    15d0:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
	lcd_str("START");
    15d4:	8b e7       	ldi	r24, 0x7B	; 123
    15d6:	91 e0       	ldi	r25, 0x01	; 1
    15d8:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	aa e7       	ldi	r26, 0x7A	; 122
    15e2:	b4 e4       	ldi	r27, 0x44	; 68
    15e4:	8f a3       	std	Y+39, r24	; 0x27
    15e6:	98 a7       	std	Y+40, r25	; 0x28
    15e8:	a9 a7       	std	Y+41, r26	; 0x29
    15ea:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15ec:	6f a1       	ldd	r22, Y+39	; 0x27
    15ee:	78 a5       	ldd	r23, Y+40	; 0x28
    15f0:	89 a5       	ldd	r24, Y+41	; 0x29
    15f2:	9a a5       	ldd	r25, Y+42	; 0x2a
    15f4:	20 e0       	ldi	r18, 0x00	; 0
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	4a e7       	ldi	r20, 0x7A	; 122
    15fa:	55 e4       	ldi	r21, 0x45	; 69
    15fc:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    1600:	dc 01       	movw	r26, r24
    1602:	cb 01       	movw	r24, r22
    1604:	8b a3       	std	Y+35, r24	; 0x23
    1606:	9c a3       	std	Y+36, r25	; 0x24
    1608:	ad a3       	std	Y+37, r26	; 0x25
    160a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    160c:	6b a1       	ldd	r22, Y+35	; 0x23
    160e:	7c a1       	ldd	r23, Y+36	; 0x24
    1610:	8d a1       	ldd	r24, Y+37	; 0x25
    1612:	9e a1       	ldd	r25, Y+38	; 0x26
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	40 e8       	ldi	r20, 0x80	; 128
    161a:	5f e3       	ldi	r21, 0x3F	; 63
    161c:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    1620:	88 23       	and	r24, r24
    1622:	2c f4       	brge	.+10     	; 0x162e <start+0x7a>
		__ticks = 1;
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	9a a3       	std	Y+34, r25	; 0x22
    162a:	89 a3       	std	Y+33, r24	; 0x21
    162c:	3f c0       	rjmp	.+126    	; 0x16ac <start+0xf8>
	else if (__tmp > 65535)
    162e:	6b a1       	ldd	r22, Y+35	; 0x23
    1630:	7c a1       	ldd	r23, Y+36	; 0x24
    1632:	8d a1       	ldd	r24, Y+37	; 0x25
    1634:	9e a1       	ldd	r25, Y+38	; 0x26
    1636:	20 e0       	ldi	r18, 0x00	; 0
    1638:	3f ef       	ldi	r19, 0xFF	; 255
    163a:	4f e7       	ldi	r20, 0x7F	; 127
    163c:	57 e4       	ldi	r21, 0x47	; 71
    163e:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    1642:	18 16       	cp	r1, r24
    1644:	4c f5       	brge	.+82     	; 0x1698 <start+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1646:	6f a1       	ldd	r22, Y+39	; 0x27
    1648:	78 a5       	ldd	r23, Y+40	; 0x28
    164a:	89 a5       	ldd	r24, Y+41	; 0x29
    164c:	9a a5       	ldd	r25, Y+42	; 0x2a
    164e:	20 e0       	ldi	r18, 0x00	; 0
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	40 e2       	ldi	r20, 0x20	; 32
    1654:	51 e4       	ldi	r21, 0x41	; 65
    1656:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    165a:	dc 01       	movw	r26, r24
    165c:	cb 01       	movw	r24, r22
    165e:	bc 01       	movw	r22, r24
    1660:	cd 01       	movw	r24, r26
    1662:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	9a a3       	std	Y+34, r25	; 0x22
    166c:	89 a3       	std	Y+33, r24	; 0x21
    166e:	0f c0       	rjmp	.+30     	; 0x168e <start+0xda>
    1670:	80 e9       	ldi	r24, 0x90	; 144
    1672:	91 e0       	ldi	r25, 0x01	; 1
    1674:	98 a3       	std	Y+32, r25	; 0x20
    1676:	8f 8f       	std	Y+31, r24	; 0x1f
    1678:	8f 8d       	ldd	r24, Y+31	; 0x1f
    167a:	98 a1       	ldd	r25, Y+32	; 0x20
    167c:	01 97       	sbiw	r24, 0x01	; 1
    167e:	f1 f7       	brne	.-4      	; 0x167c <start+0xc8>
    1680:	98 a3       	std	Y+32, r25	; 0x20
    1682:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1684:	89 a1       	ldd	r24, Y+33	; 0x21
    1686:	9a a1       	ldd	r25, Y+34	; 0x22
    1688:	01 97       	sbiw	r24, 0x01	; 1
    168a:	9a a3       	std	Y+34, r25	; 0x22
    168c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    168e:	89 a1       	ldd	r24, Y+33	; 0x21
    1690:	9a a1       	ldd	r25, Y+34	; 0x22
    1692:	00 97       	sbiw	r24, 0x00	; 0
    1694:	69 f7       	brne	.-38     	; 0x1670 <start+0xbc>
    1696:	14 c0       	rjmp	.+40     	; 0x16c0 <start+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1698:	6b a1       	ldd	r22, Y+35	; 0x23
    169a:	7c a1       	ldd	r23, Y+36	; 0x24
    169c:	8d a1       	ldd	r24, Y+37	; 0x25
    169e:	9e a1       	ldd	r25, Y+38	; 0x26
    16a0:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    16a4:	dc 01       	movw	r26, r24
    16a6:	cb 01       	movw	r24, r22
    16a8:	9a a3       	std	Y+34, r25	; 0x22
    16aa:	89 a3       	std	Y+33, r24	; 0x21
    16ac:	89 a1       	ldd	r24, Y+33	; 0x21
    16ae:	9a a1       	ldd	r25, Y+34	; 0x22
    16b0:	9e 8f       	std	Y+30, r25	; 0x1e
    16b2:	8d 8f       	std	Y+29, r24	; 0x1d
    16b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    16b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    16b8:	01 97       	sbiw	r24, 0x01	; 1
    16ba:	f1 f7       	brne	.-4      	; 0x16b8 <start+0x104>
    16bc:	9e 8f       	std	Y+30, r25	; 0x1e
    16be:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1000);
	for (uint8_t i=0; i<16; i++){
    16c0:	1b a6       	std	Y+43, r1	; 0x2b
    16c2:	7d c0       	rjmp	.+250    	; 0x17be <start+0x20a>
		lcd_locate(1,i);
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	6b a5       	ldd	r22, Y+43	; 0x2b
    16c8:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	a8 e4       	ldi	r26, 0x48	; 72
    16d2:	b2 e4       	ldi	r27, 0x42	; 66
    16d4:	89 8f       	std	Y+25, r24	; 0x19
    16d6:	9a 8f       	std	Y+26, r25	; 0x1a
    16d8:	ab 8f       	std	Y+27, r26	; 0x1b
    16da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16dc:	69 8d       	ldd	r22, Y+25	; 0x19
    16de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	4a e7       	ldi	r20, 0x7A	; 122
    16ea:	55 e4       	ldi	r21, 0x45	; 69
    16ec:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    16f0:	dc 01       	movw	r26, r24
    16f2:	cb 01       	movw	r24, r22
    16f4:	8d 8b       	std	Y+21, r24	; 0x15
    16f6:	9e 8b       	std	Y+22, r25	; 0x16
    16f8:	af 8b       	std	Y+23, r26	; 0x17
    16fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    16fc:	6d 89       	ldd	r22, Y+21	; 0x15
    16fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1700:	8f 89       	ldd	r24, Y+23	; 0x17
    1702:	98 8d       	ldd	r25, Y+24	; 0x18
    1704:	20 e0       	ldi	r18, 0x00	; 0
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	40 e8       	ldi	r20, 0x80	; 128
    170a:	5f e3       	ldi	r21, 0x3F	; 63
    170c:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    1710:	88 23       	and	r24, r24
    1712:	2c f4       	brge	.+10     	; 0x171e <start+0x16a>
		__ticks = 1;
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	9c 8b       	std	Y+20, r25	; 0x14
    171a:	8b 8b       	std	Y+19, r24	; 0x13
    171c:	3f c0       	rjmp	.+126    	; 0x179c <start+0x1e8>
	else if (__tmp > 65535)
    171e:	6d 89       	ldd	r22, Y+21	; 0x15
    1720:	7e 89       	ldd	r23, Y+22	; 0x16
    1722:	8f 89       	ldd	r24, Y+23	; 0x17
    1724:	98 8d       	ldd	r25, Y+24	; 0x18
    1726:	20 e0       	ldi	r18, 0x00	; 0
    1728:	3f ef       	ldi	r19, 0xFF	; 255
    172a:	4f e7       	ldi	r20, 0x7F	; 127
    172c:	57 e4       	ldi	r21, 0x47	; 71
    172e:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    1732:	18 16       	cp	r1, r24
    1734:	4c f5       	brge	.+82     	; 0x1788 <start+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1736:	69 8d       	ldd	r22, Y+25	; 0x19
    1738:	7a 8d       	ldd	r23, Y+26	; 0x1a
    173a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    173c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	40 e2       	ldi	r20, 0x20	; 32
    1744:	51 e4       	ldi	r21, 0x41	; 65
    1746:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    174a:	dc 01       	movw	r26, r24
    174c:	cb 01       	movw	r24, r22
    174e:	bc 01       	movw	r22, r24
    1750:	cd 01       	movw	r24, r26
    1752:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    1756:	dc 01       	movw	r26, r24
    1758:	cb 01       	movw	r24, r22
    175a:	9c 8b       	std	Y+20, r25	; 0x14
    175c:	8b 8b       	std	Y+19, r24	; 0x13
    175e:	0f c0       	rjmp	.+30     	; 0x177e <start+0x1ca>
    1760:	80 e9       	ldi	r24, 0x90	; 144
    1762:	91 e0       	ldi	r25, 0x01	; 1
    1764:	9a 8b       	std	Y+18, r25	; 0x12
    1766:	89 8b       	std	Y+17, r24	; 0x11
    1768:	89 89       	ldd	r24, Y+17	; 0x11
    176a:	9a 89       	ldd	r25, Y+18	; 0x12
    176c:	01 97       	sbiw	r24, 0x01	; 1
    176e:	f1 f7       	brne	.-4      	; 0x176c <start+0x1b8>
    1770:	9a 8b       	std	Y+18, r25	; 0x12
    1772:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1774:	8b 89       	ldd	r24, Y+19	; 0x13
    1776:	9c 89       	ldd	r25, Y+20	; 0x14
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	9c 8b       	std	Y+20, r25	; 0x14
    177c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    177e:	8b 89       	ldd	r24, Y+19	; 0x13
    1780:	9c 89       	ldd	r25, Y+20	; 0x14
    1782:	00 97       	sbiw	r24, 0x00	; 0
    1784:	69 f7       	brne	.-38     	; 0x1760 <start+0x1ac>
    1786:	14 c0       	rjmp	.+40     	; 0x17b0 <start+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1788:	6d 89       	ldd	r22, Y+21	; 0x15
    178a:	7e 89       	ldd	r23, Y+22	; 0x16
    178c:	8f 89       	ldd	r24, Y+23	; 0x17
    178e:	98 8d       	ldd	r25, Y+24	; 0x18
    1790:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    1794:	dc 01       	movw	r26, r24
    1796:	cb 01       	movw	r24, r22
    1798:	9c 8b       	std	Y+20, r25	; 0x14
    179a:	8b 8b       	std	Y+19, r24	; 0x13
    179c:	8b 89       	ldd	r24, Y+19	; 0x13
    179e:	9c 89       	ldd	r25, Y+20	; 0x14
    17a0:	98 8b       	std	Y+16, r25	; 0x10
    17a2:	8f 87       	std	Y+15, r24	; 0x0f
    17a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    17a6:	98 89       	ldd	r25, Y+16	; 0x10
    17a8:	01 97       	sbiw	r24, 0x01	; 1
    17aa:	f1 f7       	brne	.-4      	; 0x17a8 <start+0x1f4>
    17ac:	98 8b       	std	Y+16, r25	; 0x10
    17ae:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(50);
		lcd_str(".");
    17b0:	81 e8       	ldi	r24, 0x81	; 129
    17b2:	91 e0       	ldi	r25, 0x01	; 1
    17b4:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
void start(void){
	lcd_cls();
	lcd_locate(0,5);
	lcd_str("START");
	_delay_ms(1000);
	for (uint8_t i=0; i<16; i++){
    17b8:	8b a5       	ldd	r24, Y+43	; 0x2b
    17ba:	8f 5f       	subi	r24, 0xFF	; 255
    17bc:	8b a7       	std	Y+43, r24	; 0x2b
    17be:	8b a5       	ldd	r24, Y+43	; 0x2b
    17c0:	80 31       	cpi	r24, 0x10	; 16
    17c2:	08 f4       	brcc	.+2      	; 0x17c6 <start+0x212>
    17c4:	7f cf       	rjmp	.-258    	; 0x16c4 <start+0x110>
    17c6:	80 e0       	ldi	r24, 0x00	; 0
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	aa e7       	ldi	r26, 0x7A	; 122
    17cc:	b4 e4       	ldi	r27, 0x44	; 68
    17ce:	8b 87       	std	Y+11, r24	; 0x0b
    17d0:	9c 87       	std	Y+12, r25	; 0x0c
    17d2:	ad 87       	std	Y+13, r26	; 0x0d
    17d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    17d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    17da:	8d 85       	ldd	r24, Y+13	; 0x0d
    17dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    17de:	20 e0       	ldi	r18, 0x00	; 0
    17e0:	30 e0       	ldi	r19, 0x00	; 0
    17e2:	4a e7       	ldi	r20, 0x7A	; 122
    17e4:	55 e4       	ldi	r21, 0x45	; 69
    17e6:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    17ea:	dc 01       	movw	r26, r24
    17ec:	cb 01       	movw	r24, r22
    17ee:	8f 83       	std	Y+7, r24	; 0x07
    17f0:	98 87       	std	Y+8, r25	; 0x08
    17f2:	a9 87       	std	Y+9, r26	; 0x09
    17f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17f6:	6f 81       	ldd	r22, Y+7	; 0x07
    17f8:	78 85       	ldd	r23, Y+8	; 0x08
    17fa:	89 85       	ldd	r24, Y+9	; 0x09
    17fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	40 e8       	ldi	r20, 0x80	; 128
    1804:	5f e3       	ldi	r21, 0x3F	; 63
    1806:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    180a:	88 23       	and	r24, r24
    180c:	2c f4       	brge	.+10     	; 0x1818 <start+0x264>
		__ticks = 1;
    180e:	81 e0       	ldi	r24, 0x01	; 1
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	9e 83       	std	Y+6, r25	; 0x06
    1814:	8d 83       	std	Y+5, r24	; 0x05
    1816:	3f c0       	rjmp	.+126    	; 0x1896 <start+0x2e2>
	else if (__tmp > 65535)
    1818:	6f 81       	ldd	r22, Y+7	; 0x07
    181a:	78 85       	ldd	r23, Y+8	; 0x08
    181c:	89 85       	ldd	r24, Y+9	; 0x09
    181e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1820:	20 e0       	ldi	r18, 0x00	; 0
    1822:	3f ef       	ldi	r19, 0xFF	; 255
    1824:	4f e7       	ldi	r20, 0x7F	; 127
    1826:	57 e4       	ldi	r21, 0x47	; 71
    1828:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    182c:	18 16       	cp	r1, r24
    182e:	4c f5       	brge	.+82     	; 0x1882 <start+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1830:	6b 85       	ldd	r22, Y+11	; 0x0b
    1832:	7c 85       	ldd	r23, Y+12	; 0x0c
    1834:	8d 85       	ldd	r24, Y+13	; 0x0d
    1836:	9e 85       	ldd	r25, Y+14	; 0x0e
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	40 e2       	ldi	r20, 0x20	; 32
    183e:	51 e4       	ldi	r21, 0x41	; 65
    1840:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    1844:	dc 01       	movw	r26, r24
    1846:	cb 01       	movw	r24, r22
    1848:	bc 01       	movw	r22, r24
    184a:	cd 01       	movw	r24, r26
    184c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    1850:	dc 01       	movw	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	9e 83       	std	Y+6, r25	; 0x06
    1856:	8d 83       	std	Y+5, r24	; 0x05
    1858:	0f c0       	rjmp	.+30     	; 0x1878 <start+0x2c4>
    185a:	80 e9       	ldi	r24, 0x90	; 144
    185c:	91 e0       	ldi	r25, 0x01	; 1
    185e:	9c 83       	std	Y+4, r25	; 0x04
    1860:	8b 83       	std	Y+3, r24	; 0x03
    1862:	8b 81       	ldd	r24, Y+3	; 0x03
    1864:	9c 81       	ldd	r25, Y+4	; 0x04
    1866:	01 97       	sbiw	r24, 0x01	; 1
    1868:	f1 f7       	brne	.-4      	; 0x1866 <start+0x2b2>
    186a:	9c 83       	std	Y+4, r25	; 0x04
    186c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    186e:	8d 81       	ldd	r24, Y+5	; 0x05
    1870:	9e 81       	ldd	r25, Y+6	; 0x06
    1872:	01 97       	sbiw	r24, 0x01	; 1
    1874:	9e 83       	std	Y+6, r25	; 0x06
    1876:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1878:	8d 81       	ldd	r24, Y+5	; 0x05
    187a:	9e 81       	ldd	r25, Y+6	; 0x06
    187c:	00 97       	sbiw	r24, 0x00	; 0
    187e:	69 f7       	brne	.-38     	; 0x185a <start+0x2a6>
    1880:	14 c0       	rjmp	.+40     	; 0x18aa <start+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1882:	6f 81       	ldd	r22, Y+7	; 0x07
    1884:	78 85       	ldd	r23, Y+8	; 0x08
    1886:	89 85       	ldd	r24, Y+9	; 0x09
    1888:	9a 85       	ldd	r25, Y+10	; 0x0a
    188a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    188e:	dc 01       	movw	r26, r24
    1890:	cb 01       	movw	r24, r22
    1892:	9e 83       	std	Y+6, r25	; 0x06
    1894:	8d 83       	std	Y+5, r24	; 0x05
    1896:	8d 81       	ldd	r24, Y+5	; 0x05
    1898:	9e 81       	ldd	r25, Y+6	; 0x06
    189a:	9a 83       	std	Y+2, r25	; 0x02
    189c:	89 83       	std	Y+1, r24	; 0x01
    189e:	89 81       	ldd	r24, Y+1	; 0x01
    18a0:	9a 81       	ldd	r25, Y+2	; 0x02
    18a2:	01 97       	sbiw	r24, 0x01	; 1
    18a4:	f1 f7       	brne	.-4      	; 0x18a2 <start+0x2ee>
    18a6:	9a 83       	std	Y+2, r25	; 0x02
    18a8:	89 83       	std	Y+1, r24	; 0x01
		lcd_locate(1,i);
		_delay_ms(50);
		lcd_str(".");
	}
	_delay_ms(1000);
	lcd_cls();
    18aa:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <lcd_cls>
}
    18ae:	ab 96       	adiw	r28, 0x2b	; 43
    18b0:	0f b6       	in	r0, 0x3f	; 63
    18b2:	f8 94       	cli
    18b4:	de bf       	out	0x3e, r29	; 62
    18b6:	0f be       	out	0x3f, r0	; 63
    18b8:	cd bf       	out	0x3d, r28	; 61
    18ba:	cf 91       	pop	r28
    18bc:	df 91       	pop	r29
    18be:	08 95       	ret

000018c0 <_lcd_write_byte>:
//
//		 Zapis bajtu do wyœwietlacza LCD
//
//----------------------------------------------------------------------------------------
void _lcd_write_byte(unsigned char _data)
{
    18c0:	df 93       	push	r29
    18c2:	cf 93       	push	r28
    18c4:	0f 92       	push	r0
    18c6:	cd b7       	in	r28, 0x3d	; 61
    18c8:	de b7       	in	r29, 0x3e	; 62
    18ca:	89 83       	std	Y+1, r24	; 0x01
	// Ustawienie pinów portu LCD D4..D7 jako wyjœcia
	data_dir_out();
    18cc:	0e 94 9b 0c 	call	0x1936	; 0x1936 <data_dir_out>

#if USE_RW == 1
	CLR_RW;
    18d0:	ab e3       	ldi	r26, 0x3B	; 59
    18d2:	b0 e0       	ldi	r27, 0x00	; 0
    18d4:	eb e3       	ldi	r30, 0x3B	; 59
    18d6:	f0 e0       	ldi	r31, 0x00	; 0
    18d8:	80 81       	ld	r24, Z
    18da:	8d 7f       	andi	r24, 0xFD	; 253
    18dc:	8c 93       	st	X, r24
#endif

	SET_E;
    18de:	ab e3       	ldi	r26, 0x3B	; 59
    18e0:	b0 e0       	ldi	r27, 0x00	; 0
    18e2:	eb e3       	ldi	r30, 0x3B	; 59
    18e4:	f0 e0       	ldi	r31, 0x00	; 0
    18e6:	80 81       	ld	r24, Z
    18e8:	84 60       	ori	r24, 0x04	; 4
    18ea:	8c 93       	st	X, r24
	lcd_sendHalf(_data >> 4);			// wys³anie starszej czêœci bajtu danych D7..D4
    18ec:	89 81       	ldd	r24, Y+1	; 0x01
    18ee:	82 95       	swap	r24
    18f0:	8f 70       	andi	r24, 0x0F	; 15
    18f2:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    18f6:	ab e3       	ldi	r26, 0x3B	; 59
    18f8:	b0 e0       	ldi	r27, 0x00	; 0
    18fa:	eb e3       	ldi	r30, 0x3B	; 59
    18fc:	f0 e0       	ldi	r31, 0x00	; 0
    18fe:	80 81       	ld	r24, Z
    1900:	8b 7f       	andi	r24, 0xFB	; 251
    1902:	8c 93       	st	X, r24

	SET_E;
    1904:	ab e3       	ldi	r26, 0x3B	; 59
    1906:	b0 e0       	ldi	r27, 0x00	; 0
    1908:	eb e3       	ldi	r30, 0x3B	; 59
    190a:	f0 e0       	ldi	r31, 0x00	; 0
    190c:	80 81       	ld	r24, Z
    190e:	84 60       	ori	r24, 0x04	; 4
    1910:	8c 93       	st	X, r24
	lcd_sendHalf(_data);				// wys³anie m³odszej czêœci bajtu danych D3..D0
    1912:	89 81       	ldd	r24, Y+1	; 0x01
    1914:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    1918:	ab e3       	ldi	r26, 0x3B	; 59
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	eb e3       	ldi	r30, 0x3B	; 59
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	8b 7f       	andi	r24, 0xFB	; 251
    1924:	8c 93       	st	X, r24

#if USE_RW == 1
	while( (check_BF() & (1<<7)) );
    1926:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <check_BF>
    192a:	88 23       	and	r24, r24
    192c:	e4 f3       	brlt	.-8      	; 0x1926 <_lcd_write_byte+0x66>
#else
	_delay_us(120);
#endif

}
    192e:	0f 90       	pop	r0
    1930:	cf 91       	pop	r28
    1932:	df 91       	pop	r29
    1934:	08 95       	ret

00001936 <data_dir_out>:
//
//		 Ustawienie wszystkich 4 linii danych jako WYjœcia
//
//----------------------------------------------------------------------------------------
static inline void data_dir_out(void)
{
    1936:	df 93       	push	r29
    1938:	cf 93       	push	r28
    193a:	cd b7       	in	r28, 0x3d	; 61
    193c:	de b7       	in	r29, 0x3e	; 62
	DDR(LCD_D7PORT)	|= (1<<LCD_D7);
    193e:	aa e3       	ldi	r26, 0x3A	; 58
    1940:	b0 e0       	ldi	r27, 0x00	; 0
    1942:	ea e3       	ldi	r30, 0x3A	; 58
    1944:	f0 e0       	ldi	r31, 0x00	; 0
    1946:	80 81       	ld	r24, Z
    1948:	80 64       	ori	r24, 0x40	; 64
    194a:	8c 93       	st	X, r24
	DDR(LCD_D6PORT)	|= (1<<LCD_D6);
    194c:	aa e3       	ldi	r26, 0x3A	; 58
    194e:	b0 e0       	ldi	r27, 0x00	; 0
    1950:	ea e3       	ldi	r30, 0x3A	; 58
    1952:	f0 e0       	ldi	r31, 0x00	; 0
    1954:	80 81       	ld	r24, Z
    1956:	80 62       	ori	r24, 0x20	; 32
    1958:	8c 93       	st	X, r24
	DDR(LCD_D5PORT)	|= (1<<LCD_D5);
    195a:	aa e3       	ldi	r26, 0x3A	; 58
    195c:	b0 e0       	ldi	r27, 0x00	; 0
    195e:	ea e3       	ldi	r30, 0x3A	; 58
    1960:	f0 e0       	ldi	r31, 0x00	; 0
    1962:	80 81       	ld	r24, Z
    1964:	80 61       	ori	r24, 0x10	; 16
    1966:	8c 93       	st	X, r24
	DDR(LCD_D4PORT)	|= (1<<LCD_D4);
    1968:	aa e3       	ldi	r26, 0x3A	; 58
    196a:	b0 e0       	ldi	r27, 0x00	; 0
    196c:	ea e3       	ldi	r30, 0x3A	; 58
    196e:	f0 e0       	ldi	r31, 0x00	; 0
    1970:	80 81       	ld	r24, Z
    1972:	88 60       	ori	r24, 0x08	; 8
    1974:	8c 93       	st	X, r24
}
    1976:	cf 91       	pop	r28
    1978:	df 91       	pop	r29
    197a:	08 95       	ret

0000197c <lcd_sendHalf>:
//
//		 Wys³anie po³ówki bajtu do LCD (D4..D7)
//
//----------------------------------------------------------------------------------------
static inline void lcd_sendHalf(uint8_t data)
{
    197c:	df 93       	push	r29
    197e:	cf 93       	push	r28
    1980:	0f 92       	push	r0
    1982:	cd b7       	in	r28, 0x3d	; 61
    1984:	de b7       	in	r29, 0x3e	; 62
    1986:	89 83       	std	Y+1, r24	; 0x01
	if (data&(1<<0)) PORT(LCD_D4PORT) |= (1<<LCD_D4); else PORT(LCD_D4PORT) &= ~(1<<LCD_D4);
    1988:	89 81       	ldd	r24, Y+1	; 0x01
    198a:	88 2f       	mov	r24, r24
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	81 70       	andi	r24, 0x01	; 1
    1990:	90 70       	andi	r25, 0x00	; 0
    1992:	88 23       	and	r24, r24
    1994:	41 f0       	breq	.+16     	; 0x19a6 <lcd_sendHalf+0x2a>
    1996:	ab e3       	ldi	r26, 0x3B	; 59
    1998:	b0 e0       	ldi	r27, 0x00	; 0
    199a:	eb e3       	ldi	r30, 0x3B	; 59
    199c:	f0 e0       	ldi	r31, 0x00	; 0
    199e:	80 81       	ld	r24, Z
    19a0:	88 60       	ori	r24, 0x08	; 8
    19a2:	8c 93       	st	X, r24
    19a4:	07 c0       	rjmp	.+14     	; 0x19b4 <lcd_sendHalf+0x38>
    19a6:	ab e3       	ldi	r26, 0x3B	; 59
    19a8:	b0 e0       	ldi	r27, 0x00	; 0
    19aa:	eb e3       	ldi	r30, 0x3B	; 59
    19ac:	f0 e0       	ldi	r31, 0x00	; 0
    19ae:	80 81       	ld	r24, Z
    19b0:	87 7f       	andi	r24, 0xF7	; 247
    19b2:	8c 93       	st	X, r24
	if (data&(1<<1)) PORT(LCD_D5PORT) |= (1<<LCD_D5); else PORT(LCD_D5PORT) &= ~(1<<LCD_D5);
    19b4:	89 81       	ldd	r24, Y+1	; 0x01
    19b6:	88 2f       	mov	r24, r24
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	82 70       	andi	r24, 0x02	; 2
    19bc:	90 70       	andi	r25, 0x00	; 0
    19be:	00 97       	sbiw	r24, 0x00	; 0
    19c0:	41 f0       	breq	.+16     	; 0x19d2 <lcd_sendHalf+0x56>
    19c2:	ab e3       	ldi	r26, 0x3B	; 59
    19c4:	b0 e0       	ldi	r27, 0x00	; 0
    19c6:	eb e3       	ldi	r30, 0x3B	; 59
    19c8:	f0 e0       	ldi	r31, 0x00	; 0
    19ca:	80 81       	ld	r24, Z
    19cc:	80 61       	ori	r24, 0x10	; 16
    19ce:	8c 93       	st	X, r24
    19d0:	07 c0       	rjmp	.+14     	; 0x19e0 <lcd_sendHalf+0x64>
    19d2:	ab e3       	ldi	r26, 0x3B	; 59
    19d4:	b0 e0       	ldi	r27, 0x00	; 0
    19d6:	eb e3       	ldi	r30, 0x3B	; 59
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	80 81       	ld	r24, Z
    19dc:	8f 7e       	andi	r24, 0xEF	; 239
    19de:	8c 93       	st	X, r24
	if (data&(1<<2)) PORT(LCD_D6PORT) |= (1<<LCD_D6); else PORT(LCD_D6PORT) &= ~(1<<LCD_D6);
    19e0:	89 81       	ldd	r24, Y+1	; 0x01
    19e2:	88 2f       	mov	r24, r24
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	84 70       	andi	r24, 0x04	; 4
    19e8:	90 70       	andi	r25, 0x00	; 0
    19ea:	00 97       	sbiw	r24, 0x00	; 0
    19ec:	41 f0       	breq	.+16     	; 0x19fe <lcd_sendHalf+0x82>
    19ee:	ab e3       	ldi	r26, 0x3B	; 59
    19f0:	b0 e0       	ldi	r27, 0x00	; 0
    19f2:	eb e3       	ldi	r30, 0x3B	; 59
    19f4:	f0 e0       	ldi	r31, 0x00	; 0
    19f6:	80 81       	ld	r24, Z
    19f8:	80 62       	ori	r24, 0x20	; 32
    19fa:	8c 93       	st	X, r24
    19fc:	07 c0       	rjmp	.+14     	; 0x1a0c <lcd_sendHalf+0x90>
    19fe:	ab e3       	ldi	r26, 0x3B	; 59
    1a00:	b0 e0       	ldi	r27, 0x00	; 0
    1a02:	eb e3       	ldi	r30, 0x3B	; 59
    1a04:	f0 e0       	ldi	r31, 0x00	; 0
    1a06:	80 81       	ld	r24, Z
    1a08:	8f 7d       	andi	r24, 0xDF	; 223
    1a0a:	8c 93       	st	X, r24
	if (data&(1<<3)) PORT(LCD_D7PORT) |= (1<<LCD_D7); else PORT(LCD_D7PORT) &= ~(1<<LCD_D7);
    1a0c:	89 81       	ldd	r24, Y+1	; 0x01
    1a0e:	88 2f       	mov	r24, r24
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	88 70       	andi	r24, 0x08	; 8
    1a14:	90 70       	andi	r25, 0x00	; 0
    1a16:	00 97       	sbiw	r24, 0x00	; 0
    1a18:	41 f0       	breq	.+16     	; 0x1a2a <lcd_sendHalf+0xae>
    1a1a:	ab e3       	ldi	r26, 0x3B	; 59
    1a1c:	b0 e0       	ldi	r27, 0x00	; 0
    1a1e:	eb e3       	ldi	r30, 0x3B	; 59
    1a20:	f0 e0       	ldi	r31, 0x00	; 0
    1a22:	80 81       	ld	r24, Z
    1a24:	80 64       	ori	r24, 0x40	; 64
    1a26:	8c 93       	st	X, r24
    1a28:	07 c0       	rjmp	.+14     	; 0x1a38 <lcd_sendHalf+0xbc>
    1a2a:	ab e3       	ldi	r26, 0x3B	; 59
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	eb e3       	ldi	r30, 0x3B	; 59
    1a30:	f0 e0       	ldi	r31, 0x00	; 0
    1a32:	80 81       	ld	r24, Z
    1a34:	8f 7b       	andi	r24, 0xBF	; 191
    1a36:	8c 93       	st	X, r24
}
    1a38:	0f 90       	pop	r0
    1a3a:	cf 91       	pop	r28
    1a3c:	df 91       	pop	r29
    1a3e:	08 95       	ret

00001a40 <_lcd_read_byte>:
//
//		 Odczyt bajtu z wyœwietlacza LCD
//
//----------------------------------------------------------------------------------------
uint8_t _lcd_read_byte(void)
{
    1a40:	df 93       	push	r29
    1a42:	cf 93       	push	r28
    1a44:	0f 92       	push	r0
    1a46:	cd b7       	in	r28, 0x3d	; 61
    1a48:	de b7       	in	r29, 0x3e	; 62
	uint8_t result=0;
    1a4a:	19 82       	std	Y+1, r1	; 0x01
	data_dir_in();
    1a4c:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <data_dir_in>

	SET_RW;
    1a50:	ab e3       	ldi	r26, 0x3B	; 59
    1a52:	b0 e0       	ldi	r27, 0x00	; 0
    1a54:	eb e3       	ldi	r30, 0x3B	; 59
    1a56:	f0 e0       	ldi	r31, 0x00	; 0
    1a58:	80 81       	ld	r24, Z
    1a5a:	82 60       	ori	r24, 0x02	; 2
    1a5c:	8c 93       	st	X, r24

	SET_E;
    1a5e:	ab e3       	ldi	r26, 0x3B	; 59
    1a60:	b0 e0       	ldi	r27, 0x00	; 0
    1a62:	eb e3       	ldi	r30, 0x3B	; 59
    1a64:	f0 e0       	ldi	r31, 0x00	; 0
    1a66:	80 81       	ld	r24, Z
    1a68:	84 60       	ori	r24, 0x04	; 4
    1a6a:	8c 93       	st	X, r24
	result = (lcd_readHalf() << 4);	// odczyt starszej czêœci bajtu z LCD D7..D4
    1a6c:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <lcd_readHalf>
    1a70:	82 95       	swap	r24
    1a72:	80 7f       	andi	r24, 0xF0	; 240
    1a74:	89 83       	std	Y+1, r24	; 0x01
	CLR_E;
    1a76:	ab e3       	ldi	r26, 0x3B	; 59
    1a78:	b0 e0       	ldi	r27, 0x00	; 0
    1a7a:	eb e3       	ldi	r30, 0x3B	; 59
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	80 81       	ld	r24, Z
    1a80:	8b 7f       	andi	r24, 0xFB	; 251
    1a82:	8c 93       	st	X, r24

	SET_E;
    1a84:	ab e3       	ldi	r26, 0x3B	; 59
    1a86:	b0 e0       	ldi	r27, 0x00	; 0
    1a88:	eb e3       	ldi	r30, 0x3B	; 59
    1a8a:	f0 e0       	ldi	r31, 0x00	; 0
    1a8c:	80 81       	ld	r24, Z
    1a8e:	84 60       	ori	r24, 0x04	; 4
    1a90:	8c 93       	st	X, r24
	result |= lcd_readHalf();			// odczyt m³odszej czêœci bajtu z LCD D3..D0
    1a92:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <lcd_readHalf>
    1a96:	98 2f       	mov	r25, r24
    1a98:	89 81       	ldd	r24, Y+1	; 0x01
    1a9a:	89 2b       	or	r24, r25
    1a9c:	89 83       	std	Y+1, r24	; 0x01
	CLR_E;
    1a9e:	ab e3       	ldi	r26, 0x3B	; 59
    1aa0:	b0 e0       	ldi	r27, 0x00	; 0
    1aa2:	eb e3       	ldi	r30, 0x3B	; 59
    1aa4:	f0 e0       	ldi	r31, 0x00	; 0
    1aa6:	80 81       	ld	r24, Z
    1aa8:	8b 7f       	andi	r24, 0xFB	; 251
    1aaa:	8c 93       	st	X, r24

	return result;
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
}
    1aae:	0f 90       	pop	r0
    1ab0:	cf 91       	pop	r28
    1ab2:	df 91       	pop	r29
    1ab4:	08 95       	ret

00001ab6 <data_dir_in>:
//
//		 Ustawienie wszystkich 4 linii danych jako WEjœcia
//
//----------------------------------------------------------------------------------------
static inline void data_dir_in(void)
{
    1ab6:	df 93       	push	r29
    1ab8:	cf 93       	push	r28
    1aba:	cd b7       	in	r28, 0x3d	; 61
    1abc:	de b7       	in	r29, 0x3e	; 62
	DDR(LCD_D7PORT)	&= ~(1<<LCD_D7);
    1abe:	aa e3       	ldi	r26, 0x3A	; 58
    1ac0:	b0 e0       	ldi	r27, 0x00	; 0
    1ac2:	ea e3       	ldi	r30, 0x3A	; 58
    1ac4:	f0 e0       	ldi	r31, 0x00	; 0
    1ac6:	80 81       	ld	r24, Z
    1ac8:	8f 7b       	andi	r24, 0xBF	; 191
    1aca:	8c 93       	st	X, r24
	DDR(LCD_D6PORT)	&= ~(1<<LCD_D6);
    1acc:	aa e3       	ldi	r26, 0x3A	; 58
    1ace:	b0 e0       	ldi	r27, 0x00	; 0
    1ad0:	ea e3       	ldi	r30, 0x3A	; 58
    1ad2:	f0 e0       	ldi	r31, 0x00	; 0
    1ad4:	80 81       	ld	r24, Z
    1ad6:	8f 7d       	andi	r24, 0xDF	; 223
    1ad8:	8c 93       	st	X, r24
	DDR(LCD_D5PORT)	&= ~(1<<LCD_D5);
    1ada:	aa e3       	ldi	r26, 0x3A	; 58
    1adc:	b0 e0       	ldi	r27, 0x00	; 0
    1ade:	ea e3       	ldi	r30, 0x3A	; 58
    1ae0:	f0 e0       	ldi	r31, 0x00	; 0
    1ae2:	80 81       	ld	r24, Z
    1ae4:	8f 7e       	andi	r24, 0xEF	; 239
    1ae6:	8c 93       	st	X, r24
	DDR(LCD_D4PORT)	&= ~(1<<LCD_D4);
    1ae8:	aa e3       	ldi	r26, 0x3A	; 58
    1aea:	b0 e0       	ldi	r27, 0x00	; 0
    1aec:	ea e3       	ldi	r30, 0x3A	; 58
    1aee:	f0 e0       	ldi	r31, 0x00	; 0
    1af0:	80 81       	ld	r24, Z
    1af2:	87 7f       	andi	r24, 0xF7	; 247
    1af4:	8c 93       	st	X, r24
}
    1af6:	cf 91       	pop	r28
    1af8:	df 91       	pop	r29
    1afa:	08 95       	ret

00001afc <lcd_readHalf>:
//
//		 Odczyt po³ówki bajtu z LCD (D4..D7)
//
//----------------------------------------------------------------------------------------
static inline uint8_t lcd_readHalf(void)
{
    1afc:	df 93       	push	r29
    1afe:	cf 93       	push	r28
    1b00:	0f 92       	push	r0
    1b02:	cd b7       	in	r28, 0x3d	; 61
    1b04:	de b7       	in	r29, 0x3e	; 62
	uint8_t result=0;
    1b06:	19 82       	std	Y+1, r1	; 0x01

	if(PIN(LCD_D4PORT)&(1<<LCD_D4)) result |= (1<<0);
    1b08:	e9 e3       	ldi	r30, 0x39	; 57
    1b0a:	f0 e0       	ldi	r31, 0x00	; 0
    1b0c:	80 81       	ld	r24, Z
    1b0e:	88 2f       	mov	r24, r24
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	88 70       	andi	r24, 0x08	; 8
    1b14:	90 70       	andi	r25, 0x00	; 0
    1b16:	00 97       	sbiw	r24, 0x00	; 0
    1b18:	19 f0       	breq	.+6      	; 0x1b20 <lcd_readHalf+0x24>
    1b1a:	89 81       	ldd	r24, Y+1	; 0x01
    1b1c:	81 60       	ori	r24, 0x01	; 1
    1b1e:	89 83       	std	Y+1, r24	; 0x01
	if(PIN(LCD_D5PORT)&(1<<LCD_D5)) result |= (1<<1);
    1b20:	e9 e3       	ldi	r30, 0x39	; 57
    1b22:	f0 e0       	ldi	r31, 0x00	; 0
    1b24:	80 81       	ld	r24, Z
    1b26:	88 2f       	mov	r24, r24
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	80 71       	andi	r24, 0x10	; 16
    1b2c:	90 70       	andi	r25, 0x00	; 0
    1b2e:	00 97       	sbiw	r24, 0x00	; 0
    1b30:	19 f0       	breq	.+6      	; 0x1b38 <lcd_readHalf+0x3c>
    1b32:	89 81       	ldd	r24, Y+1	; 0x01
    1b34:	82 60       	ori	r24, 0x02	; 2
    1b36:	89 83       	std	Y+1, r24	; 0x01
	if(PIN(LCD_D6PORT)&(1<<LCD_D6)) result |= (1<<2);
    1b38:	e9 e3       	ldi	r30, 0x39	; 57
    1b3a:	f0 e0       	ldi	r31, 0x00	; 0
    1b3c:	80 81       	ld	r24, Z
    1b3e:	88 2f       	mov	r24, r24
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	80 72       	andi	r24, 0x20	; 32
    1b44:	90 70       	andi	r25, 0x00	; 0
    1b46:	00 97       	sbiw	r24, 0x00	; 0
    1b48:	19 f0       	breq	.+6      	; 0x1b50 <lcd_readHalf+0x54>
    1b4a:	89 81       	ldd	r24, Y+1	; 0x01
    1b4c:	84 60       	ori	r24, 0x04	; 4
    1b4e:	89 83       	std	Y+1, r24	; 0x01
	if(PIN(LCD_D7PORT)&(1<<LCD_D7)) result |= (1<<3);
    1b50:	e9 e3       	ldi	r30, 0x39	; 57
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	80 81       	ld	r24, Z
    1b56:	88 2f       	mov	r24, r24
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	80 74       	andi	r24, 0x40	; 64
    1b5c:	90 70       	andi	r25, 0x00	; 0
    1b5e:	00 97       	sbiw	r24, 0x00	; 0
    1b60:	19 f0       	breq	.+6      	; 0x1b68 <lcd_readHalf+0x6c>
    1b62:	89 81       	ldd	r24, Y+1	; 0x01
    1b64:	88 60       	ori	r24, 0x08	; 8
    1b66:	89 83       	std	Y+1, r24	; 0x01

	return result;
    1b68:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b6a:	0f 90       	pop	r0
    1b6c:	cf 91       	pop	r28
    1b6e:	df 91       	pop	r29
    1b70:	08 95       	ret

00001b72 <check_BF>:
//
//		 Sprawdzenie stanu Busy Flag (Zajêtoœci wyœwietlacza)
//
//----------------------------------------------------------------------------------------
uint8_t check_BF(void)
{
    1b72:	df 93       	push	r29
    1b74:	cf 93       	push	r28
    1b76:	cd b7       	in	r28, 0x3d	; 61
    1b78:	de b7       	in	r29, 0x3e	; 62
	CLR_RS;
    1b7a:	ab e3       	ldi	r26, 0x3B	; 59
    1b7c:	b0 e0       	ldi	r27, 0x00	; 0
    1b7e:	eb e3       	ldi	r30, 0x3B	; 59
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	80 81       	ld	r24, Z
    1b84:	8e 7f       	andi	r24, 0xFE	; 254
    1b86:	8c 93       	st	X, r24
	return _lcd_read_byte();
    1b88:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <_lcd_read_byte>
}
    1b8c:	cf 91       	pop	r28
    1b8e:	df 91       	pop	r29
    1b90:	08 95       	ret

00001b92 <lcd_write_cmd>:
//
//		 Zapis komendy do wyœwietlacza LCD
//
//----------------------------------------------------------------------------------------
void lcd_write_cmd(uint8_t cmd)
{
    1b92:	df 93       	push	r29
    1b94:	cf 93       	push	r28
    1b96:	0f 92       	push	r0
    1b98:	cd b7       	in	r28, 0x3d	; 61
    1b9a:	de b7       	in	r29, 0x3e	; 62
    1b9c:	89 83       	std	Y+1, r24	; 0x01
	CLR_RS;
    1b9e:	ab e3       	ldi	r26, 0x3B	; 59
    1ba0:	b0 e0       	ldi	r27, 0x00	; 0
    1ba2:	eb e3       	ldi	r30, 0x3B	; 59
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	80 81       	ld	r24, Z
    1ba8:	8e 7f       	andi	r24, 0xFE	; 254
    1baa:	8c 93       	st	X, r24
	_lcd_write_byte(cmd);
    1bac:	89 81       	ldd	r24, Y+1	; 0x01
    1bae:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <_lcd_write_byte>
}
    1bb2:	0f 90       	pop	r0
    1bb4:	cf 91       	pop	r28
    1bb6:	df 91       	pop	r29
    1bb8:	08 95       	ret

00001bba <lcd_write_data>:
//
//		 Zapis danych do wyœwietlacza LCD
//
//----------------------------------------------------------------------------------------
void lcd_write_data(uint8_t data)
{
    1bba:	df 93       	push	r29
    1bbc:	cf 93       	push	r28
    1bbe:	0f 92       	push	r0
    1bc0:	cd b7       	in	r28, 0x3d	; 61
    1bc2:	de b7       	in	r29, 0x3e	; 62
    1bc4:	89 83       	std	Y+1, r24	; 0x01
	SET_RS;
    1bc6:	ab e3       	ldi	r26, 0x3B	; 59
    1bc8:	b0 e0       	ldi	r27, 0x00	; 0
    1bca:	eb e3       	ldi	r30, 0x3B	; 59
    1bcc:	f0 e0       	ldi	r31, 0x00	; 0
    1bce:	80 81       	ld	r24, Z
    1bd0:	81 60       	ori	r24, 0x01	; 1
    1bd2:	8c 93       	st	X, r24
	_lcd_write_byte(data);
    1bd4:	89 81       	ldd	r24, Y+1	; 0x01
    1bd6:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <_lcd_write_byte>
}
    1bda:	0f 90       	pop	r0
    1bdc:	cf 91       	pop	r28
    1bde:	df 91       	pop	r29
    1be0:	08 95       	ret

00001be2 <lcd_char>:
//		 8 w³asnych znaków zdefiniowanych w CGRAM
//		 wysy³amy za pomoc¹ kodów 0x80 do 0x87 zamiast 0x00 do 0x07
//
//----------------------------------------------------------------------------------------
void lcd_char(char c)
{
    1be2:	df 93       	push	r29
    1be4:	cf 93       	push	r28
    1be6:	00 d0       	rcall	.+0      	; 0x1be8 <lcd_char+0x6>
    1be8:	cd b7       	in	r28, 0x3d	; 61
    1bea:	de b7       	in	r29, 0x3e	; 62
    1bec:	89 83       	std	Y+1, r24	; 0x01
	lcd_write_data( ( c>=0x80 && c<=0x87 ) ? (c & 0x07) : c);
    1bee:	89 81       	ldd	r24, Y+1	; 0x01
    1bf0:	88 23       	and	r24, r24
    1bf2:	44 f4       	brge	.+16     	; 0x1c04 <lcd_char+0x22>
    1bf4:	89 81       	ldd	r24, Y+1	; 0x01
    1bf6:	88 38       	cpi	r24, 0x88	; 136
    1bf8:	28 f4       	brcc	.+10     	; 0x1c04 <lcd_char+0x22>
    1bfa:	89 81       	ldd	r24, Y+1	; 0x01
    1bfc:	98 2f       	mov	r25, r24
    1bfe:	97 70       	andi	r25, 0x07	; 7
    1c00:	9a 83       	std	Y+2, r25	; 0x02
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <lcd_char+0x26>
    1c04:	89 81       	ldd	r24, Y+1	; 0x01
    1c06:	8a 83       	std	Y+2, r24	; 0x02
    1c08:	8a 81       	ldd	r24, Y+2	; 0x02
    1c0a:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <lcd_write_data>
}
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	cf 91       	pop	r28
    1c14:	df 91       	pop	r29
    1c16:	08 95       	ret

00001c18 <lcd_str>:
//		 Wys³anie stringa do wyœwietlacza LCD z pamiêci RAM
//
//
//----------------------------------------------------------------------------------------
void lcd_str(char * str)
{
    1c18:	df 93       	push	r29
    1c1a:	cf 93       	push	r28
    1c1c:	00 d0       	rcall	.+0      	; 0x1c1e <lcd_str+0x6>
    1c1e:	00 d0       	rcall	.+0      	; 0x1c20 <lcd_str+0x8>
    1c20:	cd b7       	in	r28, 0x3d	; 61
    1c22:	de b7       	in	r29, 0x3e	; 62
    1c24:	9a 83       	std	Y+2, r25	; 0x02
    1c26:	89 83       	std	Y+1, r24	; 0x01
    1c28:	03 c0       	rjmp	.+6      	; 0x1c30 <lcd_str+0x18>
	register char znak;
	while ( (znak=*(str++)) ) lcd_char( znak );
    1c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2c:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <lcd_char>
    1c30:	e9 81       	ldd	r30, Y+1	; 0x01
    1c32:	fa 81       	ldd	r31, Y+2	; 0x02
    1c34:	80 81       	ld	r24, Z
    1c36:	8b 83       	std	Y+3, r24	; 0x03
    1c38:	8b 81       	ldd	r24, Y+3	; 0x03
    1c3a:	8c 83       	std	Y+4, r24	; 0x04
    1c3c:	8c 81       	ldd	r24, Y+4	; 0x04
    1c3e:	88 23       	and	r24, r24
    1c40:	11 f0       	breq	.+4      	; 0x1c46 <lcd_str+0x2e>
    1c42:	81 e0       	ldi	r24, 0x01	; 1
    1c44:	8c 83       	std	Y+4, r24	; 0x04
    1c46:	8c 81       	ldd	r24, Y+4	; 0x04
    1c48:	29 81       	ldd	r18, Y+1	; 0x01
    1c4a:	3a 81       	ldd	r19, Y+2	; 0x02
    1c4c:	2f 5f       	subi	r18, 0xFF	; 255
    1c4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c50:	3a 83       	std	Y+2, r19	; 0x02
    1c52:	29 83       	std	Y+1, r18	; 0x01
    1c54:	88 23       	and	r24, r24
    1c56:	49 f7       	brne	.-46     	; 0x1c2a <lcd_str+0x12>
}
    1c58:	0f 90       	pop	r0
    1c5a:	0f 90       	pop	r0
    1c5c:	0f 90       	pop	r0
    1c5e:	0f 90       	pop	r0
    1c60:	cf 91       	pop	r28
    1c62:	df 91       	pop	r29
    1c64:	08 95       	ret

00001c66 <lcd_str_P>:
//
//		 Wys³anie stringa do wyœwietlacza LCD z pamiêci FLASH
//
//----------------------------------------------------------------------------------------
void lcd_str_P(const char * str)
{
    1c66:	df 93       	push	r29
    1c68:	cf 93       	push	r28
    1c6a:	00 d0       	rcall	.+0      	; 0x1c6c <lcd_str_P+0x6>
    1c6c:	00 d0       	rcall	.+0      	; 0x1c6e <lcd_str_P+0x8>
    1c6e:	00 d0       	rcall	.+0      	; 0x1c70 <lcd_str_P+0xa>
    1c70:	cd b7       	in	r28, 0x3d	; 61
    1c72:	de b7       	in	r29, 0x3e	; 62
    1c74:	9d 83       	std	Y+5, r25	; 0x05
    1c76:	8c 83       	std	Y+4, r24	; 0x04
    1c78:	03 c0       	rjmp	.+6      	; 0x1c80 <lcd_str_P+0x1a>
	register char znak;
	while ( (znak=pgm_read_byte(str++)) ) lcd_char( znak );
    1c7a:	8e 81       	ldd	r24, Y+6	; 0x06
    1c7c:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <lcd_char>
    1c80:	8c 81       	ldd	r24, Y+4	; 0x04
    1c82:	9d 81       	ldd	r25, Y+5	; 0x05
    1c84:	9b 83       	std	Y+3, r25	; 0x03
    1c86:	8a 83       	std	Y+2, r24	; 0x02
    1c88:	8c 81       	ldd	r24, Y+4	; 0x04
    1c8a:	9d 81       	ldd	r25, Y+5	; 0x05
    1c8c:	01 96       	adiw	r24, 0x01	; 1
    1c8e:	9d 83       	std	Y+5, r25	; 0x05
    1c90:	8c 83       	std	Y+4, r24	; 0x04
    1c92:	ea 81       	ldd	r30, Y+2	; 0x02
    1c94:	fb 81       	ldd	r31, Y+3	; 0x03
    1c96:	84 91       	lpm	r24, Z+
    1c98:	89 83       	std	Y+1, r24	; 0x01
    1c9a:	89 81       	ldd	r24, Y+1	; 0x01
    1c9c:	8e 83       	std	Y+6, r24	; 0x06
    1c9e:	8e 81       	ldd	r24, Y+6	; 0x06
    1ca0:	88 23       	and	r24, r24
    1ca2:	59 f7       	brne	.-42     	; 0x1c7a <lcd_str_P+0x14>
}
    1ca4:	26 96       	adiw	r28, 0x06	; 6
    1ca6:	0f b6       	in	r0, 0x3f	; 63
    1ca8:	f8 94       	cli
    1caa:	de bf       	out	0x3e, r29	; 62
    1cac:	0f be       	out	0x3f, r0	; 63
    1cae:	cd bf       	out	0x3d, r28	; 61
    1cb0:	cf 91       	pop	r28
    1cb2:	df 91       	pop	r29
    1cb4:	08 95       	ret

00001cb6 <lcd_str_E>:
//		 8 w³asnych znaków zdefiniowanych w CGRAM
//		 wysy³amy za pomoc¹ kodów 0x80 do 0x87 zamiast 0x00 do 0x07
//
//----------------------------------------------------------------------------------------
void lcd_str_E(char * str)
{
    1cb6:	df 93       	push	r29
    1cb8:	cf 93       	push	r28
    1cba:	00 d0       	rcall	.+0      	; 0x1cbc <lcd_str_E+0x6>
    1cbc:	0f 92       	push	r0
    1cbe:	cd b7       	in	r28, 0x3d	; 61
    1cc0:	de b7       	in	r29, 0x3e	; 62
    1cc2:	9a 83       	std	Y+2, r25	; 0x02
    1cc4:	89 83       	std	Y+1, r24	; 0x01
	register char znak;
	while(1)
	{
		znak=eeprom_read_byte( (uint8_t *)(str++) );
    1cc6:	89 81       	ldd	r24, Y+1	; 0x01
    1cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    1cca:	29 81       	ldd	r18, Y+1	; 0x01
    1ccc:	3a 81       	ldd	r19, Y+2	; 0x02
    1cce:	2f 5f       	subi	r18, 0xFF	; 255
    1cd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cd2:	3a 83       	std	Y+2, r19	; 0x02
    1cd4:	29 83       	std	Y+1, r18	; 0x01
    1cd6:	0e 94 ad 23 	call	0x475a	; 0x475a <__eerd_byte_m32>
    1cda:	8b 83       	std	Y+3, r24	; 0x03
		if(!znak || znak==0xFF) break;
    1cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    1cde:	88 23       	and	r24, r24
    1ce0:	39 f0       	breq	.+14     	; 0x1cf0 <lcd_str_E+0x3a>
    1ce2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ce4:	8f 3f       	cpi	r24, 0xFF	; 255
    1ce6:	21 f0       	breq	.+8      	; 0x1cf0 <lcd_str_E+0x3a>
		else lcd_char( znak );
    1ce8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cea:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <lcd_char>
    1cee:	eb cf       	rjmp	.-42     	; 0x1cc6 <lcd_str_E+0x10>
	}
}
    1cf0:	0f 90       	pop	r0
    1cf2:	0f 90       	pop	r0
    1cf4:	0f 90       	pop	r0
    1cf6:	cf 91       	pop	r28
    1cf8:	df 91       	pop	r29
    1cfa:	08 95       	ret

00001cfc <lcd_int>:
//
//		 Wyœwietla liczbê dziesiêtn¹ na wyœwietlaczu LCD
//
//----------------------------------------------------------------------------------------
void lcd_int(int val)
{
    1cfc:	df 93       	push	r29
    1cfe:	cf 93       	push	r28
    1d00:	cd b7       	in	r28, 0x3d	; 61
    1d02:	de b7       	in	r29, 0x3e	; 62
    1d04:	63 97       	sbiw	r28, 0x13	; 19
    1d06:	0f b6       	in	r0, 0x3f	; 63
    1d08:	f8 94       	cli
    1d0a:	de bf       	out	0x3e, r29	; 62
    1d0c:	0f be       	out	0x3f, r0	; 63
    1d0e:	cd bf       	out	0x3d, r28	; 61
    1d10:	9b 8b       	std	Y+19, r25	; 0x13
    1d12:	8a 8b       	std	Y+18, r24	; 0x12
	char bufor[17];
	lcd_str( itoa(val, bufor, 10) );
    1d14:	8a 89       	ldd	r24, Y+18	; 0x12
    1d16:	9b 89       	ldd	r25, Y+19	; 0x13
    1d18:	9e 01       	movw	r18, r28
    1d1a:	2f 5f       	subi	r18, 0xFF	; 255
    1d1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1e:	b9 01       	movw	r22, r18
    1d20:	4a e0       	ldi	r20, 0x0A	; 10
    1d22:	50 e0       	ldi	r21, 0x00	; 0
    1d24:	0e 94 58 23 	call	0x46b0	; 0x46b0 <itoa>
    1d28:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
}
    1d2c:	63 96       	adiw	r28, 0x13	; 19
    1d2e:	0f b6       	in	r0, 0x3f	; 63
    1d30:	f8 94       	cli
    1d32:	de bf       	out	0x3e, r29	; 62
    1d34:	0f be       	out	0x3f, r0	; 63
    1d36:	cd bf       	out	0x3d, r28	; 61
    1d38:	cf 91       	pop	r28
    1d3a:	df 91       	pop	r29
    1d3c:	08 95       	ret

00001d3e <lcd_hex>:
//
//		 Wyœwietla liczbê szestnastkow¹ HEX na wyœwietlaczu LCD
//
//----------------------------------------------------------------------------------------
void lcd_hex(uint32_t val)
{
    1d3e:	df 93       	push	r29
    1d40:	cf 93       	push	r28
    1d42:	cd b7       	in	r28, 0x3d	; 61
    1d44:	de b7       	in	r29, 0x3e	; 62
    1d46:	65 97       	sbiw	r28, 0x15	; 21
    1d48:	0f b6       	in	r0, 0x3f	; 63
    1d4a:	f8 94       	cli
    1d4c:	de bf       	out	0x3e, r29	; 62
    1d4e:	0f be       	out	0x3f, r0	; 63
    1d50:	cd bf       	out	0x3d, r28	; 61
    1d52:	6a 8b       	std	Y+18, r22	; 0x12
    1d54:	7b 8b       	std	Y+19, r23	; 0x13
    1d56:	8c 8b       	std	Y+20, r24	; 0x14
    1d58:	9d 8b       	std	Y+21, r25	; 0x15
	char bufor[17];
	lcd_str( ltoa(val, bufor, 16) );
    1d5a:	8a 89       	ldd	r24, Y+18	; 0x12
    1d5c:	9b 89       	ldd	r25, Y+19	; 0x13
    1d5e:	ac 89       	ldd	r26, Y+20	; 0x14
    1d60:	bd 89       	ldd	r27, Y+21	; 0x15
    1d62:	bc 01       	movw	r22, r24
    1d64:	cd 01       	movw	r24, r26
    1d66:	9e 01       	movw	r18, r28
    1d68:	2f 5f       	subi	r18, 0xFF	; 255
    1d6a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d6c:	a9 01       	movw	r20, r18
    1d6e:	20 e1       	ldi	r18, 0x10	; 16
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	0e 94 79 23 	call	0x46f2	; 0x46f2 <ltoa>
    1d76:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
}
    1d7a:	65 96       	adiw	r28, 0x15	; 21
    1d7c:	0f b6       	in	r0, 0x3f	; 63
    1d7e:	f8 94       	cli
    1d80:	de bf       	out	0x3e, r29	; 62
    1d82:	0f be       	out	0x3f, r0	; 63
    1d84:	cd bf       	out	0x3d, r28	; 61
    1d86:	cf 91       	pop	r28
    1d88:	df 91       	pop	r29
    1d8a:	08 95       	ret

00001d8c <lcd_defchar>:
//		nr: 		- kod znaku w pamiêci CGRAM od 0x80 do 0x87
//		*def_znak:	- wskaŸnik do tablicy 7 bajtów definiuj¹cych znak
//
//----------------------------------------------------------------------------------------
void lcd_defchar(uint8_t nr, uint8_t *def_znak)
{
    1d8c:	df 93       	push	r29
    1d8e:	cf 93       	push	r28
    1d90:	00 d0       	rcall	.+0      	; 0x1d92 <lcd_defchar+0x6>
    1d92:	00 d0       	rcall	.+0      	; 0x1d94 <lcd_defchar+0x8>
    1d94:	cd b7       	in	r28, 0x3d	; 61
    1d96:	de b7       	in	r29, 0x3e	; 62
    1d98:	89 83       	std	Y+1, r24	; 0x01
    1d9a:	7b 83       	std	Y+3, r23	; 0x03
    1d9c:	6a 83       	std	Y+2, r22	; 0x02
	register uint8_t i,c;
	lcd_write_cmd( 64+((nr&0x07)*8) );
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	88 2f       	mov	r24, r24
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	87 70       	andi	r24, 0x07	; 7
    1da6:	90 70       	andi	r25, 0x00	; 0
    1da8:	08 96       	adiw	r24, 0x08	; 8
    1daa:	88 0f       	add	r24, r24
    1dac:	99 1f       	adc	r25, r25
    1dae:	88 0f       	add	r24, r24
    1db0:	99 1f       	adc	r25, r25
    1db2:	88 0f       	add	r24, r24
    1db4:	99 1f       	adc	r25, r25
    1db6:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	for(i=0;i<8;i++)
    1dba:	1c 82       	std	Y+4, r1	; 0x04
    1dbc:	0e c0       	rjmp	.+28     	; 0x1dda <lcd_defchar+0x4e>
	{
		c = *(def_znak++);
    1dbe:	ea 81       	ldd	r30, Y+2	; 0x02
    1dc0:	fb 81       	ldd	r31, Y+3	; 0x03
    1dc2:	20 81       	ld	r18, Z
    1dc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc6:	9b 81       	ldd	r25, Y+3	; 0x03
    1dc8:	01 96       	adiw	r24, 0x01	; 1
    1dca:	9b 83       	std	Y+3, r25	; 0x03
    1dcc:	8a 83       	std	Y+2, r24	; 0x02
		lcd_write_data(c);
    1dce:	82 2f       	mov	r24, r18
    1dd0:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <lcd_write_data>
//----------------------------------------------------------------------------------------
void lcd_defchar(uint8_t nr, uint8_t *def_znak)
{
	register uint8_t i,c;
	lcd_write_cmd( 64+((nr&0x07)*8) );
	for(i=0;i<8;i++)
    1dd4:	8c 81       	ldd	r24, Y+4	; 0x04
    1dd6:	8f 5f       	subi	r24, 0xFF	; 255
    1dd8:	8c 83       	std	Y+4, r24	; 0x04
    1dda:	8c 81       	ldd	r24, Y+4	; 0x04
    1ddc:	88 30       	cpi	r24, 0x08	; 8
    1dde:	78 f3       	brcs	.-34     	; 0x1dbe <lcd_defchar+0x32>
	{
		c = *(def_znak++);
		lcd_write_data(c);
	}
}
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	0f 90       	pop	r0
    1de8:	cf 91       	pop	r28
    1dea:	df 91       	pop	r29
    1dec:	08 95       	ret

00001dee <lcd_defchar_P>:
//		nr: 		- kod znaku w pamiêci CGRAM od 0x80 do 0x87
//		*def_znak:	- wskaŸnik do tablicy 7 bajtów definiuj¹cych znak
//
//----------------------------------------------------------------------------------------
void lcd_defchar_P(uint8_t nr, const uint8_t *def_znak)
{
    1dee:	df 93       	push	r29
    1df0:	cf 93       	push	r28
    1df2:	cd b7       	in	r28, 0x3d	; 61
    1df4:	de b7       	in	r29, 0x3e	; 62
    1df6:	27 97       	sbiw	r28, 0x07	; 7
    1df8:	0f b6       	in	r0, 0x3f	; 63
    1dfa:	f8 94       	cli
    1dfc:	de bf       	out	0x3e, r29	; 62
    1dfe:	0f be       	out	0x3f, r0	; 63
    1e00:	cd bf       	out	0x3d, r28	; 61
    1e02:	8c 83       	std	Y+4, r24	; 0x04
    1e04:	7e 83       	std	Y+6, r23	; 0x06
    1e06:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t i,c;
	lcd_write_cmd( 64+((nr&0x07)*8) );
    1e08:	8c 81       	ldd	r24, Y+4	; 0x04
    1e0a:	88 2f       	mov	r24, r24
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	87 70       	andi	r24, 0x07	; 7
    1e10:	90 70       	andi	r25, 0x00	; 0
    1e12:	08 96       	adiw	r24, 0x08	; 8
    1e14:	88 0f       	add	r24, r24
    1e16:	99 1f       	adc	r25, r25
    1e18:	88 0f       	add	r24, r24
    1e1a:	99 1f       	adc	r25, r25
    1e1c:	88 0f       	add	r24, r24
    1e1e:	99 1f       	adc	r25, r25
    1e20:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	for(i=0;i<8;i++)
    1e24:	1f 82       	std	Y+7, r1	; 0x07
    1e26:	13 c0       	rjmp	.+38     	; 0x1e4e <lcd_defchar_P+0x60>
	{
		c = pgm_read_byte(def_znak++);
    1e28:	8d 81       	ldd	r24, Y+5	; 0x05
    1e2a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e2c:	9b 83       	std	Y+3, r25	; 0x03
    1e2e:	8a 83       	std	Y+2, r24	; 0x02
    1e30:	8d 81       	ldd	r24, Y+5	; 0x05
    1e32:	9e 81       	ldd	r25, Y+6	; 0x06
    1e34:	01 96       	adiw	r24, 0x01	; 1
    1e36:	9e 83       	std	Y+6, r25	; 0x06
    1e38:	8d 83       	std	Y+5, r24	; 0x05
    1e3a:	ea 81       	ldd	r30, Y+2	; 0x02
    1e3c:	fb 81       	ldd	r31, Y+3	; 0x03
    1e3e:	84 91       	lpm	r24, Z+
    1e40:	89 83       	std	Y+1, r24	; 0x01
    1e42:	89 81       	ldd	r24, Y+1	; 0x01
		lcd_write_data(c);
    1e44:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <lcd_write_data>
//----------------------------------------------------------------------------------------
void lcd_defchar_P(uint8_t nr, const uint8_t *def_znak)
{
	register uint8_t i,c;
	lcd_write_cmd( 64+((nr&0x07)*8) );
	for(i=0;i<8;i++)
    1e48:	8f 81       	ldd	r24, Y+7	; 0x07
    1e4a:	8f 5f       	subi	r24, 0xFF	; 255
    1e4c:	8f 83       	std	Y+7, r24	; 0x07
    1e4e:	8f 81       	ldd	r24, Y+7	; 0x07
    1e50:	88 30       	cpi	r24, 0x08	; 8
    1e52:	50 f3       	brcs	.-44     	; 0x1e28 <lcd_defchar_P+0x3a>
	{
		c = pgm_read_byte(def_znak++);
		lcd_write_data(c);
	}
}
    1e54:	27 96       	adiw	r28, 0x07	; 7
    1e56:	0f b6       	in	r0, 0x3f	; 63
    1e58:	f8 94       	cli
    1e5a:	de bf       	out	0x3e, r29	; 62
    1e5c:	0f be       	out	0x3f, r0	; 63
    1e5e:	cd bf       	out	0x3d, r28	; 61
    1e60:	cf 91       	pop	r28
    1e62:	df 91       	pop	r29
    1e64:	08 95       	ret

00001e66 <lcd_defchar_E>:
//		nr: 		- kod znaku w pamiêci CGRAM od 0x80 do 0x87
//		*def_znak:	- wskaŸnik do tablicy 7 bajtów definiuj¹cych znak
//
//----------------------------------------------------------------------------------------
void lcd_defchar_E(uint8_t nr, uint8_t *def_znak)
{
    1e66:	df 93       	push	r29
    1e68:	cf 93       	push	r28
    1e6a:	00 d0       	rcall	.+0      	; 0x1e6c <lcd_defchar_E+0x6>
    1e6c:	00 d0       	rcall	.+0      	; 0x1e6e <lcd_defchar_E+0x8>
    1e6e:	cd b7       	in	r28, 0x3d	; 61
    1e70:	de b7       	in	r29, 0x3e	; 62
    1e72:	89 83       	std	Y+1, r24	; 0x01
    1e74:	7b 83       	std	Y+3, r23	; 0x03
    1e76:	6a 83       	std	Y+2, r22	; 0x02
	register uint8_t i,c;

	lcd_write_cmd( 64+((nr&0x07)*8) );
    1e78:	89 81       	ldd	r24, Y+1	; 0x01
    1e7a:	88 2f       	mov	r24, r24
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	87 70       	andi	r24, 0x07	; 7
    1e80:	90 70       	andi	r25, 0x00	; 0
    1e82:	08 96       	adiw	r24, 0x08	; 8
    1e84:	88 0f       	add	r24, r24
    1e86:	99 1f       	adc	r25, r25
    1e88:	88 0f       	add	r24, r24
    1e8a:	99 1f       	adc	r25, r25
    1e8c:	88 0f       	add	r24, r24
    1e8e:	99 1f       	adc	r25, r25
    1e90:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	for(i=0;i<8;i++)
    1e94:	1c 82       	std	Y+4, r1	; 0x04
    1e96:	0f c0       	rjmp	.+30     	; 0x1eb6 <lcd_defchar_E+0x50>
	{
		c = eeprom_read_byte(def_znak++);
    1e98:	2a 81       	ldd	r18, Y+2	; 0x02
    1e9a:	3b 81       	ldd	r19, Y+3	; 0x03
    1e9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1ea0:	01 96       	adiw	r24, 0x01	; 1
    1ea2:	9b 83       	std	Y+3, r25	; 0x03
    1ea4:	8a 83       	std	Y+2, r24	; 0x02
    1ea6:	c9 01       	movw	r24, r18
    1ea8:	0e 94 ad 23 	call	0x475a	; 0x475a <__eerd_byte_m32>
		lcd_write_data(c);
    1eac:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <lcd_write_data>
void lcd_defchar_E(uint8_t nr, uint8_t *def_znak)
{
	register uint8_t i,c;

	lcd_write_cmd( 64+((nr&0x07)*8) );
	for(i=0;i<8;i++)
    1eb0:	8c 81       	ldd	r24, Y+4	; 0x04
    1eb2:	8f 5f       	subi	r24, 0xFF	; 255
    1eb4:	8c 83       	std	Y+4, r24	; 0x04
    1eb6:	8c 81       	ldd	r24, Y+4	; 0x04
    1eb8:	88 30       	cpi	r24, 0x08	; 8
    1eba:	70 f3       	brcs	.-36     	; 0x1e98 <lcd_defchar_E+0x32>
	{
		c = eeprom_read_byte(def_znak++);
		lcd_write_data(c);
	}
}
    1ebc:	0f 90       	pop	r0
    1ebe:	0f 90       	pop	r0
    1ec0:	0f 90       	pop	r0
    1ec2:	0f 90       	pop	r0
    1ec4:	cf 91       	pop	r28
    1ec6:	df 91       	pop	r29
    1ec8:	08 95       	ret

00001eca <lcd_locate>:
//		funkcja dostosowuje automatycznie adresy DDRAM
//		w zale¿noœci od rodzaju wyœwietlacza (ile posiada wierszy)
//
//----------------------------------------------------------------------------------------
void lcd_locate(uint8_t y, uint8_t x)
{
    1eca:	df 93       	push	r29
    1ecc:	cf 93       	push	r28
    1ece:	00 d0       	rcall	.+0      	; 0x1ed0 <lcd_locate+0x6>
    1ed0:	00 d0       	rcall	.+0      	; 0x1ed2 <lcd_locate+0x8>
    1ed2:	cd b7       	in	r28, 0x3d	; 61
    1ed4:	de b7       	in	r29, 0x3e	; 62
    1ed6:	89 83       	std	Y+1, r24	; 0x01
    1ed8:	6a 83       	std	Y+2, r22	; 0x02
	switch(y)
    1eda:	89 81       	ldd	r24, Y+1	; 0x01
    1edc:	28 2f       	mov	r18, r24
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	3c 83       	std	Y+4, r19	; 0x04
    1ee2:	2b 83       	std	Y+3, r18	; 0x03
    1ee4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ee8:	00 97       	sbiw	r24, 0x00	; 0
    1eea:	31 f0       	breq	.+12     	; 0x1ef8 <lcd_locate+0x2e>
    1eec:	2b 81       	ldd	r18, Y+3	; 0x03
    1eee:	3c 81       	ldd	r19, Y+4	; 0x04
    1ef0:	21 30       	cpi	r18, 0x01	; 1
    1ef2:	31 05       	cpc	r19, r1
    1ef4:	19 f0       	breq	.+6      	; 0x1efc <lcd_locate+0x32>
    1ef6:	04 c0       	rjmp	.+8      	; 0x1f00 <lcd_locate+0x36>
	{
		case 0: y = LCD_LINE1; break;
    1ef8:	19 82       	std	Y+1, r1	; 0x01
    1efa:	02 c0       	rjmp	.+4      	; 0x1f00 <lcd_locate+0x36>

#if (LCD_ROWS>1)
	    case 1: y = LCD_LINE2; break; // adres 1 znaku 2 wiersza
    1efc:	80 e4       	ldi	r24, 0x40	; 64
    1efe:	89 83       	std	Y+1, r24	; 0x01
#if (LCD_ROWS>3)
    	case 3: y = LCD_LINE4; break; // adres 1 znaku 4 wiersza
#endif
	}

	lcd_write_cmd( (0x80 + y + x) );
    1f00:	99 81       	ldd	r25, Y+1	; 0x01
    1f02:	8a 81       	ldd	r24, Y+2	; 0x02
    1f04:	89 0f       	add	r24, r25
    1f06:	80 58       	subi	r24, 0x80	; 128
    1f08:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
}
    1f0c:	0f 90       	pop	r0
    1f0e:	0f 90       	pop	r0
    1f10:	0f 90       	pop	r0
    1f12:	0f 90       	pop	r0
    1f14:	cf 91       	pop	r28
    1f16:	df 91       	pop	r29
    1f18:	08 95       	ret

00001f1a <lcd_cls>:
//
//		Kasowanie ekranu wyœwietlacza
//
//----------------------------------------------------------------------------------------
void lcd_cls(void)
{
    1f1a:	df 93       	push	r29
    1f1c:	cf 93       	push	r28
    1f1e:	cd b7       	in	r28, 0x3d	; 61
    1f20:	de b7       	in	r29, 0x3e	; 62
	lcd_write_cmd( LCDC_CLS );
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>

	#if USE_RW == 0
		_delay_ms(4.9);
	#endif
}
    1f28:	cf 91       	pop	r28
    1f2a:	df 91       	pop	r29
    1f2c:	08 95       	ret

00001f2e <lcd_init>:
//
//		 ******* INICJALIZACJA WYŒWIETLACZA LCD ********
//
//----------------------------------------------------------------------------------------
void lcd_init(void)
{
    1f2e:	0f 93       	push	r16
    1f30:	1f 93       	push	r17
    1f32:	df 93       	push	r29
    1f34:	cf 93       	push	r28
    1f36:	cd b7       	in	r28, 0x3d	; 61
    1f38:	de b7       	in	r29, 0x3e	; 62
    1f3a:	c4 56       	subi	r28, 0x64	; 100
    1f3c:	d0 40       	sbci	r29, 0x00	; 0
    1f3e:	0f b6       	in	r0, 0x3f	; 63
    1f40:	f8 94       	cli
    1f42:	de bf       	out	0x3e, r29	; 62
    1f44:	0f be       	out	0x3f, r0	; 63
    1f46:	cd bf       	out	0x3d, r28	; 61
	// inicjowanie pinów portów ustalonych do pod³¹czenia z wyœwietlaczem LCD
	// ustawienie wszystkich jako wyjœcia
	data_dir_out();
    1f48:	0e 94 9b 0c 	call	0x1936	; 0x1936 <data_dir_out>
	DDR(LCD_RSPORT) |= (1<<LCD_RS);
    1f4c:	aa e3       	ldi	r26, 0x3A	; 58
    1f4e:	b0 e0       	ldi	r27, 0x00	; 0
    1f50:	ea e3       	ldi	r30, 0x3A	; 58
    1f52:	f0 e0       	ldi	r31, 0x00	; 0
    1f54:	80 81       	ld	r24, Z
    1f56:	81 60       	ori	r24, 0x01	; 1
    1f58:	8c 93       	st	X, r24
	DDR(LCD_EPORT) |= (1<<LCD_E);
    1f5a:	aa e3       	ldi	r26, 0x3A	; 58
    1f5c:	b0 e0       	ldi	r27, 0x00	; 0
    1f5e:	ea e3       	ldi	r30, 0x3A	; 58
    1f60:	f0 e0       	ldi	r31, 0x00	; 0
    1f62:	80 81       	ld	r24, Z
    1f64:	84 60       	ori	r24, 0x04	; 4
    1f66:	8c 93       	st	X, r24
	#if USE_RW == 1
		DDR(LCD_RWPORT) |= (1<<LCD_RW);
    1f68:	aa e3       	ldi	r26, 0x3A	; 58
    1f6a:	b0 e0       	ldi	r27, 0x00	; 0
    1f6c:	ea e3       	ldi	r30, 0x3A	; 58
    1f6e:	f0 e0       	ldi	r31, 0x00	; 0
    1f70:	80 81       	ld	r24, Z
    1f72:	82 60       	ori	r24, 0x02	; 2
    1f74:	8c 93       	st	X, r24
	#endif

	PORT(LCD_RSPORT) |= (1<<LCD_RS);
    1f76:	ab e3       	ldi	r26, 0x3B	; 59
    1f78:	b0 e0       	ldi	r27, 0x00	; 0
    1f7a:	eb e3       	ldi	r30, 0x3B	; 59
    1f7c:	f0 e0       	ldi	r31, 0x00	; 0
    1f7e:	80 81       	ld	r24, Z
    1f80:	81 60       	ori	r24, 0x01	; 1
    1f82:	8c 93       	st	X, r24
	PORT(LCD_EPORT) |= (1<<LCD_E);
    1f84:	ab e3       	ldi	r26, 0x3B	; 59
    1f86:	b0 e0       	ldi	r27, 0x00	; 0
    1f88:	eb e3       	ldi	r30, 0x3B	; 59
    1f8a:	f0 e0       	ldi	r31, 0x00	; 0
    1f8c:	80 81       	ld	r24, Z
    1f8e:	84 60       	ori	r24, 0x04	; 4
    1f90:	8c 93       	st	X, r24
	#if USE_RW == 1
		PORT(LCD_RWPORT) |= (1<<LCD_RW);
    1f92:	ab e3       	ldi	r26, 0x3B	; 59
    1f94:	b0 e0       	ldi	r27, 0x00	; 0
    1f96:	eb e3       	ldi	r30, 0x3B	; 59
    1f98:	f0 e0       	ldi	r31, 0x00	; 0
    1f9a:	80 81       	ld	r24, Z
    1f9c:	82 60       	ori	r24, 0x02	; 2
    1f9e:	8c 93       	st	X, r24
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	ef 59       	subi	r30, 0x9F	; 159
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	a0 e7       	ldi	r26, 0x70	; 112
    1fac:	b1 e4       	ldi	r27, 0x41	; 65
    1fae:	80 83       	st	Z, r24
    1fb0:	91 83       	std	Z+1, r25	; 0x01
    1fb2:	a2 83       	std	Z+2, r26	; 0x02
    1fb4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fb6:	8e 01       	movw	r16, r28
    1fb8:	03 5a       	subi	r16, 0xA3	; 163
    1fba:	1f 4f       	sbci	r17, 0xFF	; 255
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	ef 59       	subi	r30, 0x9F	; 159
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	60 81       	ld	r22, Z
    1fc4:	71 81       	ldd	r23, Z+1	; 0x01
    1fc6:	82 81       	ldd	r24, Z+2	; 0x02
    1fc8:	93 81       	ldd	r25, Z+3	; 0x03
    1fca:	20 e0       	ldi	r18, 0x00	; 0
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	4a e7       	ldi	r20, 0x7A	; 122
    1fd0:	55 e4       	ldi	r21, 0x45	; 69
    1fd2:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	cb 01       	movw	r24, r22
    1fda:	f8 01       	movw	r30, r16
    1fdc:	80 83       	st	Z, r24
    1fde:	91 83       	std	Z+1, r25	; 0x01
    1fe0:	a2 83       	std	Z+2, r26	; 0x02
    1fe2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fe4:	fe 01       	movw	r30, r28
    1fe6:	e3 5a       	subi	r30, 0xA3	; 163
    1fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fea:	60 81       	ld	r22, Z
    1fec:	71 81       	ldd	r23, Z+1	; 0x01
    1fee:	82 81       	ldd	r24, Z+2	; 0x02
    1ff0:	93 81       	ldd	r25, Z+3	; 0x03
    1ff2:	20 e0       	ldi	r18, 0x00	; 0
    1ff4:	30 e0       	ldi	r19, 0x00	; 0
    1ff6:	40 e8       	ldi	r20, 0x80	; 128
    1ff8:	5f e3       	ldi	r21, 0x3F	; 63
    1ffa:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    1ffe:	88 23       	and	r24, r24
    2000:	44 f4       	brge	.+16     	; 0x2012 <lcd_init+0xe4>
		__ticks = 1;
    2002:	fe 01       	movw	r30, r28
    2004:	e5 5a       	subi	r30, 0xA5	; 165
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	91 83       	std	Z+1, r25	; 0x01
    200e:	80 83       	st	Z, r24
    2010:	64 c0       	rjmp	.+200    	; 0x20da <lcd_init+0x1ac>
	else if (__tmp > 65535)
    2012:	fe 01       	movw	r30, r28
    2014:	e3 5a       	subi	r30, 0xA3	; 163
    2016:	ff 4f       	sbci	r31, 0xFF	; 255
    2018:	60 81       	ld	r22, Z
    201a:	71 81       	ldd	r23, Z+1	; 0x01
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	3f ef       	ldi	r19, 0xFF	; 255
    2024:	4f e7       	ldi	r20, 0x7F	; 127
    2026:	57 e4       	ldi	r21, 0x47	; 71
    2028:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    202c:	18 16       	cp	r1, r24
    202e:	0c f0       	brlt	.+2      	; 0x2032 <lcd_init+0x104>
    2030:	43 c0       	rjmp	.+134    	; 0x20b8 <lcd_init+0x18a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2032:	fe 01       	movw	r30, r28
    2034:	ef 59       	subi	r30, 0x9F	; 159
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	60 81       	ld	r22, Z
    203a:	71 81       	ldd	r23, Z+1	; 0x01
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	93 81       	ldd	r25, Z+3	; 0x03
    2040:	20 e0       	ldi	r18, 0x00	; 0
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	40 e2       	ldi	r20, 0x20	; 32
    2046:	51 e4       	ldi	r21, 0x41	; 65
    2048:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    204c:	dc 01       	movw	r26, r24
    204e:	cb 01       	movw	r24, r22
    2050:	8e 01       	movw	r16, r28
    2052:	05 5a       	subi	r16, 0xA5	; 165
    2054:	1f 4f       	sbci	r17, 0xFF	; 255
    2056:	bc 01       	movw	r22, r24
    2058:	cd 01       	movw	r24, r26
    205a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    205e:	dc 01       	movw	r26, r24
    2060:	cb 01       	movw	r24, r22
    2062:	f8 01       	movw	r30, r16
    2064:	91 83       	std	Z+1, r25	; 0x01
    2066:	80 83       	st	Z, r24
    2068:	1f c0       	rjmp	.+62     	; 0x20a8 <lcd_init+0x17a>
    206a:	fe 01       	movw	r30, r28
    206c:	e7 5a       	subi	r30, 0xA7	; 167
    206e:	ff 4f       	sbci	r31, 0xFF	; 255
    2070:	80 e9       	ldi	r24, 0x90	; 144
    2072:	91 e0       	ldi	r25, 0x01	; 1
    2074:	91 83       	std	Z+1, r25	; 0x01
    2076:	80 83       	st	Z, r24
    2078:	fe 01       	movw	r30, r28
    207a:	e7 5a       	subi	r30, 0xA7	; 167
    207c:	ff 4f       	sbci	r31, 0xFF	; 255
    207e:	80 81       	ld	r24, Z
    2080:	91 81       	ldd	r25, Z+1	; 0x01
    2082:	01 97       	sbiw	r24, 0x01	; 1
    2084:	f1 f7       	brne	.-4      	; 0x2082 <lcd_init+0x154>
    2086:	fe 01       	movw	r30, r28
    2088:	e7 5a       	subi	r30, 0xA7	; 167
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	91 83       	std	Z+1, r25	; 0x01
    208e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2090:	de 01       	movw	r26, r28
    2092:	a5 5a       	subi	r26, 0xA5	; 165
    2094:	bf 4f       	sbci	r27, 0xFF	; 255
    2096:	fe 01       	movw	r30, r28
    2098:	e5 5a       	subi	r30, 0xA5	; 165
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	80 81       	ld	r24, Z
    209e:	91 81       	ldd	r25, Z+1	; 0x01
    20a0:	01 97       	sbiw	r24, 0x01	; 1
    20a2:	11 96       	adiw	r26, 0x01	; 1
    20a4:	9c 93       	st	X, r25
    20a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20a8:	fe 01       	movw	r30, r28
    20aa:	e5 5a       	subi	r30, 0xA5	; 165
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	80 81       	ld	r24, Z
    20b0:	91 81       	ldd	r25, Z+1	; 0x01
    20b2:	00 97       	sbiw	r24, 0x00	; 0
    20b4:	d1 f6       	brne	.-76     	; 0x206a <lcd_init+0x13c>
    20b6:	27 c0       	rjmp	.+78     	; 0x2106 <lcd_init+0x1d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20b8:	8e 01       	movw	r16, r28
    20ba:	05 5a       	subi	r16, 0xA5	; 165
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	fe 01       	movw	r30, r28
    20c0:	e3 5a       	subi	r30, 0xA3	; 163
    20c2:	ff 4f       	sbci	r31, 0xFF	; 255
    20c4:	60 81       	ld	r22, Z
    20c6:	71 81       	ldd	r23, Z+1	; 0x01
    20c8:	82 81       	ldd	r24, Z+2	; 0x02
    20ca:	93 81       	ldd	r25, Z+3	; 0x03
    20cc:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	f8 01       	movw	r30, r16
    20d6:	91 83       	std	Z+1, r25	; 0x01
    20d8:	80 83       	st	Z, r24
    20da:	de 01       	movw	r26, r28
    20dc:	a9 5a       	subi	r26, 0xA9	; 169
    20de:	bf 4f       	sbci	r27, 0xFF	; 255
    20e0:	fe 01       	movw	r30, r28
    20e2:	e5 5a       	subi	r30, 0xA5	; 165
    20e4:	ff 4f       	sbci	r31, 0xFF	; 255
    20e6:	80 81       	ld	r24, Z
    20e8:	91 81       	ldd	r25, Z+1	; 0x01
    20ea:	8d 93       	st	X+, r24
    20ec:	9c 93       	st	X, r25
    20ee:	fe 01       	movw	r30, r28
    20f0:	e9 5a       	subi	r30, 0xA9	; 169
    20f2:	ff 4f       	sbci	r31, 0xFF	; 255
    20f4:	80 81       	ld	r24, Z
    20f6:	91 81       	ldd	r25, Z+1	; 0x01
    20f8:	01 97       	sbiw	r24, 0x01	; 1
    20fa:	f1 f7       	brne	.-4      	; 0x20f8 <lcd_init+0x1ca>
    20fc:	fe 01       	movw	r30, r28
    20fe:	e9 5a       	subi	r30, 0xA9	; 169
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	91 83       	std	Z+1, r25	; 0x01
    2104:	80 83       	st	Z, r24
	#endif

	_delay_ms(15);
	PORT(LCD_EPORT) &= ~(1<<LCD_E);
    2106:	ab e3       	ldi	r26, 0x3B	; 59
    2108:	b0 e0       	ldi	r27, 0x00	; 0
    210a:	eb e3       	ldi	r30, 0x3B	; 59
    210c:	f0 e0       	ldi	r31, 0x00	; 0
    210e:	80 81       	ld	r24, Z
    2110:	8b 7f       	andi	r24, 0xFB	; 251
    2112:	8c 93       	st	X, r24
	PORT(LCD_RSPORT) &= ~(1<<LCD_RS);
    2114:	ab e3       	ldi	r26, 0x3B	; 59
    2116:	b0 e0       	ldi	r27, 0x00	; 0
    2118:	eb e3       	ldi	r30, 0x3B	; 59
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	80 81       	ld	r24, Z
    211e:	8e 7f       	andi	r24, 0xFE	; 254
    2120:	8c 93       	st	X, r24
	#if USE_RW == 1
    	PORT(LCD_RWPORT) &= ~(1<<LCD_RW);
    2122:	ab e3       	ldi	r26, 0x3B	; 59
    2124:	b0 e0       	ldi	r27, 0x00	; 0
    2126:	eb e3       	ldi	r30, 0x3B	; 59
    2128:	f0 e0       	ldi	r31, 0x00	; 0
    212a:	80 81       	ld	r24, Z
    212c:	8d 7f       	andi	r24, 0xFD	; 253
    212e:	8c 93       	st	X, r24
	#endif

	// jeszcze nie mo¿na u¿ywaæ Busy Flag
	SET_E;
    2130:	ab e3       	ldi	r26, 0x3B	; 59
    2132:	b0 e0       	ldi	r27, 0x00	; 0
    2134:	eb e3       	ldi	r30, 0x3B	; 59
    2136:	f0 e0       	ldi	r31, 0x00	; 0
    2138:	80 81       	ld	r24, Z
    213a:	84 60       	ori	r24, 0x04	; 4
    213c:	8c 93       	st	X, r24
	lcd_sendHalf(0x03);	// tryb 8-bitowy
    213e:	83 e0       	ldi	r24, 0x03	; 3
    2140:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    2144:	ab e3       	ldi	r26, 0x3B	; 59
    2146:	b0 e0       	ldi	r27, 0x00	; 0
    2148:	eb e3       	ldi	r30, 0x3B	; 59
    214a:	f0 e0       	ldi	r31, 0x00	; 0
    214c:	80 81       	ld	r24, Z
    214e:	8b 7f       	andi	r24, 0xFB	; 251
    2150:	8c 93       	st	X, r24
    2152:	fe 01       	movw	r30, r28
    2154:	ed 5a       	subi	r30, 0xAD	; 173
    2156:	ff 4f       	sbci	r31, 0xFF	; 255
    2158:	83 e3       	ldi	r24, 0x33	; 51
    215a:	93 e3       	ldi	r25, 0x33	; 51
    215c:	a3 e8       	ldi	r26, 0x83	; 131
    215e:	b0 e4       	ldi	r27, 0x40	; 64
    2160:	80 83       	st	Z, r24
    2162:	91 83       	std	Z+1, r25	; 0x01
    2164:	a2 83       	std	Z+2, r26	; 0x02
    2166:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2168:	8e 01       	movw	r16, r28
    216a:	01 5b       	subi	r16, 0xB1	; 177
    216c:	1f 4f       	sbci	r17, 0xFF	; 255
    216e:	fe 01       	movw	r30, r28
    2170:	ed 5a       	subi	r30, 0xAD	; 173
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	60 81       	ld	r22, Z
    2176:	71 81       	ldd	r23, Z+1	; 0x01
    2178:	82 81       	ldd	r24, Z+2	; 0x02
    217a:	93 81       	ldd	r25, Z+3	; 0x03
    217c:	20 e0       	ldi	r18, 0x00	; 0
    217e:	30 e0       	ldi	r19, 0x00	; 0
    2180:	4a e7       	ldi	r20, 0x7A	; 122
    2182:	55 e4       	ldi	r21, 0x45	; 69
    2184:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	f8 01       	movw	r30, r16
    218e:	80 83       	st	Z, r24
    2190:	91 83       	std	Z+1, r25	; 0x01
    2192:	a2 83       	std	Z+2, r26	; 0x02
    2194:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2196:	fe 01       	movw	r30, r28
    2198:	e1 5b       	subi	r30, 0xB1	; 177
    219a:	ff 4f       	sbci	r31, 0xFF	; 255
    219c:	60 81       	ld	r22, Z
    219e:	71 81       	ldd	r23, Z+1	; 0x01
    21a0:	82 81       	ldd	r24, Z+2	; 0x02
    21a2:	93 81       	ldd	r25, Z+3	; 0x03
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	40 e8       	ldi	r20, 0x80	; 128
    21aa:	5f e3       	ldi	r21, 0x3F	; 63
    21ac:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    21b0:	88 23       	and	r24, r24
    21b2:	44 f4       	brge	.+16     	; 0x21c4 <lcd_init+0x296>
		__ticks = 1;
    21b4:	fe 01       	movw	r30, r28
    21b6:	e3 5b       	subi	r30, 0xB3	; 179
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	81 e0       	ldi	r24, 0x01	; 1
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	91 83       	std	Z+1, r25	; 0x01
    21c0:	80 83       	st	Z, r24
    21c2:	64 c0       	rjmp	.+200    	; 0x228c <lcd_init+0x35e>
	else if (__tmp > 65535)
    21c4:	fe 01       	movw	r30, r28
    21c6:	e1 5b       	subi	r30, 0xB1	; 177
    21c8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ca:	60 81       	ld	r22, Z
    21cc:	71 81       	ldd	r23, Z+1	; 0x01
    21ce:	82 81       	ldd	r24, Z+2	; 0x02
    21d0:	93 81       	ldd	r25, Z+3	; 0x03
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	3f ef       	ldi	r19, 0xFF	; 255
    21d6:	4f e7       	ldi	r20, 0x7F	; 127
    21d8:	57 e4       	ldi	r21, 0x47	; 71
    21da:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    21de:	18 16       	cp	r1, r24
    21e0:	0c f0       	brlt	.+2      	; 0x21e4 <lcd_init+0x2b6>
    21e2:	43 c0       	rjmp	.+134    	; 0x226a <lcd_init+0x33c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21e4:	fe 01       	movw	r30, r28
    21e6:	ed 5a       	subi	r30, 0xAD	; 173
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	60 81       	ld	r22, Z
    21ec:	71 81       	ldd	r23, Z+1	; 0x01
    21ee:	82 81       	ldd	r24, Z+2	; 0x02
    21f0:	93 81       	ldd	r25, Z+3	; 0x03
    21f2:	20 e0       	ldi	r18, 0x00	; 0
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	40 e2       	ldi	r20, 0x20	; 32
    21f8:	51 e4       	ldi	r21, 0x41	; 65
    21fa:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    21fe:	dc 01       	movw	r26, r24
    2200:	cb 01       	movw	r24, r22
    2202:	8e 01       	movw	r16, r28
    2204:	03 5b       	subi	r16, 0xB3	; 179
    2206:	1f 4f       	sbci	r17, 0xFF	; 255
    2208:	bc 01       	movw	r22, r24
    220a:	cd 01       	movw	r24, r26
    220c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	f8 01       	movw	r30, r16
    2216:	91 83       	std	Z+1, r25	; 0x01
    2218:	80 83       	st	Z, r24
    221a:	1f c0       	rjmp	.+62     	; 0x225a <lcd_init+0x32c>
    221c:	fe 01       	movw	r30, r28
    221e:	e5 5b       	subi	r30, 0xB5	; 181
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 e9       	ldi	r24, 0x90	; 144
    2224:	91 e0       	ldi	r25, 0x01	; 1
    2226:	91 83       	std	Z+1, r25	; 0x01
    2228:	80 83       	st	Z, r24
    222a:	fe 01       	movw	r30, r28
    222c:	e5 5b       	subi	r30, 0xB5	; 181
    222e:	ff 4f       	sbci	r31, 0xFF	; 255
    2230:	80 81       	ld	r24, Z
    2232:	91 81       	ldd	r25, Z+1	; 0x01
    2234:	01 97       	sbiw	r24, 0x01	; 1
    2236:	f1 f7       	brne	.-4      	; 0x2234 <lcd_init+0x306>
    2238:	fe 01       	movw	r30, r28
    223a:	e5 5b       	subi	r30, 0xB5	; 181
    223c:	ff 4f       	sbci	r31, 0xFF	; 255
    223e:	91 83       	std	Z+1, r25	; 0x01
    2240:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2242:	de 01       	movw	r26, r28
    2244:	a3 5b       	subi	r26, 0xB3	; 179
    2246:	bf 4f       	sbci	r27, 0xFF	; 255
    2248:	fe 01       	movw	r30, r28
    224a:	e3 5b       	subi	r30, 0xB3	; 179
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	80 81       	ld	r24, Z
    2250:	91 81       	ldd	r25, Z+1	; 0x01
    2252:	01 97       	sbiw	r24, 0x01	; 1
    2254:	11 96       	adiw	r26, 0x01	; 1
    2256:	9c 93       	st	X, r25
    2258:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    225a:	fe 01       	movw	r30, r28
    225c:	e3 5b       	subi	r30, 0xB3	; 179
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	80 81       	ld	r24, Z
    2262:	91 81       	ldd	r25, Z+1	; 0x01
    2264:	00 97       	sbiw	r24, 0x00	; 0
    2266:	d1 f6       	brne	.-76     	; 0x221c <lcd_init+0x2ee>
    2268:	27 c0       	rjmp	.+78     	; 0x22b8 <lcd_init+0x38a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    226a:	8e 01       	movw	r16, r28
    226c:	03 5b       	subi	r16, 0xB3	; 179
    226e:	1f 4f       	sbci	r17, 0xFF	; 255
    2270:	fe 01       	movw	r30, r28
    2272:	e1 5b       	subi	r30, 0xB1	; 177
    2274:	ff 4f       	sbci	r31, 0xFF	; 255
    2276:	60 81       	ld	r22, Z
    2278:	71 81       	ldd	r23, Z+1	; 0x01
    227a:	82 81       	ldd	r24, Z+2	; 0x02
    227c:	93 81       	ldd	r25, Z+3	; 0x03
    227e:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2282:	dc 01       	movw	r26, r24
    2284:	cb 01       	movw	r24, r22
    2286:	f8 01       	movw	r30, r16
    2288:	91 83       	std	Z+1, r25	; 0x01
    228a:	80 83       	st	Z, r24
    228c:	de 01       	movw	r26, r28
    228e:	a7 5b       	subi	r26, 0xB7	; 183
    2290:	bf 4f       	sbci	r27, 0xFF	; 255
    2292:	fe 01       	movw	r30, r28
    2294:	e3 5b       	subi	r30, 0xB3	; 179
    2296:	ff 4f       	sbci	r31, 0xFF	; 255
    2298:	80 81       	ld	r24, Z
    229a:	91 81       	ldd	r25, Z+1	; 0x01
    229c:	8d 93       	st	X+, r24
    229e:	9c 93       	st	X, r25
    22a0:	fe 01       	movw	r30, r28
    22a2:	e7 5b       	subi	r30, 0xB7	; 183
    22a4:	ff 4f       	sbci	r31, 0xFF	; 255
    22a6:	80 81       	ld	r24, Z
    22a8:	91 81       	ldd	r25, Z+1	; 0x01
    22aa:	01 97       	sbiw	r24, 0x01	; 1
    22ac:	f1 f7       	brne	.-4      	; 0x22aa <lcd_init+0x37c>
    22ae:	fe 01       	movw	r30, r28
    22b0:	e7 5b       	subi	r30, 0xB7	; 183
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	91 83       	std	Z+1, r25	; 0x01
    22b6:	80 83       	st	Z, r24
	_delay_ms(4.1);

	SET_E;
    22b8:	ab e3       	ldi	r26, 0x3B	; 59
    22ba:	b0 e0       	ldi	r27, 0x00	; 0
    22bc:	eb e3       	ldi	r30, 0x3B	; 59
    22be:	f0 e0       	ldi	r31, 0x00	; 0
    22c0:	80 81       	ld	r24, Z
    22c2:	84 60       	ori	r24, 0x04	; 4
    22c4:	8c 93       	st	X, r24
	lcd_sendHalf(0x03);	// tryb 8-bitowy
    22c6:	83 e0       	ldi	r24, 0x03	; 3
    22c8:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    22cc:	ab e3       	ldi	r26, 0x3B	; 59
    22ce:	b0 e0       	ldi	r27, 0x00	; 0
    22d0:	eb e3       	ldi	r30, 0x3B	; 59
    22d2:	f0 e0       	ldi	r31, 0x00	; 0
    22d4:	80 81       	ld	r24, Z
    22d6:	8b 7f       	andi	r24, 0xFB	; 251
    22d8:	8c 93       	st	X, r24
    22da:	fe 01       	movw	r30, r28
    22dc:	eb 5b       	subi	r30, 0xBB	; 187
    22de:	ff 4f       	sbci	r31, 0xFF	; 255
    22e0:	80 e0       	ldi	r24, 0x00	; 0
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	a8 ec       	ldi	r26, 0xC8	; 200
    22e6:	b2 e4       	ldi	r27, 0x42	; 66
    22e8:	80 83       	st	Z, r24
    22ea:	91 83       	std	Z+1, r25	; 0x01
    22ec:	a2 83       	std	Z+2, r26	; 0x02
    22ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    22f0:	8e 01       	movw	r16, r28
    22f2:	0f 5b       	subi	r16, 0xBF	; 191
    22f4:	1f 4f       	sbci	r17, 0xFF	; 255
    22f6:	fe 01       	movw	r30, r28
    22f8:	eb 5b       	subi	r30, 0xBB	; 187
    22fa:	ff 4f       	sbci	r31, 0xFF	; 255
    22fc:	60 81       	ld	r22, Z
    22fe:	71 81       	ldd	r23, Z+1	; 0x01
    2300:	82 81       	ldd	r24, Z+2	; 0x02
    2302:	93 81       	ldd	r25, Z+3	; 0x03
    2304:	2b ea       	ldi	r18, 0xAB	; 171
    2306:	3a ea       	ldi	r19, 0xAA	; 170
    2308:	4a ea       	ldi	r20, 0xAA	; 170
    230a:	50 e4       	ldi	r21, 0x40	; 64
    230c:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2310:	dc 01       	movw	r26, r24
    2312:	cb 01       	movw	r24, r22
    2314:	f8 01       	movw	r30, r16
    2316:	80 83       	st	Z, r24
    2318:	91 83       	std	Z+1, r25	; 0x01
    231a:	a2 83       	std	Z+2, r26	; 0x02
    231c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    231e:	fe 01       	movw	r30, r28
    2320:	ef 5b       	subi	r30, 0xBF	; 191
    2322:	ff 4f       	sbci	r31, 0xFF	; 255
    2324:	60 81       	ld	r22, Z
    2326:	71 81       	ldd	r23, Z+1	; 0x01
    2328:	82 81       	ldd	r24, Z+2	; 0x02
    232a:	93 81       	ldd	r25, Z+3	; 0x03
    232c:	20 e0       	ldi	r18, 0x00	; 0
    232e:	30 e0       	ldi	r19, 0x00	; 0
    2330:	40 e8       	ldi	r20, 0x80	; 128
    2332:	5f e3       	ldi	r21, 0x3F	; 63
    2334:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2338:	88 23       	and	r24, r24
    233a:	34 f4       	brge	.+12     	; 0x2348 <lcd_init+0x41a>
		__ticks = 1;
    233c:	81 e0       	ldi	r24, 0x01	; 1
    233e:	fe 01       	movw	r30, r28
    2340:	e0 5c       	subi	r30, 0xC0	; 192
    2342:	ff 4f       	sbci	r31, 0xFF	; 255
    2344:	80 83       	st	Z, r24
    2346:	9d c0       	rjmp	.+314    	; 0x2482 <lcd_init+0x554>
	else if (__tmp > 255)
    2348:	fe 01       	movw	r30, r28
    234a:	ef 5b       	subi	r30, 0xBF	; 191
    234c:	ff 4f       	sbci	r31, 0xFF	; 255
    234e:	60 81       	ld	r22, Z
    2350:	71 81       	ldd	r23, Z+1	; 0x01
    2352:	82 81       	ldd	r24, Z+2	; 0x02
    2354:	93 81       	ldd	r25, Z+3	; 0x03
    2356:	20 e0       	ldi	r18, 0x00	; 0
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	4f e7       	ldi	r20, 0x7F	; 127
    235c:	53 e4       	ldi	r21, 0x43	; 67
    235e:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2362:	18 16       	cp	r1, r24
    2364:	0c f0       	brlt	.+2      	; 0x2368 <lcd_init+0x43a>
    2366:	7e c0       	rjmp	.+252    	; 0x2464 <lcd_init+0x536>
	{
		_delay_ms(__us / 1000.0);
    2368:	fe 01       	movw	r30, r28
    236a:	eb 5b       	subi	r30, 0xBB	; 187
    236c:	ff 4f       	sbci	r31, 0xFF	; 255
    236e:	60 81       	ld	r22, Z
    2370:	71 81       	ldd	r23, Z+1	; 0x01
    2372:	82 81       	ldd	r24, Z+2	; 0x02
    2374:	93 81       	ldd	r25, Z+3	; 0x03
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	30 e0       	ldi	r19, 0x00	; 0
    237a:	4a e7       	ldi	r20, 0x7A	; 122
    237c:	54 e4       	ldi	r21, 0x44	; 68
    237e:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__divsf3>
    2382:	dc 01       	movw	r26, r24
    2384:	cb 01       	movw	r24, r22
    2386:	8c af       	std	Y+60, r24	; 0x3c
    2388:	9d af       	std	Y+61, r25	; 0x3d
    238a:	ae af       	std	Y+62, r26	; 0x3e
    238c:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    238e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2390:	7d ad       	ldd	r23, Y+61	; 0x3d
    2392:	8e ad       	ldd	r24, Y+62	; 0x3e
    2394:	9f ad       	ldd	r25, Y+63	; 0x3f
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	4a e7       	ldi	r20, 0x7A	; 122
    239c:	55 e4       	ldi	r21, 0x45	; 69
    239e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    23a2:	dc 01       	movw	r26, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	88 af       	std	Y+56, r24	; 0x38
    23a8:	99 af       	std	Y+57, r25	; 0x39
    23aa:	aa af       	std	Y+58, r26	; 0x3a
    23ac:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    23ae:	68 ad       	ldd	r22, Y+56	; 0x38
    23b0:	79 ad       	ldd	r23, Y+57	; 0x39
    23b2:	8a ad       	ldd	r24, Y+58	; 0x3a
    23b4:	9b ad       	ldd	r25, Y+59	; 0x3b
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	40 e8       	ldi	r20, 0x80	; 128
    23bc:	5f e3       	ldi	r21, 0x3F	; 63
    23be:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    23c2:	88 23       	and	r24, r24
    23c4:	2c f4       	brge	.+10     	; 0x23d0 <lcd_init+0x4a2>
		__ticks = 1;
    23c6:	81 e0       	ldi	r24, 0x01	; 1
    23c8:	90 e0       	ldi	r25, 0x00	; 0
    23ca:	9f ab       	std	Y+55, r25	; 0x37
    23cc:	8e ab       	std	Y+54, r24	; 0x36
    23ce:	3f c0       	rjmp	.+126    	; 0x244e <lcd_init+0x520>
	else if (__tmp > 65535)
    23d0:	68 ad       	ldd	r22, Y+56	; 0x38
    23d2:	79 ad       	ldd	r23, Y+57	; 0x39
    23d4:	8a ad       	ldd	r24, Y+58	; 0x3a
    23d6:	9b ad       	ldd	r25, Y+59	; 0x3b
    23d8:	20 e0       	ldi	r18, 0x00	; 0
    23da:	3f ef       	ldi	r19, 0xFF	; 255
    23dc:	4f e7       	ldi	r20, 0x7F	; 127
    23de:	57 e4       	ldi	r21, 0x47	; 71
    23e0:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    23e4:	18 16       	cp	r1, r24
    23e6:	4c f5       	brge	.+82     	; 0x243a <lcd_init+0x50c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e8:	6c ad       	ldd	r22, Y+60	; 0x3c
    23ea:	7d ad       	ldd	r23, Y+61	; 0x3d
    23ec:	8e ad       	ldd	r24, Y+62	; 0x3e
    23ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    23f0:	20 e0       	ldi	r18, 0x00	; 0
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	40 e2       	ldi	r20, 0x20	; 32
    23f6:	51 e4       	ldi	r21, 0x41	; 65
    23f8:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    23fc:	dc 01       	movw	r26, r24
    23fe:	cb 01       	movw	r24, r22
    2400:	bc 01       	movw	r22, r24
    2402:	cd 01       	movw	r24, r26
    2404:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2408:	dc 01       	movw	r26, r24
    240a:	cb 01       	movw	r24, r22
    240c:	9f ab       	std	Y+55, r25	; 0x37
    240e:	8e ab       	std	Y+54, r24	; 0x36
    2410:	0f c0       	rjmp	.+30     	; 0x2430 <lcd_init+0x502>
    2412:	80 e9       	ldi	r24, 0x90	; 144
    2414:	91 e0       	ldi	r25, 0x01	; 1
    2416:	9d ab       	std	Y+53, r25	; 0x35
    2418:	8c ab       	std	Y+52, r24	; 0x34
    241a:	8c a9       	ldd	r24, Y+52	; 0x34
    241c:	9d a9       	ldd	r25, Y+53	; 0x35
    241e:	01 97       	sbiw	r24, 0x01	; 1
    2420:	f1 f7       	brne	.-4      	; 0x241e <lcd_init+0x4f0>
    2422:	9d ab       	std	Y+53, r25	; 0x35
    2424:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2426:	8e a9       	ldd	r24, Y+54	; 0x36
    2428:	9f a9       	ldd	r25, Y+55	; 0x37
    242a:	01 97       	sbiw	r24, 0x01	; 1
    242c:	9f ab       	std	Y+55, r25	; 0x37
    242e:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2430:	8e a9       	ldd	r24, Y+54	; 0x36
    2432:	9f a9       	ldd	r25, Y+55	; 0x37
    2434:	00 97       	sbiw	r24, 0x00	; 0
    2436:	69 f7       	brne	.-38     	; 0x2412 <lcd_init+0x4e4>
    2438:	2d c0       	rjmp	.+90     	; 0x2494 <lcd_init+0x566>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    243a:	68 ad       	ldd	r22, Y+56	; 0x38
    243c:	79 ad       	ldd	r23, Y+57	; 0x39
    243e:	8a ad       	ldd	r24, Y+58	; 0x3a
    2440:	9b ad       	ldd	r25, Y+59	; 0x3b
    2442:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	9f ab       	std	Y+55, r25	; 0x37
    244c:	8e ab       	std	Y+54, r24	; 0x36
    244e:	8e a9       	ldd	r24, Y+54	; 0x36
    2450:	9f a9       	ldd	r25, Y+55	; 0x37
    2452:	9b ab       	std	Y+51, r25	; 0x33
    2454:	8a ab       	std	Y+50, r24	; 0x32
    2456:	8a a9       	ldd	r24, Y+50	; 0x32
    2458:	9b a9       	ldd	r25, Y+51	; 0x33
    245a:	01 97       	sbiw	r24, 0x01	; 1
    245c:	f1 f7       	brne	.-4      	; 0x245a <lcd_init+0x52c>
    245e:	9b ab       	std	Y+51, r25	; 0x33
    2460:	8a ab       	std	Y+50, r24	; 0x32
    2462:	18 c0       	rjmp	.+48     	; 0x2494 <lcd_init+0x566>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2464:	fe 01       	movw	r30, r28
    2466:	ef 5b       	subi	r30, 0xBF	; 191
    2468:	ff 4f       	sbci	r31, 0xFF	; 255
    246a:	60 81       	ld	r22, Z
    246c:	71 81       	ldd	r23, Z+1	; 0x01
    246e:	82 81       	ldd	r24, Z+2	; 0x02
    2470:	93 81       	ldd	r25, Z+3	; 0x03
    2472:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2476:	dc 01       	movw	r26, r24
    2478:	cb 01       	movw	r24, r22
    247a:	fe 01       	movw	r30, r28
    247c:	e0 5c       	subi	r30, 0xC0	; 192
    247e:	ff 4f       	sbci	r31, 0xFF	; 255
    2480:	80 83       	st	Z, r24
    2482:	fe 01       	movw	r30, r28
    2484:	e0 5c       	subi	r30, 0xC0	; 192
    2486:	ff 4f       	sbci	r31, 0xFF	; 255
    2488:	80 81       	ld	r24, Z
    248a:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    248c:	89 a9       	ldd	r24, Y+49	; 0x31
    248e:	8a 95       	dec	r24
    2490:	f1 f7       	brne	.-4      	; 0x248e <lcd_init+0x560>
    2492:	89 ab       	std	Y+49, r24	; 0x31
	_delay_us(100);

	SET_E;
    2494:	ab e3       	ldi	r26, 0x3B	; 59
    2496:	b0 e0       	ldi	r27, 0x00	; 0
    2498:	eb e3       	ldi	r30, 0x3B	; 59
    249a:	f0 e0       	ldi	r31, 0x00	; 0
    249c:	80 81       	ld	r24, Z
    249e:	84 60       	ori	r24, 0x04	; 4
    24a0:	8c 93       	st	X, r24
	lcd_sendHalf(0x03);	// tryb 8-bitowy
    24a2:	83 e0       	ldi	r24, 0x03	; 3
    24a4:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    24a8:	ab e3       	ldi	r26, 0x3B	; 59
    24aa:	b0 e0       	ldi	r27, 0x00	; 0
    24ac:	eb e3       	ldi	r30, 0x3B	; 59
    24ae:	f0 e0       	ldi	r31, 0x00	; 0
    24b0:	80 81       	ld	r24, Z
    24b2:	8b 7f       	andi	r24, 0xFB	; 251
    24b4:	8c 93       	st	X, r24
    24b6:	80 e0       	ldi	r24, 0x00	; 0
    24b8:	90 e0       	ldi	r25, 0x00	; 0
    24ba:	a8 ec       	ldi	r26, 0xC8	; 200
    24bc:	b2 e4       	ldi	r27, 0x42	; 66
    24be:	8d a7       	std	Y+45, r24	; 0x2d
    24c0:	9e a7       	std	Y+46, r25	; 0x2e
    24c2:	af a7       	std	Y+47, r26	; 0x2f
    24c4:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    24c6:	6d a5       	ldd	r22, Y+45	; 0x2d
    24c8:	7e a5       	ldd	r23, Y+46	; 0x2e
    24ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    24cc:	98 a9       	ldd	r25, Y+48	; 0x30
    24ce:	2b ea       	ldi	r18, 0xAB	; 171
    24d0:	3a ea       	ldi	r19, 0xAA	; 170
    24d2:	4a ea       	ldi	r20, 0xAA	; 170
    24d4:	50 e4       	ldi	r21, 0x40	; 64
    24d6:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    24da:	dc 01       	movw	r26, r24
    24dc:	cb 01       	movw	r24, r22
    24de:	89 a7       	std	Y+41, r24	; 0x29
    24e0:	9a a7       	std	Y+42, r25	; 0x2a
    24e2:	ab a7       	std	Y+43, r26	; 0x2b
    24e4:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    24e6:	69 a5       	ldd	r22, Y+41	; 0x29
    24e8:	7a a5       	ldd	r23, Y+42	; 0x2a
    24ea:	8b a5       	ldd	r24, Y+43	; 0x2b
    24ec:	9c a5       	ldd	r25, Y+44	; 0x2c
    24ee:	20 e0       	ldi	r18, 0x00	; 0
    24f0:	30 e0       	ldi	r19, 0x00	; 0
    24f2:	40 e8       	ldi	r20, 0x80	; 128
    24f4:	5f e3       	ldi	r21, 0x3F	; 63
    24f6:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    24fa:	88 23       	and	r24, r24
    24fc:	1c f4       	brge	.+6      	; 0x2504 <lcd_init+0x5d6>
		__ticks = 1;
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	88 a7       	std	Y+40, r24	; 0x28
    2502:	91 c0       	rjmp	.+290    	; 0x2626 <lcd_init+0x6f8>
	else if (__tmp > 255)
    2504:	69 a5       	ldd	r22, Y+41	; 0x29
    2506:	7a a5       	ldd	r23, Y+42	; 0x2a
    2508:	8b a5       	ldd	r24, Y+43	; 0x2b
    250a:	9c a5       	ldd	r25, Y+44	; 0x2c
    250c:	20 e0       	ldi	r18, 0x00	; 0
    250e:	30 e0       	ldi	r19, 0x00	; 0
    2510:	4f e7       	ldi	r20, 0x7F	; 127
    2512:	53 e4       	ldi	r21, 0x43	; 67
    2514:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2518:	18 16       	cp	r1, r24
    251a:	0c f0       	brlt	.+2      	; 0x251e <lcd_init+0x5f0>
    251c:	7b c0       	rjmp	.+246    	; 0x2614 <lcd_init+0x6e6>
	{
		_delay_ms(__us / 1000.0);
    251e:	6d a5       	ldd	r22, Y+45	; 0x2d
    2520:	7e a5       	ldd	r23, Y+46	; 0x2e
    2522:	8f a5       	ldd	r24, Y+47	; 0x2f
    2524:	98 a9       	ldd	r25, Y+48	; 0x30
    2526:	20 e0       	ldi	r18, 0x00	; 0
    2528:	30 e0       	ldi	r19, 0x00	; 0
    252a:	4a e7       	ldi	r20, 0x7A	; 122
    252c:	54 e4       	ldi	r21, 0x44	; 68
    252e:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__divsf3>
    2532:	dc 01       	movw	r26, r24
    2534:	cb 01       	movw	r24, r22
    2536:	8c a3       	std	Y+36, r24	; 0x24
    2538:	9d a3       	std	Y+37, r25	; 0x25
    253a:	ae a3       	std	Y+38, r26	; 0x26
    253c:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    253e:	6c a1       	ldd	r22, Y+36	; 0x24
    2540:	7d a1       	ldd	r23, Y+37	; 0x25
    2542:	8e a1       	ldd	r24, Y+38	; 0x26
    2544:	9f a1       	ldd	r25, Y+39	; 0x27
    2546:	20 e0       	ldi	r18, 0x00	; 0
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	4a e7       	ldi	r20, 0x7A	; 122
    254c:	55 e4       	ldi	r21, 0x45	; 69
    254e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2552:	dc 01       	movw	r26, r24
    2554:	cb 01       	movw	r24, r22
    2556:	88 a3       	std	Y+32, r24	; 0x20
    2558:	99 a3       	std	Y+33, r25	; 0x21
    255a:	aa a3       	std	Y+34, r26	; 0x22
    255c:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    255e:	68 a1       	ldd	r22, Y+32	; 0x20
    2560:	79 a1       	ldd	r23, Y+33	; 0x21
    2562:	8a a1       	ldd	r24, Y+34	; 0x22
    2564:	9b a1       	ldd	r25, Y+35	; 0x23
    2566:	20 e0       	ldi	r18, 0x00	; 0
    2568:	30 e0       	ldi	r19, 0x00	; 0
    256a:	40 e8       	ldi	r20, 0x80	; 128
    256c:	5f e3       	ldi	r21, 0x3F	; 63
    256e:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2572:	88 23       	and	r24, r24
    2574:	2c f4       	brge	.+10     	; 0x2580 <lcd_init+0x652>
		__ticks = 1;
    2576:	81 e0       	ldi	r24, 0x01	; 1
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	9f 8f       	std	Y+31, r25	; 0x1f
    257c:	8e 8f       	std	Y+30, r24	; 0x1e
    257e:	3f c0       	rjmp	.+126    	; 0x25fe <lcd_init+0x6d0>
	else if (__tmp > 65535)
    2580:	68 a1       	ldd	r22, Y+32	; 0x20
    2582:	79 a1       	ldd	r23, Y+33	; 0x21
    2584:	8a a1       	ldd	r24, Y+34	; 0x22
    2586:	9b a1       	ldd	r25, Y+35	; 0x23
    2588:	20 e0       	ldi	r18, 0x00	; 0
    258a:	3f ef       	ldi	r19, 0xFF	; 255
    258c:	4f e7       	ldi	r20, 0x7F	; 127
    258e:	57 e4       	ldi	r21, 0x47	; 71
    2590:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2594:	18 16       	cp	r1, r24
    2596:	4c f5       	brge	.+82     	; 0x25ea <lcd_init+0x6bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2598:	6c a1       	ldd	r22, Y+36	; 0x24
    259a:	7d a1       	ldd	r23, Y+37	; 0x25
    259c:	8e a1       	ldd	r24, Y+38	; 0x26
    259e:	9f a1       	ldd	r25, Y+39	; 0x27
    25a0:	20 e0       	ldi	r18, 0x00	; 0
    25a2:	30 e0       	ldi	r19, 0x00	; 0
    25a4:	40 e2       	ldi	r20, 0x20	; 32
    25a6:	51 e4       	ldi	r21, 0x41	; 65
    25a8:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    25ac:	dc 01       	movw	r26, r24
    25ae:	cb 01       	movw	r24, r22
    25b0:	bc 01       	movw	r22, r24
    25b2:	cd 01       	movw	r24, r26
    25b4:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    25b8:	dc 01       	movw	r26, r24
    25ba:	cb 01       	movw	r24, r22
    25bc:	9f 8f       	std	Y+31, r25	; 0x1f
    25be:	8e 8f       	std	Y+30, r24	; 0x1e
    25c0:	0f c0       	rjmp	.+30     	; 0x25e0 <lcd_init+0x6b2>
    25c2:	80 e9       	ldi	r24, 0x90	; 144
    25c4:	91 e0       	ldi	r25, 0x01	; 1
    25c6:	9d 8f       	std	Y+29, r25	; 0x1d
    25c8:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    25ca:	8c 8d       	ldd	r24, Y+28	; 0x1c
    25cc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    25ce:	01 97       	sbiw	r24, 0x01	; 1
    25d0:	f1 f7       	brne	.-4      	; 0x25ce <lcd_init+0x6a0>
    25d2:	9d 8f       	std	Y+29, r25	; 0x1d
    25d4:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    25d8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    25da:	01 97       	sbiw	r24, 0x01	; 1
    25dc:	9f 8f       	std	Y+31, r25	; 0x1f
    25de:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    25e2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    25e4:	00 97       	sbiw	r24, 0x00	; 0
    25e6:	69 f7       	brne	.-38     	; 0x25c2 <lcd_init+0x694>
    25e8:	24 c0       	rjmp	.+72     	; 0x2632 <lcd_init+0x704>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25ea:	68 a1       	ldd	r22, Y+32	; 0x20
    25ec:	79 a1       	ldd	r23, Y+33	; 0x21
    25ee:	8a a1       	ldd	r24, Y+34	; 0x22
    25f0:	9b a1       	ldd	r25, Y+35	; 0x23
    25f2:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    25f6:	dc 01       	movw	r26, r24
    25f8:	cb 01       	movw	r24, r22
    25fa:	9f 8f       	std	Y+31, r25	; 0x1f
    25fc:	8e 8f       	std	Y+30, r24	; 0x1e
    25fe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2600:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2602:	9b 8f       	std	Y+27, r25	; 0x1b
    2604:	8a 8f       	std	Y+26, r24	; 0x1a
    2606:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2608:	9b 8d       	ldd	r25, Y+27	; 0x1b
    260a:	01 97       	sbiw	r24, 0x01	; 1
    260c:	f1 f7       	brne	.-4      	; 0x260a <lcd_init+0x6dc>
    260e:	9b 8f       	std	Y+27, r25	; 0x1b
    2610:	8a 8f       	std	Y+26, r24	; 0x1a
    2612:	0f c0       	rjmp	.+30     	; 0x2632 <lcd_init+0x704>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2614:	69 a5       	ldd	r22, Y+41	; 0x29
    2616:	7a a5       	ldd	r23, Y+42	; 0x2a
    2618:	8b a5       	ldd	r24, Y+43	; 0x2b
    261a:	9c a5       	ldd	r25, Y+44	; 0x2c
    261c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2620:	dc 01       	movw	r26, r24
    2622:	cb 01       	movw	r24, r22
    2624:	88 a7       	std	Y+40, r24	; 0x28
    2626:	88 a5       	ldd	r24, Y+40	; 0x28
    2628:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    262a:	89 8d       	ldd	r24, Y+25	; 0x19
    262c:	8a 95       	dec	r24
    262e:	f1 f7       	brne	.-4      	; 0x262c <lcd_init+0x6fe>
    2630:	89 8f       	std	Y+25, r24	; 0x19
	_delay_us(100);

	SET_E;
    2632:	ab e3       	ldi	r26, 0x3B	; 59
    2634:	b0 e0       	ldi	r27, 0x00	; 0
    2636:	eb e3       	ldi	r30, 0x3B	; 59
    2638:	f0 e0       	ldi	r31, 0x00	; 0
    263a:	80 81       	ld	r24, Z
    263c:	84 60       	ori	r24, 0x04	; 4
    263e:	8c 93       	st	X, r24
	lcd_sendHalf(0x02);// tryb 4-bitowy
    2640:	82 e0       	ldi	r24, 0x02	; 2
    2642:	0e 94 be 0c 	call	0x197c	; 0x197c <lcd_sendHalf>
	CLR_E;
    2646:	ab e3       	ldi	r26, 0x3B	; 59
    2648:	b0 e0       	ldi	r27, 0x00	; 0
    264a:	eb e3       	ldi	r30, 0x3B	; 59
    264c:	f0 e0       	ldi	r31, 0x00	; 0
    264e:	80 81       	ld	r24, Z
    2650:	8b 7f       	andi	r24, 0xFB	; 251
    2652:	8c 93       	st	X, r24
    2654:	80 e0       	ldi	r24, 0x00	; 0
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	a8 ec       	ldi	r26, 0xC8	; 200
    265a:	b2 e4       	ldi	r27, 0x42	; 66
    265c:	8d 8b       	std	Y+21, r24	; 0x15
    265e:	9e 8b       	std	Y+22, r25	; 0x16
    2660:	af 8b       	std	Y+23, r26	; 0x17
    2662:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2664:	6d 89       	ldd	r22, Y+21	; 0x15
    2666:	7e 89       	ldd	r23, Y+22	; 0x16
    2668:	8f 89       	ldd	r24, Y+23	; 0x17
    266a:	98 8d       	ldd	r25, Y+24	; 0x18
    266c:	2b ea       	ldi	r18, 0xAB	; 171
    266e:	3a ea       	ldi	r19, 0xAA	; 170
    2670:	4a ea       	ldi	r20, 0xAA	; 170
    2672:	50 e4       	ldi	r21, 0x40	; 64
    2674:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2678:	dc 01       	movw	r26, r24
    267a:	cb 01       	movw	r24, r22
    267c:	89 8b       	std	Y+17, r24	; 0x11
    267e:	9a 8b       	std	Y+18, r25	; 0x12
    2680:	ab 8b       	std	Y+19, r26	; 0x13
    2682:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    2684:	69 89       	ldd	r22, Y+17	; 0x11
    2686:	7a 89       	ldd	r23, Y+18	; 0x12
    2688:	8b 89       	ldd	r24, Y+19	; 0x13
    268a:	9c 89       	ldd	r25, Y+20	; 0x14
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	30 e0       	ldi	r19, 0x00	; 0
    2690:	40 e8       	ldi	r20, 0x80	; 128
    2692:	5f e3       	ldi	r21, 0x3F	; 63
    2694:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2698:	88 23       	and	r24, r24
    269a:	1c f4       	brge	.+6      	; 0x26a2 <lcd_init+0x774>
		__ticks = 1;
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	88 8b       	std	Y+16, r24	; 0x10
    26a0:	91 c0       	rjmp	.+290    	; 0x27c4 <lcd_init+0x896>
	else if (__tmp > 255)
    26a2:	69 89       	ldd	r22, Y+17	; 0x11
    26a4:	7a 89       	ldd	r23, Y+18	; 0x12
    26a6:	8b 89       	ldd	r24, Y+19	; 0x13
    26a8:	9c 89       	ldd	r25, Y+20	; 0x14
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	4f e7       	ldi	r20, 0x7F	; 127
    26b0:	53 e4       	ldi	r21, 0x43	; 67
    26b2:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    26b6:	18 16       	cp	r1, r24
    26b8:	0c f0       	brlt	.+2      	; 0x26bc <lcd_init+0x78e>
    26ba:	7b c0       	rjmp	.+246    	; 0x27b2 <lcd_init+0x884>
	{
		_delay_ms(__us / 1000.0);
    26bc:	6d 89       	ldd	r22, Y+21	; 0x15
    26be:	7e 89       	ldd	r23, Y+22	; 0x16
    26c0:	8f 89       	ldd	r24, Y+23	; 0x17
    26c2:	98 8d       	ldd	r25, Y+24	; 0x18
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	4a e7       	ldi	r20, 0x7A	; 122
    26ca:	54 e4       	ldi	r21, 0x44	; 68
    26cc:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__divsf3>
    26d0:	dc 01       	movw	r26, r24
    26d2:	cb 01       	movw	r24, r22
    26d4:	8c 87       	std	Y+12, r24	; 0x0c
    26d6:	9d 87       	std	Y+13, r25	; 0x0d
    26d8:	ae 87       	std	Y+14, r26	; 0x0e
    26da:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26dc:	6c 85       	ldd	r22, Y+12	; 0x0c
    26de:	7d 85       	ldd	r23, Y+13	; 0x0d
    26e0:	8e 85       	ldd	r24, Y+14	; 0x0e
    26e2:	9f 85       	ldd	r25, Y+15	; 0x0f
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	4a e7       	ldi	r20, 0x7A	; 122
    26ea:	55 e4       	ldi	r21, 0x45	; 69
    26ec:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    26f0:	dc 01       	movw	r26, r24
    26f2:	cb 01       	movw	r24, r22
    26f4:	88 87       	std	Y+8, r24	; 0x08
    26f6:	99 87       	std	Y+9, r25	; 0x09
    26f8:	aa 87       	std	Y+10, r26	; 0x0a
    26fa:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    26fc:	68 85       	ldd	r22, Y+8	; 0x08
    26fe:	79 85       	ldd	r23, Y+9	; 0x09
    2700:	8a 85       	ldd	r24, Y+10	; 0x0a
    2702:	9b 85       	ldd	r25, Y+11	; 0x0b
    2704:	20 e0       	ldi	r18, 0x00	; 0
    2706:	30 e0       	ldi	r19, 0x00	; 0
    2708:	40 e8       	ldi	r20, 0x80	; 128
    270a:	5f e3       	ldi	r21, 0x3F	; 63
    270c:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2710:	88 23       	and	r24, r24
    2712:	2c f4       	brge	.+10     	; 0x271e <lcd_init+0x7f0>
		__ticks = 1;
    2714:	81 e0       	ldi	r24, 0x01	; 1
    2716:	90 e0       	ldi	r25, 0x00	; 0
    2718:	9f 83       	std	Y+7, r25	; 0x07
    271a:	8e 83       	std	Y+6, r24	; 0x06
    271c:	3f c0       	rjmp	.+126    	; 0x279c <lcd_init+0x86e>
	else if (__tmp > 65535)
    271e:	68 85       	ldd	r22, Y+8	; 0x08
    2720:	79 85       	ldd	r23, Y+9	; 0x09
    2722:	8a 85       	ldd	r24, Y+10	; 0x0a
    2724:	9b 85       	ldd	r25, Y+11	; 0x0b
    2726:	20 e0       	ldi	r18, 0x00	; 0
    2728:	3f ef       	ldi	r19, 0xFF	; 255
    272a:	4f e7       	ldi	r20, 0x7F	; 127
    272c:	57 e4       	ldi	r21, 0x47	; 71
    272e:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2732:	18 16       	cp	r1, r24
    2734:	4c f5       	brge	.+82     	; 0x2788 <lcd_init+0x85a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2736:	6c 85       	ldd	r22, Y+12	; 0x0c
    2738:	7d 85       	ldd	r23, Y+13	; 0x0d
    273a:	8e 85       	ldd	r24, Y+14	; 0x0e
    273c:	9f 85       	ldd	r25, Y+15	; 0x0f
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	40 e2       	ldi	r20, 0x20	; 32
    2744:	51 e4       	ldi	r21, 0x41	; 65
    2746:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    274a:	dc 01       	movw	r26, r24
    274c:	cb 01       	movw	r24, r22
    274e:	bc 01       	movw	r22, r24
    2750:	cd 01       	movw	r24, r26
    2752:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2756:	dc 01       	movw	r26, r24
    2758:	cb 01       	movw	r24, r22
    275a:	9f 83       	std	Y+7, r25	; 0x07
    275c:	8e 83       	std	Y+6, r24	; 0x06
    275e:	0f c0       	rjmp	.+30     	; 0x277e <lcd_init+0x850>
    2760:	80 e9       	ldi	r24, 0x90	; 144
    2762:	91 e0       	ldi	r25, 0x01	; 1
    2764:	9d 83       	std	Y+5, r25	; 0x05
    2766:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2768:	8c 81       	ldd	r24, Y+4	; 0x04
    276a:	9d 81       	ldd	r25, Y+5	; 0x05
    276c:	01 97       	sbiw	r24, 0x01	; 1
    276e:	f1 f7       	brne	.-4      	; 0x276c <lcd_init+0x83e>
    2770:	9d 83       	std	Y+5, r25	; 0x05
    2772:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2774:	8e 81       	ldd	r24, Y+6	; 0x06
    2776:	9f 81       	ldd	r25, Y+7	; 0x07
    2778:	01 97       	sbiw	r24, 0x01	; 1
    277a:	9f 83       	std	Y+7, r25	; 0x07
    277c:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    277e:	8e 81       	ldd	r24, Y+6	; 0x06
    2780:	9f 81       	ldd	r25, Y+7	; 0x07
    2782:	00 97       	sbiw	r24, 0x00	; 0
    2784:	69 f7       	brne	.-38     	; 0x2760 <lcd_init+0x832>
    2786:	24 c0       	rjmp	.+72     	; 0x27d0 <lcd_init+0x8a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2788:	68 85       	ldd	r22, Y+8	; 0x08
    278a:	79 85       	ldd	r23, Y+9	; 0x09
    278c:	8a 85       	ldd	r24, Y+10	; 0x0a
    278e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2790:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2794:	dc 01       	movw	r26, r24
    2796:	cb 01       	movw	r24, r22
    2798:	9f 83       	std	Y+7, r25	; 0x07
    279a:	8e 83       	std	Y+6, r24	; 0x06
    279c:	8e 81       	ldd	r24, Y+6	; 0x06
    279e:	9f 81       	ldd	r25, Y+7	; 0x07
    27a0:	9b 83       	std	Y+3, r25	; 0x03
    27a2:	8a 83       	std	Y+2, r24	; 0x02
    27a4:	8a 81       	ldd	r24, Y+2	; 0x02
    27a6:	9b 81       	ldd	r25, Y+3	; 0x03
    27a8:	01 97       	sbiw	r24, 0x01	; 1
    27aa:	f1 f7       	brne	.-4      	; 0x27a8 <lcd_init+0x87a>
    27ac:	9b 83       	std	Y+3, r25	; 0x03
    27ae:	8a 83       	std	Y+2, r24	; 0x02
    27b0:	0f c0       	rjmp	.+30     	; 0x27d0 <lcd_init+0x8a2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    27b2:	69 89       	ldd	r22, Y+17	; 0x11
    27b4:	7a 89       	ldd	r23, Y+18	; 0x12
    27b6:	8b 89       	ldd	r24, Y+19	; 0x13
    27b8:	9c 89       	ldd	r25, Y+20	; 0x14
    27ba:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    27be:	dc 01       	movw	r26, r24
    27c0:	cb 01       	movw	r24, r22
    27c2:	88 8b       	std	Y+16, r24	; 0x10
    27c4:	88 89       	ldd	r24, Y+16	; 0x10
    27c6:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    27c8:	89 81       	ldd	r24, Y+1	; 0x01
    27ca:	8a 95       	dec	r24
    27cc:	f1 f7       	brne	.-4      	; 0x27ca <lcd_init+0x89c>
    27ce:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(100);

	// ju¿ mo¿na u¿ywaæ Busy Flag
	// tryb 4-bitowy, 2 wiersze, znak 5x7
	lcd_write_cmd( LCDC_FUNC|LCDC_FUNC4B|LCDC_FUNC2L|LCDC_FUNC5x7 );
    27d0:	88 e2       	ldi	r24, 0x28	; 40
    27d2:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	// wy³¹czenie kursora
	lcd_write_cmd( LCDC_ONOFF|LCDC_CURSOROFF );
    27d6:	88 e0       	ldi	r24, 0x08	; 8
    27d8:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	// w³¹czenie wyœwietlacza
	lcd_write_cmd( LCDC_ONOFF|LCDC_DISPLAYON );
    27dc:	8c e0       	ldi	r24, 0x0C	; 12
    27de:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>
	// przesuwanie kursora w prawo bez przesuwania zawartoœci ekranu
	lcd_write_cmd( LCDC_ENTRY|LCDC_ENTRYR );
    27e2:	86 e0       	ldi	r24, 0x06	; 6
    27e4:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <lcd_write_cmd>

	// kasowanie ekranu
	lcd_cls();
    27e8:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <lcd_cls>
}
    27ec:	cc 59       	subi	r28, 0x9C	; 156
    27ee:	df 4f       	sbci	r29, 0xFF	; 255
    27f0:	0f b6       	in	r0, 0x3f	; 63
    27f2:	f8 94       	cli
    27f4:	de bf       	out	0x3e, r29	; 62
    27f6:	0f be       	out	0x3f, r0	; 63
    27f8:	cd bf       	out	0x3d, r28	; 61
    27fa:	cf 91       	pop	r28
    27fc:	df 91       	pop	r29
    27fe:	1f 91       	pop	r17
    2800:	0f 91       	pop	r16
    2802:	08 95       	ret

00002804 <main>:
//-------------------------------------------------------------------------------------------------

//*****************************************************************************************************************************************
//5. MAIN**********************************************************************************************************************************
int main()
{
    2804:	df 93       	push	r29
    2806:	cf 93       	push	r28
    2808:	00 d0       	rcall	.+0      	; 0x280a <main+0x6>
    280a:	0f 92       	push	r0
    280c:	cd b7       	in	r28, 0x3d	; 61
    280e:	de b7       	in	r29, 0x3e	; 62
	//5.1. ustawienie uC
	DDRA = 0xFF;
    2810:	ea e3       	ldi	r30, 0x3A	; 58
    2812:	f0 e0       	ldi	r31, 0x00	; 0
    2814:	8f ef       	ldi	r24, 0xFF	; 255
    2816:	80 83       	st	Z, r24
	DDRC = 0xF3;
    2818:	e4 e3       	ldi	r30, 0x34	; 52
    281a:	f0 e0       	ldi	r31, 0x00	; 0
    281c:	83 ef       	ldi	r24, 0xF3	; 243
    281e:	80 83       	st	Z, r24
	PORTA= 0x00;
    2820:	eb e3       	ldi	r30, 0x3B	; 59
    2822:	f0 e0       	ldi	r31, 0x00	; 0
    2824:	10 82       	st	Z, r1
	PORTC= 0x03;
    2826:	e5 e3       	ldi	r30, 0x35	; 53
    2828:	f0 e0       	ldi	r31, 0x00	; 0
    282a:	83 e0       	ldi	r24, 0x03	; 3
    282c:	80 83       	st	Z, r24

	InitUSART(19200);
    282e:	60 e0       	ldi	r22, 0x00	; 0
    2830:	7b e4       	ldi	r23, 0x4B	; 75
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	0e 94 49 00 	call	0x92	; 0x92 <InitUSART>
	lcd_init();
    283a:	0e 94 97 0f 	call	0x1f2e	; 0x1f2e <lcd_init>

	//5.2. wprowadzenie numeru
	start();
    283e:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <start>
	lcd_cls();
    2842:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <lcd_cls>
	lcd_locate(0,0);
    2846:	80 e0       	ldi	r24, 0x00	; 0
    2848:	60 e0       	ldi	r22, 0x00	; 0
    284a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
	lcd_str("AUTOBUS");
    284e:	83 e8       	ldi	r24, 0x83	; 131
    2850:	91 e0       	ldi	r25, 0x01	; 1
    2852:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
	wprowadz_numer();
    2856:	0e 94 76 14 	call	0x28ec	; 0x28ec <wprowadz_numer>

	//5.3 przekonwertowanie numeru na char
	char *string=0;//cyfra char - zmienna
    285a:	1b 82       	std	Y+3, r1	; 0x03
    285c:	1a 82       	std	Y+2, r1	; 0x02
	for (uint8_t i=0; i<3; i++)
    285e:	19 82       	std	Y+1, r1	; 0x01
    2860:	1d c0       	rjmp	.+58     	; 0x289c <main+0x98>
	{
		itoa(autobusik_int[i], string, 10);
    2862:	89 81       	ldd	r24, Y+1	; 0x01
    2864:	88 2f       	mov	r24, r24
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	fc 01       	movw	r30, r24
    286a:	e6 54       	subi	r30, 0x46	; 70
    286c:	fe 4f       	sbci	r31, 0xFE	; 254
    286e:	80 81       	ld	r24, Z
    2870:	88 2f       	mov	r24, r24
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	2a 81       	ldd	r18, Y+2	; 0x02
    2876:	3b 81       	ldd	r19, Y+3	; 0x03
    2878:	b9 01       	movw	r22, r18
    287a:	4a e0       	ldi	r20, 0x0A	; 10
    287c:	50 e0       	ldi	r21, 0x00	; 0
    287e:	0e 94 58 23 	call	0x46b0	; 0x46b0 <itoa>
		autobusik_char[i]=*string;
    2882:	89 81       	ldd	r24, Y+1	; 0x01
    2884:	88 2f       	mov	r24, r24
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	ea 81       	ldd	r30, Y+2	; 0x02
    288a:	fb 81       	ldd	r31, Y+3	; 0x03
    288c:	20 81       	ld	r18, Z
    288e:	fc 01       	movw	r30, r24
    2890:	ea 54       	subi	r30, 0x4A	; 74
    2892:	fe 4f       	sbci	r31, 0xFE	; 254
    2894:	20 83       	st	Z, r18
	lcd_str("AUTOBUS");
	wprowadz_numer();

	//5.3 przekonwertowanie numeru na char
	char *string=0;//cyfra char - zmienna
	for (uint8_t i=0; i<3; i++)
    2896:	89 81       	ldd	r24, Y+1	; 0x01
    2898:	8f 5f       	subi	r24, 0xFF	; 255
    289a:	89 83       	std	Y+1, r24	; 0x01
    289c:	89 81       	ldd	r24, Y+1	; 0x01
    289e:	83 30       	cpi	r24, 0x03	; 3
    28a0:	00 f3       	brcs	.-64     	; 0x2862 <main+0x5e>
	{
		itoa(autobusik_int[i], string, 10);
		autobusik_char[i]=*string;
	}
	autobusik_char[3] = autobusik_int[3];
    28a2:	80 91 bd 01 	lds	r24, 0x01BD
    28a6:	80 93 b9 01 	sts	0x01B9, r24

	lcd_locate(0,13); lcd_str(autobusik_char);//wyswietlenie numeru
    28aa:	80 e0       	ldi	r24, 0x00	; 0
    28ac:	6d e0       	ldi	r22, 0x0D	; 13
    28ae:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    28b2:	86 eb       	ldi	r24, 0xB6	; 182
    28b4:	91 e0       	ldi	r25, 0x01	; 1
    28b6:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
	//5.4. wys³anie numeru linii
	while(1){
		start_transmit = ReceiveUSART(); //odbierz i zapisz znak
    28ba:	0e 94 b6 00 	call	0x16c	; 0x16c <ReceiveUSART>
    28be:	80 93 be 01 	sts	0x01BE, r24
		if (start_transmit == 'X'){ //JE¯ELI TO ZNAK POCZ¥TKU TRANSMISJI, TO WYSLIJ NUMER POJAZDU
    28c2:	80 91 be 01 	lds	r24, 0x01BE
    28c6:	88 35       	cpi	r24, 0x58	; 88
    28c8:	c1 f7       	brne	.-16     	; 0x28ba <main+0xb6>
			TransmitUSART(0x0D); //CR
    28ca:	8d e0       	ldi	r24, 0x0D	; 13
    28cc:	0e 94 c5 00 	call	0x18a	; 0x18a <TransmitUSART>
			TransmitUSART(0x0A); //LF
    28d0:	8a e0       	ldi	r24, 0x0A	; 10
    28d2:	0e 94 c5 00 	call	0x18a	; 0x18a <TransmitUSART>
			bluetooth_transmit(autobusik_char);//wyslanie numeru i kierunku
    28d6:	86 eb       	ldi	r24, 0xB6	; 182
    28d8:	91 e0       	ldi	r25, 0x01	; 1
    28da:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <bluetooth_transmit>
			TransmitUSART(0x0D); //CR
    28de:	8d e0       	ldi	r24, 0x0D	; 13
    28e0:	0e 94 c5 00 	call	0x18a	; 0x18a <TransmitUSART>
			TransmitUSART(0x0A); //LF
    28e4:	8a e0       	ldi	r24, 0x0A	; 10
    28e6:	0e 94 c5 00 	call	0x18a	; 0x18a <TransmitUSART>
    28ea:	e7 cf       	rjmp	.-50     	; 0x28ba <main+0xb6>

000028ec <wprowadz_numer>:
}
//*****************************************************************************************************************************************
//*****************************************************************************************************************************************

//5.2. WPROWADZENIE NUMERU-----------------------------------------------------------------------------------------------------------------
int wprowadz_numer(){	//numer linii
    28ec:	0f 93       	push	r16
    28ee:	1f 93       	push	r17
    28f0:	df 93       	push	r29
    28f2:	cf 93       	push	r28
    28f4:	cd b7       	in	r28, 0x3d	; 61
    28f6:	de b7       	in	r29, 0x3e	; 62
    28f8:	cc 58       	subi	r28, 0x8C	; 140
    28fa:	d0 40       	sbci	r29, 0x00	; 0
    28fc:	0f b6       	in	r0, 0x3f	; 63
    28fe:	f8 94       	cli
    2900:	de bf       	out	0x3e, r29	; 62
    2902:	0f be       	out	0x3f, r0	; 63
    2904:	cd bf       	out	0x3d, r28	; 61
	for ( i=0; i<3; i++){
    2906:	10 92 b2 01 	sts	0x01B2, r1
    290a:	7f c2       	rjmp	.+1278   	; 0x2e0a <wprowadz_numer+0x51e>
    290c:	fe 01       	movw	r30, r28
    290e:	e7 57       	subi	r30, 0x77	; 119
    2910:	ff 4f       	sbci	r31, 0xFF	; 255
    2912:	80 e0       	ldi	r24, 0x00	; 0
    2914:	90 e0       	ldi	r25, 0x00	; 0
    2916:	a8 e4       	ldi	r26, 0x48	; 72
    2918:	b3 e4       	ldi	r27, 0x43	; 67
    291a:	80 83       	st	Z, r24
    291c:	91 83       	std	Z+1, r25	; 0x01
    291e:	a2 83       	std	Z+2, r26	; 0x02
    2920:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2922:	8e 01       	movw	r16, r28
    2924:	0b 57       	subi	r16, 0x7B	; 123
    2926:	1f 4f       	sbci	r17, 0xFF	; 255
    2928:	fe 01       	movw	r30, r28
    292a:	e7 57       	subi	r30, 0x77	; 119
    292c:	ff 4f       	sbci	r31, 0xFF	; 255
    292e:	60 81       	ld	r22, Z
    2930:	71 81       	ldd	r23, Z+1	; 0x01
    2932:	82 81       	ldd	r24, Z+2	; 0x02
    2934:	93 81       	ldd	r25, Z+3	; 0x03
    2936:	20 e0       	ldi	r18, 0x00	; 0
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	4a e7       	ldi	r20, 0x7A	; 122
    293c:	55 e4       	ldi	r21, 0x45	; 69
    293e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2942:	dc 01       	movw	r26, r24
    2944:	cb 01       	movw	r24, r22
    2946:	f8 01       	movw	r30, r16
    2948:	80 83       	st	Z, r24
    294a:	91 83       	std	Z+1, r25	; 0x01
    294c:	a2 83       	std	Z+2, r26	; 0x02
    294e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2950:	fe 01       	movw	r30, r28
    2952:	eb 57       	subi	r30, 0x7B	; 123
    2954:	ff 4f       	sbci	r31, 0xFF	; 255
    2956:	60 81       	ld	r22, Z
    2958:	71 81       	ldd	r23, Z+1	; 0x01
    295a:	82 81       	ldd	r24, Z+2	; 0x02
    295c:	93 81       	ldd	r25, Z+3	; 0x03
    295e:	20 e0       	ldi	r18, 0x00	; 0
    2960:	30 e0       	ldi	r19, 0x00	; 0
    2962:	40 e8       	ldi	r20, 0x80	; 128
    2964:	5f e3       	ldi	r21, 0x3F	; 63
    2966:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    296a:	88 23       	and	r24, r24
    296c:	44 f4       	brge	.+16     	; 0x297e <wprowadz_numer+0x92>
		__ticks = 1;
    296e:	fe 01       	movw	r30, r28
    2970:	ed 57       	subi	r30, 0x7D	; 125
    2972:	ff 4f       	sbci	r31, 0xFF	; 255
    2974:	81 e0       	ldi	r24, 0x01	; 1
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	91 83       	std	Z+1, r25	; 0x01
    297a:	80 83       	st	Z, r24
    297c:	64 c0       	rjmp	.+200    	; 0x2a46 <wprowadz_numer+0x15a>
	else if (__tmp > 65535)
    297e:	fe 01       	movw	r30, r28
    2980:	eb 57       	subi	r30, 0x7B	; 123
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	60 81       	ld	r22, Z
    2986:	71 81       	ldd	r23, Z+1	; 0x01
    2988:	82 81       	ldd	r24, Z+2	; 0x02
    298a:	93 81       	ldd	r25, Z+3	; 0x03
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	3f ef       	ldi	r19, 0xFF	; 255
    2990:	4f e7       	ldi	r20, 0x7F	; 127
    2992:	57 e4       	ldi	r21, 0x47	; 71
    2994:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2998:	18 16       	cp	r1, r24
    299a:	0c f0       	brlt	.+2      	; 0x299e <wprowadz_numer+0xb2>
    299c:	43 c0       	rjmp	.+134    	; 0x2a24 <wprowadz_numer+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    299e:	fe 01       	movw	r30, r28
    29a0:	e7 57       	subi	r30, 0x77	; 119
    29a2:	ff 4f       	sbci	r31, 0xFF	; 255
    29a4:	60 81       	ld	r22, Z
    29a6:	71 81       	ldd	r23, Z+1	; 0x01
    29a8:	82 81       	ldd	r24, Z+2	; 0x02
    29aa:	93 81       	ldd	r25, Z+3	; 0x03
    29ac:	20 e0       	ldi	r18, 0x00	; 0
    29ae:	30 e0       	ldi	r19, 0x00	; 0
    29b0:	40 e2       	ldi	r20, 0x20	; 32
    29b2:	51 e4       	ldi	r21, 0x41	; 65
    29b4:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    29b8:	dc 01       	movw	r26, r24
    29ba:	cb 01       	movw	r24, r22
    29bc:	8e 01       	movw	r16, r28
    29be:	0d 57       	subi	r16, 0x7D	; 125
    29c0:	1f 4f       	sbci	r17, 0xFF	; 255
    29c2:	bc 01       	movw	r22, r24
    29c4:	cd 01       	movw	r24, r26
    29c6:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    29ca:	dc 01       	movw	r26, r24
    29cc:	cb 01       	movw	r24, r22
    29ce:	f8 01       	movw	r30, r16
    29d0:	91 83       	std	Z+1, r25	; 0x01
    29d2:	80 83       	st	Z, r24
    29d4:	1f c0       	rjmp	.+62     	; 0x2a14 <wprowadz_numer+0x128>
    29d6:	fe 01       	movw	r30, r28
    29d8:	ef 57       	subi	r30, 0x7F	; 127
    29da:	ff 4f       	sbci	r31, 0xFF	; 255
    29dc:	80 e9       	ldi	r24, 0x90	; 144
    29de:	91 e0       	ldi	r25, 0x01	; 1
    29e0:	91 83       	std	Z+1, r25	; 0x01
    29e2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    29e4:	fe 01       	movw	r30, r28
    29e6:	ef 57       	subi	r30, 0x7F	; 127
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	80 81       	ld	r24, Z
    29ec:	91 81       	ldd	r25, Z+1	; 0x01
    29ee:	01 97       	sbiw	r24, 0x01	; 1
    29f0:	f1 f7       	brne	.-4      	; 0x29ee <wprowadz_numer+0x102>
    29f2:	fe 01       	movw	r30, r28
    29f4:	ef 57       	subi	r30, 0x7F	; 127
    29f6:	ff 4f       	sbci	r31, 0xFF	; 255
    29f8:	91 83       	std	Z+1, r25	; 0x01
    29fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29fc:	de 01       	movw	r26, r28
    29fe:	ad 57       	subi	r26, 0x7D	; 125
    2a00:	bf 4f       	sbci	r27, 0xFF	; 255
    2a02:	fe 01       	movw	r30, r28
    2a04:	ed 57       	subi	r30, 0x7D	; 125
    2a06:	ff 4f       	sbci	r31, 0xFF	; 255
    2a08:	80 81       	ld	r24, Z
    2a0a:	91 81       	ldd	r25, Z+1	; 0x01
    2a0c:	01 97       	sbiw	r24, 0x01	; 1
    2a0e:	11 96       	adiw	r26, 0x01	; 1
    2a10:	9c 93       	st	X, r25
    2a12:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a14:	fe 01       	movw	r30, r28
    2a16:	ed 57       	subi	r30, 0x7D	; 125
    2a18:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1a:	80 81       	ld	r24, Z
    2a1c:	91 81       	ldd	r25, Z+1	; 0x01
    2a1e:	00 97       	sbiw	r24, 0x00	; 0
    2a20:	d1 f6       	brne	.-76     	; 0x29d6 <wprowadz_numer+0xea>
    2a22:	28 c0       	rjmp	.+80     	; 0x2a74 <wprowadz_numer+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a24:	8e 01       	movw	r16, r28
    2a26:	0d 57       	subi	r16, 0x7D	; 125
    2a28:	1f 4f       	sbci	r17, 0xFF	; 255
    2a2a:	fe 01       	movw	r30, r28
    2a2c:	eb 57       	subi	r30, 0x7B	; 123
    2a2e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a30:	60 81       	ld	r22, Z
    2a32:	71 81       	ldd	r23, Z+1	; 0x01
    2a34:	82 81       	ldd	r24, Z+2	; 0x02
    2a36:	93 81       	ldd	r25, Z+3	; 0x03
    2a38:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2a3c:	dc 01       	movw	r26, r24
    2a3e:	cb 01       	movw	r24, r22
    2a40:	f8 01       	movw	r30, r16
    2a42:	91 83       	std	Z+1, r25	; 0x01
    2a44:	80 83       	st	Z, r24
    2a46:	de 01       	movw	r26, r28
    2a48:	a1 58       	subi	r26, 0x81	; 129
    2a4a:	bf 4f       	sbci	r27, 0xFF	; 255
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	ed 57       	subi	r30, 0x7D	; 125
    2a50:	ff 4f       	sbci	r31, 0xFF	; 255
    2a52:	80 81       	ld	r24, Z
    2a54:	91 81       	ldd	r25, Z+1	; 0x01
    2a56:	11 96       	adiw	r26, 0x01	; 1
    2a58:	9c 93       	st	X, r25
    2a5a:	8e 93       	st	-X, r24
    2a5c:	fe 01       	movw	r30, r28
    2a5e:	e1 58       	subi	r30, 0x81	; 129
    2a60:	ff 4f       	sbci	r31, 0xFF	; 255
    2a62:	80 81       	ld	r24, Z
    2a64:	91 81       	ldd	r25, Z+1	; 0x01
    2a66:	01 97       	sbiw	r24, 0x01	; 1
    2a68:	f1 f7       	brne	.-4      	; 0x2a66 <wprowadz_numer+0x17a>
    2a6a:	fe 01       	movw	r30, r28
    2a6c:	e1 58       	subi	r30, 0x81	; 129
    2a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a70:	91 83       	std	Z+1, r25	; 0x01
    2a72:	80 83       	st	Z, r24
		_delay_ms(200);
		cyfra = 0; //zerowanie cyfry
    2a74:	10 92 b3 01 	sts	0x01B3, r1
    2a78:	8d c1       	rjmp	.+794    	; 0x2d94 <wprowadz_numer+0x4a8>
		while ( klawisz_ENT_pressed ){ 	//dopóki klawisz LED_enter nie jest wcisniety
			wyswietl_numer (cyfra);
    2a7a:	80 91 b3 01 	lds	r24, 0x01B3
    2a7e:	88 2f       	mov	r24, r24
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	0e 94 77 01 	call	0x2ee	; 0x2ee <wyswietl_numer>
			if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    2a86:	e3 e3       	ldi	r30, 0x33	; 51
    2a88:	f0 e0       	ldi	r31, 0x00	; 0
    2a8a:	80 81       	ld	r24, Z
    2a8c:	88 2f       	mov	r24, r24
    2a8e:	90 e0       	ldi	r25, 0x00	; 0
    2a90:	81 70       	andi	r24, 0x01	; 1
    2a92:	90 70       	andi	r25, 0x00	; 0
    2a94:	00 97       	sbiw	r24, 0x00	; 0
    2a96:	09 f0       	breq	.+2      	; 0x2a9a <wprowadz_numer+0x1ae>
    2a98:	7d c1       	rjmp	.+762    	; 0x2d94 <wprowadz_numer+0x4a8>
    2a9a:	fe 01       	movw	r30, r28
    2a9c:	e5 58       	subi	r30, 0x85	; 133
    2a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa0:	80 e0       	ldi	r24, 0x00	; 0
    2aa2:	90 e0       	ldi	r25, 0x00	; 0
    2aa4:	a0 ea       	ldi	r26, 0xA0	; 160
    2aa6:	b2 e4       	ldi	r27, 0x42	; 66
    2aa8:	80 83       	st	Z, r24
    2aaa:	91 83       	std	Z+1, r25	; 0x01
    2aac:	a2 83       	std	Z+2, r26	; 0x02
    2aae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ab0:	8e 01       	movw	r16, r28
    2ab2:	09 58       	subi	r16, 0x89	; 137
    2ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab6:	fe 01       	movw	r30, r28
    2ab8:	e5 58       	subi	r30, 0x85	; 133
    2aba:	ff 4f       	sbci	r31, 0xFF	; 255
    2abc:	60 81       	ld	r22, Z
    2abe:	71 81       	ldd	r23, Z+1	; 0x01
    2ac0:	82 81       	ldd	r24, Z+2	; 0x02
    2ac2:	93 81       	ldd	r25, Z+3	; 0x03
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	4a e7       	ldi	r20, 0x7A	; 122
    2aca:	55 e4       	ldi	r21, 0x45	; 69
    2acc:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2ad0:	dc 01       	movw	r26, r24
    2ad2:	cb 01       	movw	r24, r22
    2ad4:	f8 01       	movw	r30, r16
    2ad6:	80 83       	st	Z, r24
    2ad8:	91 83       	std	Z+1, r25	; 0x01
    2ada:	a2 83       	std	Z+2, r26	; 0x02
    2adc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ade:	fe 01       	movw	r30, r28
    2ae0:	e9 58       	subi	r30, 0x89	; 137
    2ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae4:	60 81       	ld	r22, Z
    2ae6:	71 81       	ldd	r23, Z+1	; 0x01
    2ae8:	82 81       	ldd	r24, Z+2	; 0x02
    2aea:	93 81       	ldd	r25, Z+3	; 0x03
    2aec:	20 e0       	ldi	r18, 0x00	; 0
    2aee:	30 e0       	ldi	r19, 0x00	; 0
    2af0:	40 e8       	ldi	r20, 0x80	; 128
    2af2:	5f e3       	ldi	r21, 0x3F	; 63
    2af4:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2af8:	88 23       	and	r24, r24
    2afa:	44 f4       	brge	.+16     	; 0x2b0c <wprowadz_numer+0x220>
		__ticks = 1;
    2afc:	fe 01       	movw	r30, r28
    2afe:	eb 58       	subi	r30, 0x8B	; 139
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	81 e0       	ldi	r24, 0x01	; 1
    2b04:	90 e0       	ldi	r25, 0x00	; 0
    2b06:	91 83       	std	Z+1, r25	; 0x01
    2b08:	80 83       	st	Z, r24
    2b0a:	64 c0       	rjmp	.+200    	; 0x2bd4 <wprowadz_numer+0x2e8>
	else if (__tmp > 65535)
    2b0c:	fe 01       	movw	r30, r28
    2b0e:	e9 58       	subi	r30, 0x89	; 137
    2b10:	ff 4f       	sbci	r31, 0xFF	; 255
    2b12:	60 81       	ld	r22, Z
    2b14:	71 81       	ldd	r23, Z+1	; 0x01
    2b16:	82 81       	ldd	r24, Z+2	; 0x02
    2b18:	93 81       	ldd	r25, Z+3	; 0x03
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	3f ef       	ldi	r19, 0xFF	; 255
    2b1e:	4f e7       	ldi	r20, 0x7F	; 127
    2b20:	57 e4       	ldi	r21, 0x47	; 71
    2b22:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2b26:	18 16       	cp	r1, r24
    2b28:	0c f0       	brlt	.+2      	; 0x2b2c <wprowadz_numer+0x240>
    2b2a:	43 c0       	rjmp	.+134    	; 0x2bb2 <wprowadz_numer+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b2c:	fe 01       	movw	r30, r28
    2b2e:	e5 58       	subi	r30, 0x85	; 133
    2b30:	ff 4f       	sbci	r31, 0xFF	; 255
    2b32:	60 81       	ld	r22, Z
    2b34:	71 81       	ldd	r23, Z+1	; 0x01
    2b36:	82 81       	ldd	r24, Z+2	; 0x02
    2b38:	93 81       	ldd	r25, Z+3	; 0x03
    2b3a:	20 e0       	ldi	r18, 0x00	; 0
    2b3c:	30 e0       	ldi	r19, 0x00	; 0
    2b3e:	40 e2       	ldi	r20, 0x20	; 32
    2b40:	51 e4       	ldi	r21, 0x41	; 65
    2b42:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2b46:	dc 01       	movw	r26, r24
    2b48:	cb 01       	movw	r24, r22
    2b4a:	8e 01       	movw	r16, r28
    2b4c:	0b 58       	subi	r16, 0x8B	; 139
    2b4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b50:	bc 01       	movw	r22, r24
    2b52:	cd 01       	movw	r24, r26
    2b54:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2b58:	dc 01       	movw	r26, r24
    2b5a:	cb 01       	movw	r24, r22
    2b5c:	f8 01       	movw	r30, r16
    2b5e:	91 83       	std	Z+1, r25	; 0x01
    2b60:	80 83       	st	Z, r24
    2b62:	1f c0       	rjmp	.+62     	; 0x2ba2 <wprowadz_numer+0x2b6>
    2b64:	fe 01       	movw	r30, r28
    2b66:	ed 58       	subi	r30, 0x8D	; 141
    2b68:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6a:	80 e9       	ldi	r24, 0x90	; 144
    2b6c:	91 e0       	ldi	r25, 0x01	; 1
    2b6e:	91 83       	std	Z+1, r25	; 0x01
    2b70:	80 83       	st	Z, r24
    2b72:	fe 01       	movw	r30, r28
    2b74:	ed 58       	subi	r30, 0x8D	; 141
    2b76:	ff 4f       	sbci	r31, 0xFF	; 255
    2b78:	80 81       	ld	r24, Z
    2b7a:	91 81       	ldd	r25, Z+1	; 0x01
    2b7c:	01 97       	sbiw	r24, 0x01	; 1
    2b7e:	f1 f7       	brne	.-4      	; 0x2b7c <wprowadz_numer+0x290>
    2b80:	fe 01       	movw	r30, r28
    2b82:	ed 58       	subi	r30, 0x8D	; 141
    2b84:	ff 4f       	sbci	r31, 0xFF	; 255
    2b86:	91 83       	std	Z+1, r25	; 0x01
    2b88:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b8a:	de 01       	movw	r26, r28
    2b8c:	ab 58       	subi	r26, 0x8B	; 139
    2b8e:	bf 4f       	sbci	r27, 0xFF	; 255
    2b90:	fe 01       	movw	r30, r28
    2b92:	eb 58       	subi	r30, 0x8B	; 139
    2b94:	ff 4f       	sbci	r31, 0xFF	; 255
    2b96:	80 81       	ld	r24, Z
    2b98:	91 81       	ldd	r25, Z+1	; 0x01
    2b9a:	01 97       	sbiw	r24, 0x01	; 1
    2b9c:	11 96       	adiw	r26, 0x01	; 1
    2b9e:	9c 93       	st	X, r25
    2ba0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ba2:	fe 01       	movw	r30, r28
    2ba4:	eb 58       	subi	r30, 0x8B	; 139
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	80 81       	ld	r24, Z
    2baa:	91 81       	ldd	r25, Z+1	; 0x01
    2bac:	00 97       	sbiw	r24, 0x00	; 0
    2bae:	d1 f6       	brne	.-76     	; 0x2b64 <wprowadz_numer+0x278>
    2bb0:	28 c0       	rjmp	.+80     	; 0x2c02 <wprowadz_numer+0x316>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb2:	8e 01       	movw	r16, r28
    2bb4:	0b 58       	subi	r16, 0x8B	; 139
    2bb6:	1f 4f       	sbci	r17, 0xFF	; 255
    2bb8:	fe 01       	movw	r30, r28
    2bba:	e9 58       	subi	r30, 0x89	; 137
    2bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbe:	60 81       	ld	r22, Z
    2bc0:	71 81       	ldd	r23, Z+1	; 0x01
    2bc2:	82 81       	ldd	r24, Z+2	; 0x02
    2bc4:	93 81       	ldd	r25, Z+3	; 0x03
    2bc6:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2bca:	dc 01       	movw	r26, r24
    2bcc:	cb 01       	movw	r24, r22
    2bce:	f8 01       	movw	r30, r16
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	de 01       	movw	r26, r28
    2bd6:	af 58       	subi	r26, 0x8F	; 143
    2bd8:	bf 4f       	sbci	r27, 0xFF	; 255
    2bda:	fe 01       	movw	r30, r28
    2bdc:	eb 58       	subi	r30, 0x8B	; 139
    2bde:	ff 4f       	sbci	r31, 0xFF	; 255
    2be0:	80 81       	ld	r24, Z
    2be2:	91 81       	ldd	r25, Z+1	; 0x01
    2be4:	11 96       	adiw	r26, 0x01	; 1
    2be6:	9c 93       	st	X, r25
    2be8:	8e 93       	st	-X, r24
    2bea:	fe 01       	movw	r30, r28
    2bec:	ef 58       	subi	r30, 0x8F	; 143
    2bee:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf0:	80 81       	ld	r24, Z
    2bf2:	91 81       	ldd	r25, Z+1	; 0x01
    2bf4:	01 97       	sbiw	r24, 0x01	; 1
    2bf6:	f1 f7       	brne	.-4      	; 0x2bf4 <wprowadz_numer+0x308>
    2bf8:	fe 01       	movw	r30, r28
    2bfa:	ef 58       	subi	r30, 0x8F	; 143
    2bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfe:	91 83       	std	Z+1, r25	; 0x01
    2c00:	80 83       	st	Z, r24
				_delay_ms(80);
				if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    2c02:	e3 e3       	ldi	r30, 0x33	; 51
    2c04:	f0 e0       	ldi	r31, 0x00	; 0
    2c06:	80 81       	ld	r24, Z
    2c08:	88 2f       	mov	r24, r24
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	81 70       	andi	r24, 0x01	; 1
    2c0e:	90 70       	andi	r25, 0x00	; 0
    2c10:	00 97       	sbiw	r24, 0x00	; 0
    2c12:	09 f0       	breq	.+2      	; 0x2c16 <wprowadz_numer+0x32a>
    2c14:	bf c0       	rjmp	.+382    	; 0x2d94 <wprowadz_numer+0x4a8>
					cyfra++;
    2c16:	80 91 b3 01 	lds	r24, 0x01B3
    2c1a:	8f 5f       	subi	r24, 0xFF	; 255
    2c1c:	80 93 b3 01 	sts	0x01B3, r24
    2c20:	fe 01       	movw	r30, r28
    2c22:	e3 59       	subi	r30, 0x93	; 147
    2c24:	ff 4f       	sbci	r31, 0xFF	; 255
    2c26:	80 e0       	ldi	r24, 0x00	; 0
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	a8 e4       	ldi	r26, 0x48	; 72
    2c2c:	b3 e4       	ldi	r27, 0x43	; 67
    2c2e:	80 83       	st	Z, r24
    2c30:	91 83       	std	Z+1, r25	; 0x01
    2c32:	a2 83       	std	Z+2, r26	; 0x02
    2c34:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c36:	8e 01       	movw	r16, r28
    2c38:	07 59       	subi	r16, 0x97	; 151
    2c3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c3c:	fe 01       	movw	r30, r28
    2c3e:	e3 59       	subi	r30, 0x93	; 147
    2c40:	ff 4f       	sbci	r31, 0xFF	; 255
    2c42:	60 81       	ld	r22, Z
    2c44:	71 81       	ldd	r23, Z+1	; 0x01
    2c46:	82 81       	ldd	r24, Z+2	; 0x02
    2c48:	93 81       	ldd	r25, Z+3	; 0x03
    2c4a:	20 e0       	ldi	r18, 0x00	; 0
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	4a e7       	ldi	r20, 0x7A	; 122
    2c50:	55 e4       	ldi	r21, 0x45	; 69
    2c52:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2c56:	dc 01       	movw	r26, r24
    2c58:	cb 01       	movw	r24, r22
    2c5a:	f8 01       	movw	r30, r16
    2c5c:	80 83       	st	Z, r24
    2c5e:	91 83       	std	Z+1, r25	; 0x01
    2c60:	a2 83       	std	Z+2, r26	; 0x02
    2c62:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c64:	fe 01       	movw	r30, r28
    2c66:	e7 59       	subi	r30, 0x97	; 151
    2c68:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6a:	60 81       	ld	r22, Z
    2c6c:	71 81       	ldd	r23, Z+1	; 0x01
    2c6e:	82 81       	ldd	r24, Z+2	; 0x02
    2c70:	93 81       	ldd	r25, Z+3	; 0x03
    2c72:	20 e0       	ldi	r18, 0x00	; 0
    2c74:	30 e0       	ldi	r19, 0x00	; 0
    2c76:	40 e8       	ldi	r20, 0x80	; 128
    2c78:	5f e3       	ldi	r21, 0x3F	; 63
    2c7a:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    2c7e:	88 23       	and	r24, r24
    2c80:	44 f4       	brge	.+16     	; 0x2c92 <wprowadz_numer+0x3a6>
		__ticks = 1;
    2c82:	fe 01       	movw	r30, r28
    2c84:	e9 59       	subi	r30, 0x99	; 153
    2c86:	ff 4f       	sbci	r31, 0xFF	; 255
    2c88:	81 e0       	ldi	r24, 0x01	; 1
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	91 83       	std	Z+1, r25	; 0x01
    2c8e:	80 83       	st	Z, r24
    2c90:	64 c0       	rjmp	.+200    	; 0x2d5a <wprowadz_numer+0x46e>
	else if (__tmp > 65535)
    2c92:	fe 01       	movw	r30, r28
    2c94:	e7 59       	subi	r30, 0x97	; 151
    2c96:	ff 4f       	sbci	r31, 0xFF	; 255
    2c98:	60 81       	ld	r22, Z
    2c9a:	71 81       	ldd	r23, Z+1	; 0x01
    2c9c:	82 81       	ldd	r24, Z+2	; 0x02
    2c9e:	93 81       	ldd	r25, Z+3	; 0x03
    2ca0:	20 e0       	ldi	r18, 0x00	; 0
    2ca2:	3f ef       	ldi	r19, 0xFF	; 255
    2ca4:	4f e7       	ldi	r20, 0x7F	; 127
    2ca6:	57 e4       	ldi	r21, 0x47	; 71
    2ca8:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    2cac:	18 16       	cp	r1, r24
    2cae:	0c f0       	brlt	.+2      	; 0x2cb2 <wprowadz_numer+0x3c6>
    2cb0:	43 c0       	rjmp	.+134    	; 0x2d38 <wprowadz_numer+0x44c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cb2:	fe 01       	movw	r30, r28
    2cb4:	e3 59       	subi	r30, 0x93	; 147
    2cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb8:	60 81       	ld	r22, Z
    2cba:	71 81       	ldd	r23, Z+1	; 0x01
    2cbc:	82 81       	ldd	r24, Z+2	; 0x02
    2cbe:	93 81       	ldd	r25, Z+3	; 0x03
    2cc0:	20 e0       	ldi	r18, 0x00	; 0
    2cc2:	30 e0       	ldi	r19, 0x00	; 0
    2cc4:	40 e2       	ldi	r20, 0x20	; 32
    2cc6:	51 e4       	ldi	r21, 0x41	; 65
    2cc8:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    2ccc:	dc 01       	movw	r26, r24
    2cce:	cb 01       	movw	r24, r22
    2cd0:	8e 01       	movw	r16, r28
    2cd2:	09 59       	subi	r16, 0x99	; 153
    2cd4:	1f 4f       	sbci	r17, 0xFF	; 255
    2cd6:	bc 01       	movw	r22, r24
    2cd8:	cd 01       	movw	r24, r26
    2cda:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2cde:	dc 01       	movw	r26, r24
    2ce0:	cb 01       	movw	r24, r22
    2ce2:	f8 01       	movw	r30, r16
    2ce4:	91 83       	std	Z+1, r25	; 0x01
    2ce6:	80 83       	st	Z, r24
    2ce8:	1f c0       	rjmp	.+62     	; 0x2d28 <wprowadz_numer+0x43c>
    2cea:	fe 01       	movw	r30, r28
    2cec:	eb 59       	subi	r30, 0x9B	; 155
    2cee:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf0:	80 e9       	ldi	r24, 0x90	; 144
    2cf2:	91 e0       	ldi	r25, 0x01	; 1
    2cf4:	91 83       	std	Z+1, r25	; 0x01
    2cf6:	80 83       	st	Z, r24
    2cf8:	fe 01       	movw	r30, r28
    2cfa:	eb 59       	subi	r30, 0x9B	; 155
    2cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cfe:	80 81       	ld	r24, Z
    2d00:	91 81       	ldd	r25, Z+1	; 0x01
    2d02:	01 97       	sbiw	r24, 0x01	; 1
    2d04:	f1 f7       	brne	.-4      	; 0x2d02 <wprowadz_numer+0x416>
    2d06:	fe 01       	movw	r30, r28
    2d08:	eb 59       	subi	r30, 0x9B	; 155
    2d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0c:	91 83       	std	Z+1, r25	; 0x01
    2d0e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d10:	de 01       	movw	r26, r28
    2d12:	a9 59       	subi	r26, 0x99	; 153
    2d14:	bf 4f       	sbci	r27, 0xFF	; 255
    2d16:	fe 01       	movw	r30, r28
    2d18:	e9 59       	subi	r30, 0x99	; 153
    2d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1c:	80 81       	ld	r24, Z
    2d1e:	91 81       	ldd	r25, Z+1	; 0x01
    2d20:	01 97       	sbiw	r24, 0x01	; 1
    2d22:	11 96       	adiw	r26, 0x01	; 1
    2d24:	9c 93       	st	X, r25
    2d26:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d28:	fe 01       	movw	r30, r28
    2d2a:	e9 59       	subi	r30, 0x99	; 153
    2d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d2e:	80 81       	ld	r24, Z
    2d30:	91 81       	ldd	r25, Z+1	; 0x01
    2d32:	00 97       	sbiw	r24, 0x00	; 0
    2d34:	d1 f6       	brne	.-76     	; 0x2cea <wprowadz_numer+0x3fe>
    2d36:	28 c0       	rjmp	.+80     	; 0x2d88 <wprowadz_numer+0x49c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d38:	8e 01       	movw	r16, r28
    2d3a:	09 59       	subi	r16, 0x99	; 153
    2d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d3e:	fe 01       	movw	r30, r28
    2d40:	e7 59       	subi	r30, 0x97	; 151
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	60 81       	ld	r22, Z
    2d46:	71 81       	ldd	r23, Z+1	; 0x01
    2d48:	82 81       	ldd	r24, Z+2	; 0x02
    2d4a:	93 81       	ldd	r25, Z+3	; 0x03
    2d4c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    2d50:	dc 01       	movw	r26, r24
    2d52:	cb 01       	movw	r24, r22
    2d54:	f8 01       	movw	r30, r16
    2d56:	91 83       	std	Z+1, r25	; 0x01
    2d58:	80 83       	st	Z, r24
    2d5a:	de 01       	movw	r26, r28
    2d5c:	ad 59       	subi	r26, 0x9D	; 157
    2d5e:	bf 4f       	sbci	r27, 0xFF	; 255
    2d60:	fe 01       	movw	r30, r28
    2d62:	e9 59       	subi	r30, 0x99	; 153
    2d64:	ff 4f       	sbci	r31, 0xFF	; 255
    2d66:	80 81       	ld	r24, Z
    2d68:	91 81       	ldd	r25, Z+1	; 0x01
    2d6a:	11 96       	adiw	r26, 0x01	; 1
    2d6c:	9c 93       	st	X, r25
    2d6e:	8e 93       	st	-X, r24
    2d70:	fe 01       	movw	r30, r28
    2d72:	ed 59       	subi	r30, 0x9D	; 157
    2d74:	ff 4f       	sbci	r31, 0xFF	; 255
    2d76:	80 81       	ld	r24, Z
    2d78:	91 81       	ldd	r25, Z+1	; 0x01
    2d7a:	01 97       	sbiw	r24, 0x01	; 1
    2d7c:	f1 f7       	brne	.-4      	; 0x2d7a <wprowadz_numer+0x48e>
    2d7e:	fe 01       	movw	r30, r28
    2d80:	ed 59       	subi	r30, 0x9D	; 157
    2d82:	ff 4f       	sbci	r31, 0xFF	; 255
    2d84:	91 83       	std	Z+1, r25	; 0x01
    2d86:	80 83       	st	Z, r24
					_delay_ms(200);
					if (cyfra>9) cyfra=0;
    2d88:	80 91 b3 01 	lds	r24, 0x01B3
    2d8c:	8a 30       	cpi	r24, 0x0A	; 10
    2d8e:	10 f0       	brcs	.+4      	; 0x2d94 <wprowadz_numer+0x4a8>
    2d90:	10 92 b3 01 	sts	0x01B3, r1
//5.2. WPROWADZENIE NUMERU-----------------------------------------------------------------------------------------------------------------
int wprowadz_numer(){	//numer linii
	for ( i=0; i<3; i++){
		_delay_ms(200);
		cyfra = 0; //zerowanie cyfry
		while ( klawisz_ENT_pressed ){ 	//dopóki klawisz LED_enter nie jest wcisniety
    2d94:	e3 e3       	ldi	r30, 0x33	; 51
    2d96:	f0 e0       	ldi	r31, 0x00	; 0
    2d98:	80 81       	ld	r24, Z
    2d9a:	88 2f       	mov	r24, r24
    2d9c:	90 e0       	ldi	r25, 0x00	; 0
    2d9e:	82 70       	andi	r24, 0x02	; 2
    2da0:	90 70       	andi	r25, 0x00	; 0
    2da2:	00 97       	sbiw	r24, 0x00	; 0
    2da4:	09 f0       	breq	.+2      	; 0x2da8 <wprowadz_numer+0x4bc>
    2da6:	69 ce       	rjmp	.-814    	; 0x2a7a <wprowadz_numer+0x18e>
					if (cyfra>9) cyfra=0;
				}
			}
		}

		if ( i == 0 ){
    2da8:	80 91 b2 01 	lds	r24, 0x01B2
    2dac:	88 23       	and	r24, r24
    2dae:	59 f4       	brne	.+22     	; 0x2dc6 <wprowadz_numer+0x4da>
			autobusik_int[i] = cyfra;
    2db0:	80 91 b2 01 	lds	r24, 0x01B2
    2db4:	88 2f       	mov	r24, r24
    2db6:	90 e0       	ldi	r25, 0x00	; 0
    2db8:	20 91 b3 01 	lds	r18, 0x01B3
    2dbc:	fc 01       	movw	r30, r24
    2dbe:	e6 54       	subi	r30, 0x46	; 70
    2dc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2dc2:	20 83       	st	Z, r18
    2dc4:	1d c0       	rjmp	.+58     	; 0x2e00 <wprowadz_numer+0x514>
		}
		else if ( i == 1 ){
    2dc6:	80 91 b2 01 	lds	r24, 0x01B2
    2dca:	81 30       	cpi	r24, 0x01	; 1
    2dcc:	59 f4       	brne	.+22     	; 0x2de4 <wprowadz_numer+0x4f8>
			autobusik_int[i] = cyfra;
    2dce:	80 91 b2 01 	lds	r24, 0x01B2
    2dd2:	88 2f       	mov	r24, r24
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	20 91 b3 01 	lds	r18, 0x01B3
    2dda:	fc 01       	movw	r30, r24
    2ddc:	e6 54       	subi	r30, 0x46	; 70
    2dde:	fe 4f       	sbci	r31, 0xFE	; 254
    2de0:	20 83       	st	Z, r18
    2de2:	0e c0       	rjmp	.+28     	; 0x2e00 <wprowadz_numer+0x514>
		}
		else if ( i == 2 ){
    2de4:	80 91 b2 01 	lds	r24, 0x01B2
    2de8:	82 30       	cpi	r24, 0x02	; 2
    2dea:	a1 f4       	brne	.+40     	; 0x2e14 <wprowadz_numer+0x528>
			autobusik_int[i] = cyfra;
    2dec:	80 91 b2 01 	lds	r24, 0x01B2
    2df0:	88 2f       	mov	r24, r24
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	20 91 b3 01 	lds	r18, 0x01B3
    2df8:	fc 01       	movw	r30, r24
    2dfa:	e6 54       	subi	r30, 0x46	; 70
    2dfc:	fe 4f       	sbci	r31, 0xFE	; 254
    2dfe:	20 83       	st	Z, r18
//*****************************************************************************************************************************************
//*****************************************************************************************************************************************

//5.2. WPROWADZENIE NUMERU-----------------------------------------------------------------------------------------------------------------
int wprowadz_numer(){	//numer linii
	for ( i=0; i<3; i++){
    2e00:	80 91 b2 01 	lds	r24, 0x01B2
    2e04:	8f 5f       	subi	r24, 0xFF	; 255
    2e06:	80 93 b2 01 	sts	0x01B2, r24
    2e0a:	80 91 b2 01 	lds	r24, 0x01B2
    2e0e:	83 30       	cpi	r24, 0x03	; 3
    2e10:	08 f4       	brcc	.+2      	; 0x2e14 <wprowadz_numer+0x528>
    2e12:	7c cd       	rjmp	.-1288   	; 0x290c <wprowadz_numer+0x20>
		}
		else break;
	}

	//kierunek A/B
	if (autobusik_int[0]==0 && autobusik_int[1]==0 && autobusik_int[2]==1){		    //001
    2e14:	80 91 ba 01 	lds	r24, 0x01BA
    2e18:	88 23       	and	r24, r24
    2e1a:	99 f4       	brne	.+38     	; 0x2e42 <wprowadz_numer+0x556>
    2e1c:	80 91 bb 01 	lds	r24, 0x01BB
    2e20:	88 23       	and	r24, r24
    2e22:	79 f4       	brne	.+30     	; 0x2e42 <wprowadz_numer+0x556>
    2e24:	80 91 bc 01 	lds	r24, 0x01BC
    2e28:	81 30       	cpi	r24, 0x01	; 1
    2e2a:	59 f4       	brne	.+22     	; 0x2e42 <wprowadz_numer+0x556>
		kierunek_A=48; kierunek_B=49; cyfra=kierunek_A;
    2e2c:	80 e3       	ldi	r24, 0x30	; 48
    2e2e:	80 93 b4 01 	sts	0x01B4, r24
    2e32:	81 e3       	ldi	r24, 0x31	; 49
    2e34:	80 93 b5 01 	sts	0x01B5, r24
    2e38:	80 91 b4 01 	lds	r24, 0x01B4
    2e3c:	80 93 b3 01 	sts	0x01B3, r24
    2e40:	2b c3       	rjmp	.+1622   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==0 && autobusik_int[1]==1 && autobusik_int[2]==1){	//011
    2e42:	80 91 ba 01 	lds	r24, 0x01BA
    2e46:	88 23       	and	r24, r24
    2e48:	99 f4       	brne	.+38     	; 0x2e70 <wprowadz_numer+0x584>
    2e4a:	80 91 bb 01 	lds	r24, 0x01BB
    2e4e:	81 30       	cpi	r24, 0x01	; 1
    2e50:	79 f4       	brne	.+30     	; 0x2e70 <wprowadz_numer+0x584>
    2e52:	80 91 bc 01 	lds	r24, 0x01BC
    2e56:	81 30       	cpi	r24, 0x01	; 1
    2e58:	59 f4       	brne	.+22     	; 0x2e70 <wprowadz_numer+0x584>
		kierunek_A=40; kierunek_B=46; cyfra=kierunek_A;
    2e5a:	88 e2       	ldi	r24, 0x28	; 40
    2e5c:	80 93 b4 01 	sts	0x01B4, r24
    2e60:	8e e2       	ldi	r24, 0x2E	; 46
    2e62:	80 93 b5 01 	sts	0x01B5, r24
    2e66:	80 91 b4 01 	lds	r24, 0x01B4
    2e6a:	80 93 b3 01 	sts	0x01B3, r24
    2e6e:	14 c3       	rjmp	.+1576   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==0 && autobusik_int[1]==2 && autobusik_int[2]==0){	//020
    2e70:	80 91 ba 01 	lds	r24, 0x01BA
    2e74:	88 23       	and	r24, r24
    2e76:	99 f4       	brne	.+38     	; 0x2e9e <wprowadz_numer+0x5b2>
    2e78:	80 91 bb 01 	lds	r24, 0x01BB
    2e7c:	82 30       	cpi	r24, 0x02	; 2
    2e7e:	79 f4       	brne	.+30     	; 0x2e9e <wprowadz_numer+0x5b2>
    2e80:	80 91 bc 01 	lds	r24, 0x01BC
    2e84:	88 23       	and	r24, r24
    2e86:	59 f4       	brne	.+22     	; 0x2e9e <wprowadz_numer+0x5b2>
		kierunek_A=35; kierunek_B=36; cyfra=kierunek_A;
    2e88:	83 e2       	ldi	r24, 0x23	; 35
    2e8a:	80 93 b4 01 	sts	0x01B4, r24
    2e8e:	84 e2       	ldi	r24, 0x24	; 36
    2e90:	80 93 b5 01 	sts	0x01B5, r24
    2e94:	80 91 b4 01 	lds	r24, 0x01B4
    2e98:	80 93 b3 01 	sts	0x01B3, r24
    2e9c:	fd c2       	rjmp	.+1530   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==0 && autobusik_int[1]==2 && autobusik_int[2]==5){	//025
    2e9e:	80 91 ba 01 	lds	r24, 0x01BA
    2ea2:	88 23       	and	r24, r24
    2ea4:	99 f4       	brne	.+38     	; 0x2ecc <wprowadz_numer+0x5e0>
    2ea6:	80 91 bb 01 	lds	r24, 0x01BB
    2eaa:	82 30       	cpi	r24, 0x02	; 2
    2eac:	79 f4       	brne	.+30     	; 0x2ecc <wprowadz_numer+0x5e0>
    2eae:	80 91 bc 01 	lds	r24, 0x01BC
    2eb2:	85 30       	cpi	r24, 0x05	; 5
    2eb4:	59 f4       	brne	.+22     	; 0x2ecc <wprowadz_numer+0x5e0>
		kierunek_A=48; kierunek_B=49; cyfra=kierunek_A;
    2eb6:	80 e3       	ldi	r24, 0x30	; 48
    2eb8:	80 93 b4 01 	sts	0x01B4, r24
    2ebc:	81 e3       	ldi	r24, 0x31	; 49
    2ebe:	80 93 b5 01 	sts	0x01B5, r24
    2ec2:	80 91 b4 01 	lds	r24, 0x01B4
    2ec6:	80 93 b3 01 	sts	0x01B3, r24
    2eca:	e6 c2       	rjmp	.+1484   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==0 && autobusik_int[1]==2 && autobusik_int[2]==8){	//028
    2ecc:	80 91 ba 01 	lds	r24, 0x01BA
    2ed0:	88 23       	and	r24, r24
    2ed2:	99 f4       	brne	.+38     	; 0x2efa <wprowadz_numer+0x60e>
    2ed4:	80 91 bb 01 	lds	r24, 0x01BB
    2ed8:	82 30       	cpi	r24, 0x02	; 2
    2eda:	79 f4       	brne	.+30     	; 0x2efa <wprowadz_numer+0x60e>
    2edc:	80 91 bc 01 	lds	r24, 0x01BC
    2ee0:	88 30       	cpi	r24, 0x08	; 8
    2ee2:	59 f4       	brne	.+22     	; 0x2efa <wprowadz_numer+0x60e>
		kierunek_A=32; kierunek_B=47; cyfra=kierunek_A;
    2ee4:	80 e2       	ldi	r24, 0x20	; 32
    2ee6:	80 93 b4 01 	sts	0x01B4, r24
    2eea:	8f e2       	ldi	r24, 0x2F	; 47
    2eec:	80 93 b5 01 	sts	0x01B5, r24
    2ef0:	80 91 b4 01 	lds	r24, 0x01B4
    2ef4:	80 93 b3 01 	sts	0x01B3, r24
    2ef8:	cf c2       	rjmp	.+1438   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==0 && autobusik_int[2]==1){	//101
    2efa:	80 91 ba 01 	lds	r24, 0x01BA
    2efe:	81 30       	cpi	r24, 0x01	; 1
    2f00:	99 f4       	brne	.+38     	; 0x2f28 <wprowadz_numer+0x63c>
    2f02:	80 91 bb 01 	lds	r24, 0x01BB
    2f06:	88 23       	and	r24, r24
    2f08:	79 f4       	brne	.+30     	; 0x2f28 <wprowadz_numer+0x63c>
    2f0a:	80 91 bc 01 	lds	r24, 0x01BC
    2f0e:	81 30       	cpi	r24, 0x01	; 1
    2f10:	59 f4       	brne	.+22     	; 0x2f28 <wprowadz_numer+0x63c>
		kierunek_A=39; kierunek_B=40; cyfra=kierunek_A;
    2f12:	87 e2       	ldi	r24, 0x27	; 39
    2f14:	80 93 b4 01 	sts	0x01B4, r24
    2f18:	88 e2       	ldi	r24, 0x28	; 40
    2f1a:	80 93 b5 01 	sts	0x01B5, r24
    2f1e:	80 91 b4 01 	lds	r24, 0x01B4
    2f22:	80 93 b3 01 	sts	0x01B3, r24
    2f26:	b8 c2       	rjmp	.+1392   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==2 && autobusik_int[2]==2){	//122
    2f28:	80 91 ba 01 	lds	r24, 0x01BA
    2f2c:	81 30       	cpi	r24, 0x01	; 1
    2f2e:	99 f4       	brne	.+38     	; 0x2f56 <wprowadz_numer+0x66a>
    2f30:	80 91 bb 01 	lds	r24, 0x01BB
    2f34:	82 30       	cpi	r24, 0x02	; 2
    2f36:	79 f4       	brne	.+30     	; 0x2f56 <wprowadz_numer+0x66a>
    2f38:	80 91 bc 01 	lds	r24, 0x01BC
    2f3c:	82 30       	cpi	r24, 0x02	; 2
    2f3e:	59 f4       	brne	.+22     	; 0x2f56 <wprowadz_numer+0x66a>
		kierunek_A=32; kierunek_B=33; cyfra=kierunek_A;
    2f40:	80 e2       	ldi	r24, 0x20	; 32
    2f42:	80 93 b4 01 	sts	0x01B4, r24
    2f46:	81 e2       	ldi	r24, 0x21	; 33
    2f48:	80 93 b5 01 	sts	0x01B5, r24
    2f4c:	80 91 b4 01 	lds	r24, 0x01B4
    2f50:	80 93 b3 01 	sts	0x01B3, r24
    2f54:	a1 c2       	rjmp	.+1346   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==4 && autobusik_int[2]==1){	//141
    2f56:	80 91 ba 01 	lds	r24, 0x01BA
    2f5a:	81 30       	cpi	r24, 0x01	; 1
    2f5c:	99 f4       	brne	.+38     	; 0x2f84 <wprowadz_numer+0x698>
    2f5e:	80 91 bb 01 	lds	r24, 0x01BB
    2f62:	84 30       	cpi	r24, 0x04	; 4
    2f64:	79 f4       	brne	.+30     	; 0x2f84 <wprowadz_numer+0x698>
    2f66:	80 91 bc 01 	lds	r24, 0x01BC
    2f6a:	81 30       	cpi	r24, 0x01	; 1
    2f6c:	59 f4       	brne	.+22     	; 0x2f84 <wprowadz_numer+0x698>
		kierunek_A=34; kierunek_B=43; cyfra=kierunek_A;
    2f6e:	82 e2       	ldi	r24, 0x22	; 34
    2f70:	80 93 b4 01 	sts	0x01B4, r24
    2f74:	8b e2       	ldi	r24, 0x2B	; 43
    2f76:	80 93 b5 01 	sts	0x01B5, r24
    2f7a:	80 91 b4 01 	lds	r24, 0x01B4
    2f7e:	80 93 b3 01 	sts	0x01B3, r24
    2f82:	8a c2       	rjmp	.+1300   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==5 && autobusik_int[2]==4){	//154
    2f84:	80 91 ba 01 	lds	r24, 0x01BA
    2f88:	81 30       	cpi	r24, 0x01	; 1
    2f8a:	99 f4       	brne	.+38     	; 0x2fb2 <wprowadz_numer+0x6c6>
    2f8c:	80 91 bb 01 	lds	r24, 0x01BB
    2f90:	85 30       	cpi	r24, 0x05	; 5
    2f92:	79 f4       	brne	.+30     	; 0x2fb2 <wprowadz_numer+0x6c6>
    2f94:	80 91 bc 01 	lds	r24, 0x01BC
    2f98:	84 30       	cpi	r24, 0x04	; 4
    2f9a:	59 f4       	brne	.+22     	; 0x2fb2 <wprowadz_numer+0x6c6>
		kierunek_A=30; kierunek_B=34; cyfra=kierunek_A;
    2f9c:	8e e1       	ldi	r24, 0x1E	; 30
    2f9e:	80 93 b4 01 	sts	0x01B4, r24
    2fa2:	82 e2       	ldi	r24, 0x22	; 34
    2fa4:	80 93 b5 01 	sts	0x01B5, r24
    2fa8:	80 91 b4 01 	lds	r24, 0x01B4
    2fac:	80 93 b3 01 	sts	0x01B3, r24
    2fb0:	73 c2       	rjmp	.+1254   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==5 && autobusik_int[2]==6){	//156
    2fb2:	80 91 ba 01 	lds	r24, 0x01BA
    2fb6:	81 30       	cpi	r24, 0x01	; 1
    2fb8:	99 f4       	brne	.+38     	; 0x2fe0 <wprowadz_numer+0x6f4>
    2fba:	80 91 bb 01 	lds	r24, 0x01BB
    2fbe:	85 30       	cpi	r24, 0x05	; 5
    2fc0:	79 f4       	brne	.+30     	; 0x2fe0 <wprowadz_numer+0x6f4>
    2fc2:	80 91 bc 01 	lds	r24, 0x01BC
    2fc6:	86 30       	cpi	r24, 0x06	; 6
    2fc8:	59 f4       	brne	.+22     	; 0x2fe0 <wprowadz_numer+0x6f4>
		kierunek_A=40; kierunek_B=47; cyfra=kierunek_A;
    2fca:	88 e2       	ldi	r24, 0x28	; 40
    2fcc:	80 93 b4 01 	sts	0x01B4, r24
    2fd0:	8f e2       	ldi	r24, 0x2F	; 47
    2fd2:	80 93 b5 01 	sts	0x01B5, r24
    2fd6:	80 91 b4 01 	lds	r24, 0x01B4
    2fda:	80 93 b3 01 	sts	0x01B3, r24
    2fde:	5c c2       	rjmp	.+1208   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==5 && autobusik_int[2]==7){	//157
    2fe0:	80 91 ba 01 	lds	r24, 0x01BA
    2fe4:	81 30       	cpi	r24, 0x01	; 1
    2fe6:	99 f4       	brne	.+38     	; 0x300e <wprowadz_numer+0x722>
    2fe8:	80 91 bb 01 	lds	r24, 0x01BB
    2fec:	85 30       	cpi	r24, 0x05	; 5
    2fee:	79 f4       	brne	.+30     	; 0x300e <wprowadz_numer+0x722>
    2ff0:	80 91 bc 01 	lds	r24, 0x01BC
    2ff4:	87 30       	cpi	r24, 0x07	; 7
    2ff6:	59 f4       	brne	.+22     	; 0x300e <wprowadz_numer+0x722>
		kierunek_A=33; kierunek_B=38; cyfra=kierunek_A;
    2ff8:	81 e2       	ldi	r24, 0x21	; 33
    2ffa:	80 93 b4 01 	sts	0x01B4, r24
    2ffe:	86 e2       	ldi	r24, 0x26	; 38
    3000:	80 93 b5 01 	sts	0x01B5, r24
    3004:	80 91 b4 01 	lds	r24, 0x01B4
    3008:	80 93 b3 01 	sts	0x01B3, r24
    300c:	45 c2       	rjmp	.+1162   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==5 && autobusik_int[2]==8){	//158
    300e:	80 91 ba 01 	lds	r24, 0x01BA
    3012:	81 30       	cpi	r24, 0x01	; 1
    3014:	99 f4       	brne	.+38     	; 0x303c <wprowadz_numer+0x750>
    3016:	80 91 bb 01 	lds	r24, 0x01BB
    301a:	85 30       	cpi	r24, 0x05	; 5
    301c:	79 f4       	brne	.+30     	; 0x303c <wprowadz_numer+0x750>
    301e:	80 91 bc 01 	lds	r24, 0x01BC
    3022:	88 30       	cpi	r24, 0x08	; 8
    3024:	59 f4       	brne	.+22     	; 0x303c <wprowadz_numer+0x750>
		kierunek_A=42; kierunek_B=43; cyfra=kierunek_A;
    3026:	8a e2       	ldi	r24, 0x2A	; 42
    3028:	80 93 b4 01 	sts	0x01B4, r24
    302c:	8b e2       	ldi	r24, 0x2B	; 43
    302e:	80 93 b5 01 	sts	0x01B5, r24
    3032:	80 91 b4 01 	lds	r24, 0x01B4
    3036:	80 93 b3 01 	sts	0x01B3, r24
    303a:	2e c2       	rjmp	.+1116   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==7 && autobusik_int[2]==2){	//172
    303c:	80 91 ba 01 	lds	r24, 0x01BA
    3040:	81 30       	cpi	r24, 0x01	; 1
    3042:	99 f4       	brne	.+38     	; 0x306a <wprowadz_numer+0x77e>
    3044:	80 91 bb 01 	lds	r24, 0x01BB
    3048:	87 30       	cpi	r24, 0x07	; 7
    304a:	79 f4       	brne	.+30     	; 0x306a <wprowadz_numer+0x77e>
    304c:	80 91 bc 01 	lds	r24, 0x01BC
    3050:	82 30       	cpi	r24, 0x02	; 2
    3052:	59 f4       	brne	.+22     	; 0x306a <wprowadz_numer+0x77e>
		kierunek_A=41; kierunek_B=37; cyfra=kierunek_A;
    3054:	89 e2       	ldi	r24, 0x29	; 41
    3056:	80 93 b4 01 	sts	0x01B4, r24
    305a:	85 e2       	ldi	r24, 0x25	; 37
    305c:	80 93 b5 01 	sts	0x01B5, r24
    3060:	80 91 b4 01 	lds	r24, 0x01B4
    3064:	80 93 b3 01 	sts	0x01B3, r24
    3068:	17 c2       	rjmp	.+1070   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==8 && autobusik_int[2]==4){	//184
    306a:	80 91 ba 01 	lds	r24, 0x01BA
    306e:	81 30       	cpi	r24, 0x01	; 1
    3070:	99 f4       	brne	.+38     	; 0x3098 <wprowadz_numer+0x7ac>
    3072:	80 91 bb 01 	lds	r24, 0x01BB
    3076:	88 30       	cpi	r24, 0x08	; 8
    3078:	79 f4       	brne	.+30     	; 0x3098 <wprowadz_numer+0x7ac>
    307a:	80 91 bc 01 	lds	r24, 0x01BC
    307e:	84 30       	cpi	r24, 0x04	; 4
    3080:	59 f4       	brne	.+22     	; 0x3098 <wprowadz_numer+0x7ac>
		kierunek_A=40; kierunek_B=38; cyfra=kierunek_A;
    3082:	88 e2       	ldi	r24, 0x28	; 40
    3084:	80 93 b4 01 	sts	0x01B4, r24
    3088:	86 e2       	ldi	r24, 0x26	; 38
    308a:	80 93 b5 01 	sts	0x01B5, r24
    308e:	80 91 b4 01 	lds	r24, 0x01B4
    3092:	80 93 b3 01 	sts	0x01B3, r24
    3096:	00 c2       	rjmp	.+1024   	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==8 && autobusik_int[2]==6){	//186
    3098:	80 91 ba 01 	lds	r24, 0x01BA
    309c:	81 30       	cpi	r24, 0x01	; 1
    309e:	99 f4       	brne	.+38     	; 0x30c6 <wprowadz_numer+0x7da>
    30a0:	80 91 bb 01 	lds	r24, 0x01BB
    30a4:	88 30       	cpi	r24, 0x08	; 8
    30a6:	79 f4       	brne	.+30     	; 0x30c6 <wprowadz_numer+0x7da>
    30a8:	80 91 bc 01 	lds	r24, 0x01BC
    30ac:	86 30       	cpi	r24, 0x06	; 6
    30ae:	59 f4       	brne	.+22     	; 0x30c6 <wprowadz_numer+0x7da>
		kierunek_A=38; kierunek_B=39; cyfra=kierunek_A;
    30b0:	86 e2       	ldi	r24, 0x26	; 38
    30b2:	80 93 b4 01 	sts	0x01B4, r24
    30b6:	87 e2       	ldi	r24, 0x27	; 39
    30b8:	80 93 b5 01 	sts	0x01B5, r24
    30bc:	80 91 b4 01 	lds	r24, 0x01B4
    30c0:	80 93 b3 01 	sts	0x01B3, r24
    30c4:	e9 c1       	rjmp	.+978    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==1 && autobusik_int[1]==8 && autobusik_int[2]==9){	//189
    30c6:	80 91 ba 01 	lds	r24, 0x01BA
    30ca:	81 30       	cpi	r24, 0x01	; 1
    30cc:	99 f4       	brne	.+38     	; 0x30f4 <wprowadz_numer+0x808>
    30ce:	80 91 bb 01 	lds	r24, 0x01BB
    30d2:	88 30       	cpi	r24, 0x08	; 8
    30d4:	79 f4       	brne	.+30     	; 0x30f4 <wprowadz_numer+0x808>
    30d6:	80 91 bc 01 	lds	r24, 0x01BC
    30da:	89 30       	cpi	r24, 0x09	; 9
    30dc:	59 f4       	brne	.+22     	; 0x30f4 <wprowadz_numer+0x808>
		kierunek_A=32; kierunek_B=37; cyfra=kierunek_A;
    30de:	80 e2       	ldi	r24, 0x20	; 32
    30e0:	80 93 b4 01 	sts	0x01B4, r24
    30e4:	85 e2       	ldi	r24, 0x25	; 37
    30e6:	80 93 b5 01 	sts	0x01B5, r24
    30ea:	80 91 b4 01 	lds	r24, 0x01B4
    30ee:	80 93 b3 01 	sts	0x01B3, r24
    30f2:	d2 c1       	rjmp	.+932    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==5 && autobusik_int[1]==0 && autobusik_int[2]==3){	//503
    30f4:	80 91 ba 01 	lds	r24, 0x01BA
    30f8:	85 30       	cpi	r24, 0x05	; 5
    30fa:	99 f4       	brne	.+38     	; 0x3122 <wprowadz_numer+0x836>
    30fc:	80 91 bb 01 	lds	r24, 0x01BB
    3100:	88 23       	and	r24, r24
    3102:	79 f4       	brne	.+30     	; 0x3122 <wprowadz_numer+0x836>
    3104:	80 91 bc 01 	lds	r24, 0x01BC
    3108:	83 30       	cpi	r24, 0x03	; 3
    310a:	59 f4       	brne	.+22     	; 0x3122 <wprowadz_numer+0x836>
		kierunek_A=44; kierunek_B=45; cyfra=kierunek_A;
    310c:	8c e2       	ldi	r24, 0x2C	; 44
    310e:	80 93 b4 01 	sts	0x01B4, r24
    3112:	8d e2       	ldi	r24, 0x2D	; 45
    3114:	80 93 b5 01 	sts	0x01B5, r24
    3118:	80 91 b4 01 	lds	r24, 0x01B4
    311c:	80 93 b3 01 	sts	0x01B3, r24
    3120:	bb c1       	rjmp	.+886    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==5 && autobusik_int[1]==1 && autobusik_int[2]==6){	//516
    3122:	80 91 ba 01 	lds	r24, 0x01BA
    3126:	85 30       	cpi	r24, 0x05	; 5
    3128:	99 f4       	brne	.+38     	; 0x3150 <wprowadz_numer+0x864>
    312a:	80 91 bb 01 	lds	r24, 0x01BB
    312e:	81 30       	cpi	r24, 0x01	; 1
    3130:	79 f4       	brne	.+30     	; 0x3150 <wprowadz_numer+0x864>
    3132:	80 91 bc 01 	lds	r24, 0x01BC
    3136:	86 30       	cpi	r24, 0x06	; 6
    3138:	59 f4       	brne	.+22     	; 0x3150 <wprowadz_numer+0x864>
		kierunek_A=36; kierunek_B=39; cyfra=kierunek_A;
    313a:	84 e2       	ldi	r24, 0x24	; 36
    313c:	80 93 b4 01 	sts	0x01B4, r24
    3140:	87 e2       	ldi	r24, 0x27	; 39
    3142:	80 93 b5 01 	sts	0x01B5, r24
    3146:	80 91 b4 01 	lds	r24, 0x01B4
    314a:	80 93 b3 01 	sts	0x01B3, r24
    314e:	a4 c1       	rjmp	.+840    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==5 && autobusik_int[1]==2 && autobusik_int[2]==3){	//523
    3150:	80 91 ba 01 	lds	r24, 0x01BA
    3154:	85 30       	cpi	r24, 0x05	; 5
    3156:	99 f4       	brne	.+38     	; 0x317e <wprowadz_numer+0x892>
    3158:	80 91 bb 01 	lds	r24, 0x01BB
    315c:	82 30       	cpi	r24, 0x02	; 2
    315e:	79 f4       	brne	.+30     	; 0x317e <wprowadz_numer+0x892>
    3160:	80 91 bc 01 	lds	r24, 0x01BC
    3164:	83 30       	cpi	r24, 0x03	; 3
    3166:	59 f4       	brne	.+22     	; 0x317e <wprowadz_numer+0x892>
		kierunek_A=30; kierunek_B=31; cyfra=kierunek_A;
    3168:	8e e1       	ldi	r24, 0x1E	; 30
    316a:	80 93 b4 01 	sts	0x01B4, r24
    316e:	8f e1       	ldi	r24, 0x1F	; 31
    3170:	80 93 b5 01 	sts	0x01B5, r24
    3174:	80 91 b4 01 	lds	r24, 0x01B4
    3178:	80 93 b3 01 	sts	0x01B3, r24
    317c:	8d c1       	rjmp	.+794    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else if (autobusik_int[0]==7 && autobusik_int[1]==1 && autobusik_int[2]==4){	//714
    317e:	80 91 ba 01 	lds	r24, 0x01BA
    3182:	87 30       	cpi	r24, 0x07	; 7
    3184:	99 f4       	brne	.+38     	; 0x31ac <wprowadz_numer+0x8c0>
    3186:	80 91 bb 01 	lds	r24, 0x01BB
    318a:	81 30       	cpi	r24, 0x01	; 1
    318c:	79 f4       	brne	.+30     	; 0x31ac <wprowadz_numer+0x8c0>
    318e:	80 91 bc 01 	lds	r24, 0x01BC
    3192:	84 30       	cpi	r24, 0x04	; 4
    3194:	59 f4       	brne	.+22     	; 0x31ac <wprowadz_numer+0x8c0>
		kierunek_A=32; kierunek_B=50; cyfra=kierunek_A;
    3196:	80 e2       	ldi	r24, 0x20	; 32
    3198:	80 93 b4 01 	sts	0x01B4, r24
    319c:	82 e3       	ldi	r24, 0x32	; 50
    319e:	80 93 b5 01 	sts	0x01B5, r24
    31a2:	80 91 b4 01 	lds	r24, 0x01B4
    31a6:	80 93 b3 01 	sts	0x01B3, r24
    31aa:	76 c1       	rjmp	.+748    	; 0x3498 <wprowadz_numer+0xbac>
	}
	else{
		lcd_locate(1,0); lcd_str("Bledny numer"); _delay_ms(2000);
    31ac:	81 e0       	ldi	r24, 0x01	; 1
    31ae:	60 e0       	ldi	r22, 0x00	; 0
    31b0:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    31b4:	8b e8       	ldi	r24, 0x8B	; 139
    31b6:	91 e0       	ldi	r25, 0x01	; 1
    31b8:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    31bc:	fe 01       	movw	r30, r28
    31be:	e1 5a       	subi	r30, 0xA1	; 161
    31c0:	ff 4f       	sbci	r31, 0xFF	; 255
    31c2:	80 e0       	ldi	r24, 0x00	; 0
    31c4:	90 e0       	ldi	r25, 0x00	; 0
    31c6:	aa ef       	ldi	r26, 0xFA	; 250
    31c8:	b4 e4       	ldi	r27, 0x44	; 68
    31ca:	80 83       	st	Z, r24
    31cc:	91 83       	std	Z+1, r25	; 0x01
    31ce:	a2 83       	std	Z+2, r26	; 0x02
    31d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31d2:	8e 01       	movw	r16, r28
    31d4:	05 5a       	subi	r16, 0xA5	; 165
    31d6:	1f 4f       	sbci	r17, 0xFF	; 255
    31d8:	fe 01       	movw	r30, r28
    31da:	e1 5a       	subi	r30, 0xA1	; 161
    31dc:	ff 4f       	sbci	r31, 0xFF	; 255
    31de:	60 81       	ld	r22, Z
    31e0:	71 81       	ldd	r23, Z+1	; 0x01
    31e2:	82 81       	ldd	r24, Z+2	; 0x02
    31e4:	93 81       	ldd	r25, Z+3	; 0x03
    31e6:	20 e0       	ldi	r18, 0x00	; 0
    31e8:	30 e0       	ldi	r19, 0x00	; 0
    31ea:	4a e7       	ldi	r20, 0x7A	; 122
    31ec:	55 e4       	ldi	r21, 0x45	; 69
    31ee:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    31f2:	dc 01       	movw	r26, r24
    31f4:	cb 01       	movw	r24, r22
    31f6:	f8 01       	movw	r30, r16
    31f8:	80 83       	st	Z, r24
    31fa:	91 83       	std	Z+1, r25	; 0x01
    31fc:	a2 83       	std	Z+2, r26	; 0x02
    31fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3200:	fe 01       	movw	r30, r28
    3202:	e5 5a       	subi	r30, 0xA5	; 165
    3204:	ff 4f       	sbci	r31, 0xFF	; 255
    3206:	60 81       	ld	r22, Z
    3208:	71 81       	ldd	r23, Z+1	; 0x01
    320a:	82 81       	ldd	r24, Z+2	; 0x02
    320c:	93 81       	ldd	r25, Z+3	; 0x03
    320e:	20 e0       	ldi	r18, 0x00	; 0
    3210:	30 e0       	ldi	r19, 0x00	; 0
    3212:	40 e8       	ldi	r20, 0x80	; 128
    3214:	5f e3       	ldi	r21, 0x3F	; 63
    3216:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    321a:	88 23       	and	r24, r24
    321c:	44 f4       	brge	.+16     	; 0x322e <wprowadz_numer+0x942>
		__ticks = 1;
    321e:	fe 01       	movw	r30, r28
    3220:	e7 5a       	subi	r30, 0xA7	; 167
    3222:	ff 4f       	sbci	r31, 0xFF	; 255
    3224:	81 e0       	ldi	r24, 0x01	; 1
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	91 83       	std	Z+1, r25	; 0x01
    322a:	80 83       	st	Z, r24
    322c:	64 c0       	rjmp	.+200    	; 0x32f6 <wprowadz_numer+0xa0a>
	else if (__tmp > 65535)
    322e:	fe 01       	movw	r30, r28
    3230:	e5 5a       	subi	r30, 0xA5	; 165
    3232:	ff 4f       	sbci	r31, 0xFF	; 255
    3234:	60 81       	ld	r22, Z
    3236:	71 81       	ldd	r23, Z+1	; 0x01
    3238:	82 81       	ldd	r24, Z+2	; 0x02
    323a:	93 81       	ldd	r25, Z+3	; 0x03
    323c:	20 e0       	ldi	r18, 0x00	; 0
    323e:	3f ef       	ldi	r19, 0xFF	; 255
    3240:	4f e7       	ldi	r20, 0x7F	; 127
    3242:	57 e4       	ldi	r21, 0x47	; 71
    3244:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    3248:	18 16       	cp	r1, r24
    324a:	0c f0       	brlt	.+2      	; 0x324e <wprowadz_numer+0x962>
    324c:	43 c0       	rjmp	.+134    	; 0x32d4 <wprowadz_numer+0x9e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    324e:	fe 01       	movw	r30, r28
    3250:	e1 5a       	subi	r30, 0xA1	; 161
    3252:	ff 4f       	sbci	r31, 0xFF	; 255
    3254:	60 81       	ld	r22, Z
    3256:	71 81       	ldd	r23, Z+1	; 0x01
    3258:	82 81       	ldd	r24, Z+2	; 0x02
    325a:	93 81       	ldd	r25, Z+3	; 0x03
    325c:	20 e0       	ldi	r18, 0x00	; 0
    325e:	30 e0       	ldi	r19, 0x00	; 0
    3260:	40 e2       	ldi	r20, 0x20	; 32
    3262:	51 e4       	ldi	r21, 0x41	; 65
    3264:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3268:	dc 01       	movw	r26, r24
    326a:	cb 01       	movw	r24, r22
    326c:	8e 01       	movw	r16, r28
    326e:	07 5a       	subi	r16, 0xA7	; 167
    3270:	1f 4f       	sbci	r17, 0xFF	; 255
    3272:	bc 01       	movw	r22, r24
    3274:	cd 01       	movw	r24, r26
    3276:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    327a:	dc 01       	movw	r26, r24
    327c:	cb 01       	movw	r24, r22
    327e:	f8 01       	movw	r30, r16
    3280:	91 83       	std	Z+1, r25	; 0x01
    3282:	80 83       	st	Z, r24
    3284:	1f c0       	rjmp	.+62     	; 0x32c4 <wprowadz_numer+0x9d8>
    3286:	fe 01       	movw	r30, r28
    3288:	e9 5a       	subi	r30, 0xA9	; 169
    328a:	ff 4f       	sbci	r31, 0xFF	; 255
    328c:	80 e9       	ldi	r24, 0x90	; 144
    328e:	91 e0       	ldi	r25, 0x01	; 1
    3290:	91 83       	std	Z+1, r25	; 0x01
    3292:	80 83       	st	Z, r24
    3294:	fe 01       	movw	r30, r28
    3296:	e9 5a       	subi	r30, 0xA9	; 169
    3298:	ff 4f       	sbci	r31, 0xFF	; 255
    329a:	80 81       	ld	r24, Z
    329c:	91 81       	ldd	r25, Z+1	; 0x01
    329e:	01 97       	sbiw	r24, 0x01	; 1
    32a0:	f1 f7       	brne	.-4      	; 0x329e <wprowadz_numer+0x9b2>
    32a2:	fe 01       	movw	r30, r28
    32a4:	e9 5a       	subi	r30, 0xA9	; 169
    32a6:	ff 4f       	sbci	r31, 0xFF	; 255
    32a8:	91 83       	std	Z+1, r25	; 0x01
    32aa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32ac:	de 01       	movw	r26, r28
    32ae:	a7 5a       	subi	r26, 0xA7	; 167
    32b0:	bf 4f       	sbci	r27, 0xFF	; 255
    32b2:	fe 01       	movw	r30, r28
    32b4:	e7 5a       	subi	r30, 0xA7	; 167
    32b6:	ff 4f       	sbci	r31, 0xFF	; 255
    32b8:	80 81       	ld	r24, Z
    32ba:	91 81       	ldd	r25, Z+1	; 0x01
    32bc:	01 97       	sbiw	r24, 0x01	; 1
    32be:	11 96       	adiw	r26, 0x01	; 1
    32c0:	9c 93       	st	X, r25
    32c2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32c4:	fe 01       	movw	r30, r28
    32c6:	e7 5a       	subi	r30, 0xA7	; 167
    32c8:	ff 4f       	sbci	r31, 0xFF	; 255
    32ca:	80 81       	ld	r24, Z
    32cc:	91 81       	ldd	r25, Z+1	; 0x01
    32ce:	00 97       	sbiw	r24, 0x00	; 0
    32d0:	d1 f6       	brne	.-76     	; 0x3286 <wprowadz_numer+0x99a>
    32d2:	27 c0       	rjmp	.+78     	; 0x3322 <wprowadz_numer+0xa36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32d4:	8e 01       	movw	r16, r28
    32d6:	07 5a       	subi	r16, 0xA7	; 167
    32d8:	1f 4f       	sbci	r17, 0xFF	; 255
    32da:	fe 01       	movw	r30, r28
    32dc:	e5 5a       	subi	r30, 0xA5	; 165
    32de:	ff 4f       	sbci	r31, 0xFF	; 255
    32e0:	60 81       	ld	r22, Z
    32e2:	71 81       	ldd	r23, Z+1	; 0x01
    32e4:	82 81       	ldd	r24, Z+2	; 0x02
    32e6:	93 81       	ldd	r25, Z+3	; 0x03
    32e8:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	f8 01       	movw	r30, r16
    32f2:	91 83       	std	Z+1, r25	; 0x01
    32f4:	80 83       	st	Z, r24
    32f6:	de 01       	movw	r26, r28
    32f8:	ab 5a       	subi	r26, 0xAB	; 171
    32fa:	bf 4f       	sbci	r27, 0xFF	; 255
    32fc:	fe 01       	movw	r30, r28
    32fe:	e7 5a       	subi	r30, 0xA7	; 167
    3300:	ff 4f       	sbci	r31, 0xFF	; 255
    3302:	80 81       	ld	r24, Z
    3304:	91 81       	ldd	r25, Z+1	; 0x01
    3306:	8d 93       	st	X+, r24
    3308:	9c 93       	st	X, r25
    330a:	fe 01       	movw	r30, r28
    330c:	eb 5a       	subi	r30, 0xAB	; 171
    330e:	ff 4f       	sbci	r31, 0xFF	; 255
    3310:	80 81       	ld	r24, Z
    3312:	91 81       	ldd	r25, Z+1	; 0x01
    3314:	01 97       	sbiw	r24, 0x01	; 1
    3316:	f1 f7       	brne	.-4      	; 0x3314 <wprowadz_numer+0xa28>
    3318:	fe 01       	movw	r30, r28
    331a:	eb 5a       	subi	r30, 0xAB	; 171
    331c:	ff 4f       	sbci	r31, 0xFF	; 255
    331e:	91 83       	std	Z+1, r25	; 0x01
    3320:	80 83       	st	Z, r24
		lcd_locate(1,0); lcd_str("Nacisnij Reset  "); _delay_ms(2000);
    3322:	81 e0       	ldi	r24, 0x01	; 1
    3324:	60 e0       	ldi	r22, 0x00	; 0
    3326:	0e 94 65 0f 	call	0x1eca	; 0x1eca <lcd_locate>
    332a:	88 e9       	ldi	r24, 0x98	; 152
    332c:	91 e0       	ldi	r25, 0x01	; 1
    332e:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <lcd_str>
    3332:	fe 01       	movw	r30, r28
    3334:	ef 5a       	subi	r30, 0xAF	; 175
    3336:	ff 4f       	sbci	r31, 0xFF	; 255
    3338:	80 e0       	ldi	r24, 0x00	; 0
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	aa ef       	ldi	r26, 0xFA	; 250
    333e:	b4 e4       	ldi	r27, 0x44	; 68
    3340:	80 83       	st	Z, r24
    3342:	91 83       	std	Z+1, r25	; 0x01
    3344:	a2 83       	std	Z+2, r26	; 0x02
    3346:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3348:	8e 01       	movw	r16, r28
    334a:	03 5b       	subi	r16, 0xB3	; 179
    334c:	1f 4f       	sbci	r17, 0xFF	; 255
    334e:	fe 01       	movw	r30, r28
    3350:	ef 5a       	subi	r30, 0xAF	; 175
    3352:	ff 4f       	sbci	r31, 0xFF	; 255
    3354:	60 81       	ld	r22, Z
    3356:	71 81       	ldd	r23, Z+1	; 0x01
    3358:	82 81       	ldd	r24, Z+2	; 0x02
    335a:	93 81       	ldd	r25, Z+3	; 0x03
    335c:	20 e0       	ldi	r18, 0x00	; 0
    335e:	30 e0       	ldi	r19, 0x00	; 0
    3360:	4a e7       	ldi	r20, 0x7A	; 122
    3362:	55 e4       	ldi	r21, 0x45	; 69
    3364:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3368:	dc 01       	movw	r26, r24
    336a:	cb 01       	movw	r24, r22
    336c:	f8 01       	movw	r30, r16
    336e:	80 83       	st	Z, r24
    3370:	91 83       	std	Z+1, r25	; 0x01
    3372:	a2 83       	std	Z+2, r26	; 0x02
    3374:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3376:	fe 01       	movw	r30, r28
    3378:	e3 5b       	subi	r30, 0xB3	; 179
    337a:	ff 4f       	sbci	r31, 0xFF	; 255
    337c:	60 81       	ld	r22, Z
    337e:	71 81       	ldd	r23, Z+1	; 0x01
    3380:	82 81       	ldd	r24, Z+2	; 0x02
    3382:	93 81       	ldd	r25, Z+3	; 0x03
    3384:	20 e0       	ldi	r18, 0x00	; 0
    3386:	30 e0       	ldi	r19, 0x00	; 0
    3388:	40 e8       	ldi	r20, 0x80	; 128
    338a:	5f e3       	ldi	r21, 0x3F	; 63
    338c:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    3390:	88 23       	and	r24, r24
    3392:	44 f4       	brge	.+16     	; 0x33a4 <wprowadz_numer+0xab8>
		__ticks = 1;
    3394:	fe 01       	movw	r30, r28
    3396:	e5 5b       	subi	r30, 0xB5	; 181
    3398:	ff 4f       	sbci	r31, 0xFF	; 255
    339a:	81 e0       	ldi	r24, 0x01	; 1
    339c:	90 e0       	ldi	r25, 0x00	; 0
    339e:	91 83       	std	Z+1, r25	; 0x01
    33a0:	80 83       	st	Z, r24
    33a2:	64 c0       	rjmp	.+200    	; 0x346c <wprowadz_numer+0xb80>
	else if (__tmp > 65535)
    33a4:	fe 01       	movw	r30, r28
    33a6:	e3 5b       	subi	r30, 0xB3	; 179
    33a8:	ff 4f       	sbci	r31, 0xFF	; 255
    33aa:	60 81       	ld	r22, Z
    33ac:	71 81       	ldd	r23, Z+1	; 0x01
    33ae:	82 81       	ldd	r24, Z+2	; 0x02
    33b0:	93 81       	ldd	r25, Z+3	; 0x03
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	3f ef       	ldi	r19, 0xFF	; 255
    33b6:	4f e7       	ldi	r20, 0x7F	; 127
    33b8:	57 e4       	ldi	r21, 0x47	; 71
    33ba:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    33be:	18 16       	cp	r1, r24
    33c0:	0c f0       	brlt	.+2      	; 0x33c4 <wprowadz_numer+0xad8>
    33c2:	43 c0       	rjmp	.+134    	; 0x344a <wprowadz_numer+0xb5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33c4:	fe 01       	movw	r30, r28
    33c6:	ef 5a       	subi	r30, 0xAF	; 175
    33c8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ca:	60 81       	ld	r22, Z
    33cc:	71 81       	ldd	r23, Z+1	; 0x01
    33ce:	82 81       	ldd	r24, Z+2	; 0x02
    33d0:	93 81       	ldd	r25, Z+3	; 0x03
    33d2:	20 e0       	ldi	r18, 0x00	; 0
    33d4:	30 e0       	ldi	r19, 0x00	; 0
    33d6:	40 e2       	ldi	r20, 0x20	; 32
    33d8:	51 e4       	ldi	r21, 0x41	; 65
    33da:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    33de:	dc 01       	movw	r26, r24
    33e0:	cb 01       	movw	r24, r22
    33e2:	8e 01       	movw	r16, r28
    33e4:	05 5b       	subi	r16, 0xB5	; 181
    33e6:	1f 4f       	sbci	r17, 0xFF	; 255
    33e8:	bc 01       	movw	r22, r24
    33ea:	cd 01       	movw	r24, r26
    33ec:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    33f0:	dc 01       	movw	r26, r24
    33f2:	cb 01       	movw	r24, r22
    33f4:	f8 01       	movw	r30, r16
    33f6:	91 83       	std	Z+1, r25	; 0x01
    33f8:	80 83       	st	Z, r24
    33fa:	1f c0       	rjmp	.+62     	; 0x343a <wprowadz_numer+0xb4e>
    33fc:	fe 01       	movw	r30, r28
    33fe:	e7 5b       	subi	r30, 0xB7	; 183
    3400:	ff 4f       	sbci	r31, 0xFF	; 255
    3402:	80 e9       	ldi	r24, 0x90	; 144
    3404:	91 e0       	ldi	r25, 0x01	; 1
    3406:	91 83       	std	Z+1, r25	; 0x01
    3408:	80 83       	st	Z, r24
    340a:	fe 01       	movw	r30, r28
    340c:	e7 5b       	subi	r30, 0xB7	; 183
    340e:	ff 4f       	sbci	r31, 0xFF	; 255
    3410:	80 81       	ld	r24, Z
    3412:	91 81       	ldd	r25, Z+1	; 0x01
    3414:	01 97       	sbiw	r24, 0x01	; 1
    3416:	f1 f7       	brne	.-4      	; 0x3414 <wprowadz_numer+0xb28>
    3418:	fe 01       	movw	r30, r28
    341a:	e7 5b       	subi	r30, 0xB7	; 183
    341c:	ff 4f       	sbci	r31, 0xFF	; 255
    341e:	91 83       	std	Z+1, r25	; 0x01
    3420:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3422:	de 01       	movw	r26, r28
    3424:	a5 5b       	subi	r26, 0xB5	; 181
    3426:	bf 4f       	sbci	r27, 0xFF	; 255
    3428:	fe 01       	movw	r30, r28
    342a:	e5 5b       	subi	r30, 0xB5	; 181
    342c:	ff 4f       	sbci	r31, 0xFF	; 255
    342e:	80 81       	ld	r24, Z
    3430:	91 81       	ldd	r25, Z+1	; 0x01
    3432:	01 97       	sbiw	r24, 0x01	; 1
    3434:	11 96       	adiw	r26, 0x01	; 1
    3436:	9c 93       	st	X, r25
    3438:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    343a:	fe 01       	movw	r30, r28
    343c:	e5 5b       	subi	r30, 0xB5	; 181
    343e:	ff 4f       	sbci	r31, 0xFF	; 255
    3440:	80 81       	ld	r24, Z
    3442:	91 81       	ldd	r25, Z+1	; 0x01
    3444:	00 97       	sbiw	r24, 0x00	; 0
    3446:	d1 f6       	brne	.-76     	; 0x33fc <wprowadz_numer+0xb10>
    3448:	27 c0       	rjmp	.+78     	; 0x3498 <wprowadz_numer+0xbac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    344a:	8e 01       	movw	r16, r28
    344c:	05 5b       	subi	r16, 0xB5	; 181
    344e:	1f 4f       	sbci	r17, 0xFF	; 255
    3450:	fe 01       	movw	r30, r28
    3452:	e3 5b       	subi	r30, 0xB3	; 179
    3454:	ff 4f       	sbci	r31, 0xFF	; 255
    3456:	60 81       	ld	r22, Z
    3458:	71 81       	ldd	r23, Z+1	; 0x01
    345a:	82 81       	ldd	r24, Z+2	; 0x02
    345c:	93 81       	ldd	r25, Z+3	; 0x03
    345e:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3462:	dc 01       	movw	r26, r24
    3464:	cb 01       	movw	r24, r22
    3466:	f8 01       	movw	r30, r16
    3468:	91 83       	std	Z+1, r25	; 0x01
    346a:	80 83       	st	Z, r24
    346c:	de 01       	movw	r26, r28
    346e:	a9 5b       	subi	r26, 0xB9	; 185
    3470:	bf 4f       	sbci	r27, 0xFF	; 255
    3472:	fe 01       	movw	r30, r28
    3474:	e5 5b       	subi	r30, 0xB5	; 181
    3476:	ff 4f       	sbci	r31, 0xFF	; 255
    3478:	80 81       	ld	r24, Z
    347a:	91 81       	ldd	r25, Z+1	; 0x01
    347c:	8d 93       	st	X+, r24
    347e:	9c 93       	st	X, r25
    3480:	fe 01       	movw	r30, r28
    3482:	e9 5b       	subi	r30, 0xB9	; 185
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	91 81       	ldd	r25, Z+1	; 0x01
    348a:	01 97       	sbiw	r24, 0x01	; 1
    348c:	f1 f7       	brne	.-4      	; 0x348a <wprowadz_numer+0xb9e>
    348e:	fe 01       	movw	r30, r28
    3490:	e9 5b       	subi	r30, 0xB9	; 185
    3492:	ff 4f       	sbci	r31, 0xFF	; 255
    3494:	91 83       	std	Z+1, r25	; 0x01
    3496:	80 83       	st	Z, r24
    3498:	fe 01       	movw	r30, r28
    349a:	ed 5b       	subi	r30, 0xBD	; 189
    349c:	ff 4f       	sbci	r31, 0xFF	; 255
    349e:	80 e0       	ldi	r24, 0x00	; 0
    34a0:	90 e0       	ldi	r25, 0x00	; 0
    34a2:	aa e7       	ldi	r26, 0x7A	; 122
    34a4:	b4 e4       	ldi	r27, 0x44	; 68
    34a6:	80 83       	st	Z, r24
    34a8:	91 83       	std	Z+1, r25	; 0x01
    34aa:	a2 83       	std	Z+2, r26	; 0x02
    34ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34ae:	8e 01       	movw	r16, r28
    34b0:	01 5c       	subi	r16, 0xC1	; 193
    34b2:	1f 4f       	sbci	r17, 0xFF	; 255
    34b4:	fe 01       	movw	r30, r28
    34b6:	ed 5b       	subi	r30, 0xBD	; 189
    34b8:	ff 4f       	sbci	r31, 0xFF	; 255
    34ba:	60 81       	ld	r22, Z
    34bc:	71 81       	ldd	r23, Z+1	; 0x01
    34be:	82 81       	ldd	r24, Z+2	; 0x02
    34c0:	93 81       	ldd	r25, Z+3	; 0x03
    34c2:	20 e0       	ldi	r18, 0x00	; 0
    34c4:	30 e0       	ldi	r19, 0x00	; 0
    34c6:	4a e7       	ldi	r20, 0x7A	; 122
    34c8:	55 e4       	ldi	r21, 0x45	; 69
    34ca:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    34ce:	dc 01       	movw	r26, r24
    34d0:	cb 01       	movw	r24, r22
    34d2:	f8 01       	movw	r30, r16
    34d4:	80 83       	st	Z, r24
    34d6:	91 83       	std	Z+1, r25	; 0x01
    34d8:	a2 83       	std	Z+2, r26	; 0x02
    34da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34dc:	fe 01       	movw	r30, r28
    34de:	ff 96       	adiw	r30, 0x3f	; 63
    34e0:	60 81       	ld	r22, Z
    34e2:	71 81       	ldd	r23, Z+1	; 0x01
    34e4:	82 81       	ldd	r24, Z+2	; 0x02
    34e6:	93 81       	ldd	r25, Z+3	; 0x03
    34e8:	20 e0       	ldi	r18, 0x00	; 0
    34ea:	30 e0       	ldi	r19, 0x00	; 0
    34ec:	40 e8       	ldi	r20, 0x80	; 128
    34ee:	5f e3       	ldi	r21, 0x3F	; 63
    34f0:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    34f4:	88 23       	and	r24, r24
    34f6:	2c f4       	brge	.+10     	; 0x3502 <wprowadz_numer+0xc16>
		__ticks = 1;
    34f8:	81 e0       	ldi	r24, 0x01	; 1
    34fa:	90 e0       	ldi	r25, 0x00	; 0
    34fc:	9e af       	std	Y+62, r25	; 0x3e
    34fe:	8d af       	std	Y+61, r24	; 0x3d
    3500:	46 c0       	rjmp	.+140    	; 0x358e <wprowadz_numer+0xca2>
	else if (__tmp > 65535)
    3502:	fe 01       	movw	r30, r28
    3504:	ff 96       	adiw	r30, 0x3f	; 63
    3506:	60 81       	ld	r22, Z
    3508:	71 81       	ldd	r23, Z+1	; 0x01
    350a:	82 81       	ldd	r24, Z+2	; 0x02
    350c:	93 81       	ldd	r25, Z+3	; 0x03
    350e:	20 e0       	ldi	r18, 0x00	; 0
    3510:	3f ef       	ldi	r19, 0xFF	; 255
    3512:	4f e7       	ldi	r20, 0x7F	; 127
    3514:	57 e4       	ldi	r21, 0x47	; 71
    3516:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    351a:	18 16       	cp	r1, r24
    351c:	64 f5       	brge	.+88     	; 0x3576 <wprowadz_numer+0xc8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    351e:	fe 01       	movw	r30, r28
    3520:	ed 5b       	subi	r30, 0xBD	; 189
    3522:	ff 4f       	sbci	r31, 0xFF	; 255
    3524:	60 81       	ld	r22, Z
    3526:	71 81       	ldd	r23, Z+1	; 0x01
    3528:	82 81       	ldd	r24, Z+2	; 0x02
    352a:	93 81       	ldd	r25, Z+3	; 0x03
    352c:	20 e0       	ldi	r18, 0x00	; 0
    352e:	30 e0       	ldi	r19, 0x00	; 0
    3530:	40 e2       	ldi	r20, 0x20	; 32
    3532:	51 e4       	ldi	r21, 0x41	; 65
    3534:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3538:	dc 01       	movw	r26, r24
    353a:	cb 01       	movw	r24, r22
    353c:	bc 01       	movw	r22, r24
    353e:	cd 01       	movw	r24, r26
    3540:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3544:	dc 01       	movw	r26, r24
    3546:	cb 01       	movw	r24, r22
    3548:	9e af       	std	Y+62, r25	; 0x3e
    354a:	8d af       	std	Y+61, r24	; 0x3d
    354c:	0f c0       	rjmp	.+30     	; 0x356c <wprowadz_numer+0xc80>
    354e:	80 e9       	ldi	r24, 0x90	; 144
    3550:	91 e0       	ldi	r25, 0x01	; 1
    3552:	9c af       	std	Y+60, r25	; 0x3c
    3554:	8b af       	std	Y+59, r24	; 0x3b
    3556:	8b ad       	ldd	r24, Y+59	; 0x3b
    3558:	9c ad       	ldd	r25, Y+60	; 0x3c
    355a:	01 97       	sbiw	r24, 0x01	; 1
    355c:	f1 f7       	brne	.-4      	; 0x355a <wprowadz_numer+0xc6e>
    355e:	9c af       	std	Y+60, r25	; 0x3c
    3560:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3562:	8d ad       	ldd	r24, Y+61	; 0x3d
    3564:	9e ad       	ldd	r25, Y+62	; 0x3e
    3566:	01 97       	sbiw	r24, 0x01	; 1
    3568:	9e af       	std	Y+62, r25	; 0x3e
    356a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    356c:	8d ad       	ldd	r24, Y+61	; 0x3d
    356e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3570:	00 97       	sbiw	r24, 0x00	; 0
    3572:	69 f7       	brne	.-38     	; 0x354e <wprowadz_numer+0xc62>
    3574:	16 c0       	rjmp	.+44     	; 0x35a2 <wprowadz_numer+0xcb6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3576:	fe 01       	movw	r30, r28
    3578:	ff 96       	adiw	r30, 0x3f	; 63
    357a:	60 81       	ld	r22, Z
    357c:	71 81       	ldd	r23, Z+1	; 0x01
    357e:	82 81       	ldd	r24, Z+2	; 0x02
    3580:	93 81       	ldd	r25, Z+3	; 0x03
    3582:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3586:	dc 01       	movw	r26, r24
    3588:	cb 01       	movw	r24, r22
    358a:	9e af       	std	Y+62, r25	; 0x3e
    358c:	8d af       	std	Y+61, r24	; 0x3d
    358e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3590:	9e ad       	ldd	r25, Y+62	; 0x3e
    3592:	9a af       	std	Y+58, r25	; 0x3a
    3594:	89 af       	std	Y+57, r24	; 0x39
    3596:	89 ad       	ldd	r24, Y+57	; 0x39
    3598:	9a ad       	ldd	r25, Y+58	; 0x3a
    359a:	01 97       	sbiw	r24, 0x01	; 1
    359c:	f1 f7       	brne	.-4      	; 0x359a <wprowadz_numer+0xcae>
    359e:	9a af       	std	Y+58, r25	; 0x3a
    35a0:	89 af       	std	Y+57, r24	; 0x39
	}
	_delay_ms(1000);
	wyswietl_numer(cyfra);
    35a2:	80 91 b3 01 	lds	r24, 0x01B3
    35a6:	88 2f       	mov	r24, r24
    35a8:	90 e0       	ldi	r25, 0x00	; 0
    35aa:	0e 94 77 01 	call	0x2ee	; 0x2ee <wyswietl_numer>
    35ae:	04 c2       	rjmp	.+1032   	; 0x39b8 <wprowadz_numer+0x10cc>
	while ( klawisz_ENT_pressed ){

		if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    35b0:	e3 e3       	ldi	r30, 0x33	; 51
    35b2:	f0 e0       	ldi	r31, 0x00	; 0
    35b4:	80 81       	ld	r24, Z
    35b6:	88 2f       	mov	r24, r24
    35b8:	90 e0       	ldi	r25, 0x00	; 0
    35ba:	81 70       	andi	r24, 0x01	; 1
    35bc:	90 70       	andi	r25, 0x00	; 0
    35be:	00 97       	sbiw	r24, 0x00	; 0
    35c0:	09 f0       	breq	.+2      	; 0x35c4 <wprowadz_numer+0xcd8>
    35c2:	f8 c0       	rjmp	.+496    	; 0x37b4 <wprowadz_numer+0xec8>
    35c4:	80 e0       	ldi	r24, 0x00	; 0
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	a0 ea       	ldi	r26, 0xA0	; 160
    35ca:	b2 e4       	ldi	r27, 0x42	; 66
    35cc:	8d ab       	std	Y+53, r24	; 0x35
    35ce:	9e ab       	std	Y+54, r25	; 0x36
    35d0:	af ab       	std	Y+55, r26	; 0x37
    35d2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35d4:	6d a9       	ldd	r22, Y+53	; 0x35
    35d6:	7e a9       	ldd	r23, Y+54	; 0x36
    35d8:	8f a9       	ldd	r24, Y+55	; 0x37
    35da:	98 ad       	ldd	r25, Y+56	; 0x38
    35dc:	20 e0       	ldi	r18, 0x00	; 0
    35de:	30 e0       	ldi	r19, 0x00	; 0
    35e0:	4a e7       	ldi	r20, 0x7A	; 122
    35e2:	55 e4       	ldi	r21, 0x45	; 69
    35e4:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    35e8:	dc 01       	movw	r26, r24
    35ea:	cb 01       	movw	r24, r22
    35ec:	89 ab       	std	Y+49, r24	; 0x31
    35ee:	9a ab       	std	Y+50, r25	; 0x32
    35f0:	ab ab       	std	Y+51, r26	; 0x33
    35f2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    35f4:	69 a9       	ldd	r22, Y+49	; 0x31
    35f6:	7a a9       	ldd	r23, Y+50	; 0x32
    35f8:	8b a9       	ldd	r24, Y+51	; 0x33
    35fa:	9c a9       	ldd	r25, Y+52	; 0x34
    35fc:	20 e0       	ldi	r18, 0x00	; 0
    35fe:	30 e0       	ldi	r19, 0x00	; 0
    3600:	40 e8       	ldi	r20, 0x80	; 128
    3602:	5f e3       	ldi	r21, 0x3F	; 63
    3604:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    3608:	88 23       	and	r24, r24
    360a:	2c f4       	brge	.+10     	; 0x3616 <wprowadz_numer+0xd2a>
		__ticks = 1;
    360c:	81 e0       	ldi	r24, 0x01	; 1
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	98 ab       	std	Y+48, r25	; 0x30
    3612:	8f a7       	std	Y+47, r24	; 0x2f
    3614:	3f c0       	rjmp	.+126    	; 0x3694 <wprowadz_numer+0xda8>
	else if (__tmp > 65535)
    3616:	69 a9       	ldd	r22, Y+49	; 0x31
    3618:	7a a9       	ldd	r23, Y+50	; 0x32
    361a:	8b a9       	ldd	r24, Y+51	; 0x33
    361c:	9c a9       	ldd	r25, Y+52	; 0x34
    361e:	20 e0       	ldi	r18, 0x00	; 0
    3620:	3f ef       	ldi	r19, 0xFF	; 255
    3622:	4f e7       	ldi	r20, 0x7F	; 127
    3624:	57 e4       	ldi	r21, 0x47	; 71
    3626:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    362a:	18 16       	cp	r1, r24
    362c:	4c f5       	brge	.+82     	; 0x3680 <wprowadz_numer+0xd94>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    362e:	6d a9       	ldd	r22, Y+53	; 0x35
    3630:	7e a9       	ldd	r23, Y+54	; 0x36
    3632:	8f a9       	ldd	r24, Y+55	; 0x37
    3634:	98 ad       	ldd	r25, Y+56	; 0x38
    3636:	20 e0       	ldi	r18, 0x00	; 0
    3638:	30 e0       	ldi	r19, 0x00	; 0
    363a:	40 e2       	ldi	r20, 0x20	; 32
    363c:	51 e4       	ldi	r21, 0x41	; 65
    363e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3642:	dc 01       	movw	r26, r24
    3644:	cb 01       	movw	r24, r22
    3646:	bc 01       	movw	r22, r24
    3648:	cd 01       	movw	r24, r26
    364a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    364e:	dc 01       	movw	r26, r24
    3650:	cb 01       	movw	r24, r22
    3652:	98 ab       	std	Y+48, r25	; 0x30
    3654:	8f a7       	std	Y+47, r24	; 0x2f
    3656:	0f c0       	rjmp	.+30     	; 0x3676 <wprowadz_numer+0xd8a>
    3658:	80 e9       	ldi	r24, 0x90	; 144
    365a:	91 e0       	ldi	r25, 0x01	; 1
    365c:	9e a7       	std	Y+46, r25	; 0x2e
    365e:	8d a7       	std	Y+45, r24	; 0x2d
    3660:	8d a5       	ldd	r24, Y+45	; 0x2d
    3662:	9e a5       	ldd	r25, Y+46	; 0x2e
    3664:	01 97       	sbiw	r24, 0x01	; 1
    3666:	f1 f7       	brne	.-4      	; 0x3664 <wprowadz_numer+0xd78>
    3668:	9e a7       	std	Y+46, r25	; 0x2e
    366a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    366c:	8f a5       	ldd	r24, Y+47	; 0x2f
    366e:	98 a9       	ldd	r25, Y+48	; 0x30
    3670:	01 97       	sbiw	r24, 0x01	; 1
    3672:	98 ab       	std	Y+48, r25	; 0x30
    3674:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3676:	8f a5       	ldd	r24, Y+47	; 0x2f
    3678:	98 a9       	ldd	r25, Y+48	; 0x30
    367a:	00 97       	sbiw	r24, 0x00	; 0
    367c:	69 f7       	brne	.-38     	; 0x3658 <wprowadz_numer+0xd6c>
    367e:	14 c0       	rjmp	.+40     	; 0x36a8 <wprowadz_numer+0xdbc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3680:	69 a9       	ldd	r22, Y+49	; 0x31
    3682:	7a a9       	ldd	r23, Y+50	; 0x32
    3684:	8b a9       	ldd	r24, Y+51	; 0x33
    3686:	9c a9       	ldd	r25, Y+52	; 0x34
    3688:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    368c:	dc 01       	movw	r26, r24
    368e:	cb 01       	movw	r24, r22
    3690:	98 ab       	std	Y+48, r25	; 0x30
    3692:	8f a7       	std	Y+47, r24	; 0x2f
    3694:	8f a5       	ldd	r24, Y+47	; 0x2f
    3696:	98 a9       	ldd	r25, Y+48	; 0x30
    3698:	9c a7       	std	Y+44, r25	; 0x2c
    369a:	8b a7       	std	Y+43, r24	; 0x2b
    369c:	8b a5       	ldd	r24, Y+43	; 0x2b
    369e:	9c a5       	ldd	r25, Y+44	; 0x2c
    36a0:	01 97       	sbiw	r24, 0x01	; 1
    36a2:	f1 f7       	brne	.-4      	; 0x36a0 <wprowadz_numer+0xdb4>
    36a4:	9c a7       	std	Y+44, r25	; 0x2c
    36a6:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(80);
			if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    36a8:	e3 e3       	ldi	r30, 0x33	; 51
    36aa:	f0 e0       	ldi	r31, 0x00	; 0
    36ac:	80 81       	ld	r24, Z
    36ae:	88 2f       	mov	r24, r24
    36b0:	90 e0       	ldi	r25, 0x00	; 0
    36b2:	81 70       	andi	r24, 0x01	; 1
    36b4:	90 70       	andi	r25, 0x00	; 0
    36b6:	00 97       	sbiw	r24, 0x00	; 0
    36b8:	09 f0       	breq	.+2      	; 0x36bc <wprowadz_numer+0xdd0>
    36ba:	7c c0       	rjmp	.+248    	; 0x37b4 <wprowadz_numer+0xec8>
				cyfra = kierunek_B;
    36bc:	80 91 b5 01 	lds	r24, 0x01B5
    36c0:	80 93 b3 01 	sts	0x01B3, r24
				wyswietl_numer (cyfra);
    36c4:	80 91 b3 01 	lds	r24, 0x01B3
    36c8:	88 2f       	mov	r24, r24
    36ca:	90 e0       	ldi	r25, 0x00	; 0
    36cc:	0e 94 77 01 	call	0x2ee	; 0x2ee <wyswietl_numer>
    36d0:	80 e0       	ldi	r24, 0x00	; 0
    36d2:	90 e0       	ldi	r25, 0x00	; 0
    36d4:	a8 e4       	ldi	r26, 0x48	; 72
    36d6:	b3 e4       	ldi	r27, 0x43	; 67
    36d8:	8f a3       	std	Y+39, r24	; 0x27
    36da:	98 a7       	std	Y+40, r25	; 0x28
    36dc:	a9 a7       	std	Y+41, r26	; 0x29
    36de:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36e0:	6f a1       	ldd	r22, Y+39	; 0x27
    36e2:	78 a5       	ldd	r23, Y+40	; 0x28
    36e4:	89 a5       	ldd	r24, Y+41	; 0x29
    36e6:	9a a5       	ldd	r25, Y+42	; 0x2a
    36e8:	20 e0       	ldi	r18, 0x00	; 0
    36ea:	30 e0       	ldi	r19, 0x00	; 0
    36ec:	4a e7       	ldi	r20, 0x7A	; 122
    36ee:	55 e4       	ldi	r21, 0x45	; 69
    36f0:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    36f4:	dc 01       	movw	r26, r24
    36f6:	cb 01       	movw	r24, r22
    36f8:	8b a3       	std	Y+35, r24	; 0x23
    36fa:	9c a3       	std	Y+36, r25	; 0x24
    36fc:	ad a3       	std	Y+37, r26	; 0x25
    36fe:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3700:	6b a1       	ldd	r22, Y+35	; 0x23
    3702:	7c a1       	ldd	r23, Y+36	; 0x24
    3704:	8d a1       	ldd	r24, Y+37	; 0x25
    3706:	9e a1       	ldd	r25, Y+38	; 0x26
    3708:	20 e0       	ldi	r18, 0x00	; 0
    370a:	30 e0       	ldi	r19, 0x00	; 0
    370c:	40 e8       	ldi	r20, 0x80	; 128
    370e:	5f e3       	ldi	r21, 0x3F	; 63
    3710:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    3714:	88 23       	and	r24, r24
    3716:	2c f4       	brge	.+10     	; 0x3722 <wprowadz_numer+0xe36>
		__ticks = 1;
    3718:	81 e0       	ldi	r24, 0x01	; 1
    371a:	90 e0       	ldi	r25, 0x00	; 0
    371c:	9a a3       	std	Y+34, r25	; 0x22
    371e:	89 a3       	std	Y+33, r24	; 0x21
    3720:	3f c0       	rjmp	.+126    	; 0x37a0 <wprowadz_numer+0xeb4>
	else if (__tmp > 65535)
    3722:	6b a1       	ldd	r22, Y+35	; 0x23
    3724:	7c a1       	ldd	r23, Y+36	; 0x24
    3726:	8d a1       	ldd	r24, Y+37	; 0x25
    3728:	9e a1       	ldd	r25, Y+38	; 0x26
    372a:	20 e0       	ldi	r18, 0x00	; 0
    372c:	3f ef       	ldi	r19, 0xFF	; 255
    372e:	4f e7       	ldi	r20, 0x7F	; 127
    3730:	57 e4       	ldi	r21, 0x47	; 71
    3732:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    3736:	18 16       	cp	r1, r24
    3738:	4c f5       	brge	.+82     	; 0x378c <wprowadz_numer+0xea0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    373a:	6f a1       	ldd	r22, Y+39	; 0x27
    373c:	78 a5       	ldd	r23, Y+40	; 0x28
    373e:	89 a5       	ldd	r24, Y+41	; 0x29
    3740:	9a a5       	ldd	r25, Y+42	; 0x2a
    3742:	20 e0       	ldi	r18, 0x00	; 0
    3744:	30 e0       	ldi	r19, 0x00	; 0
    3746:	40 e2       	ldi	r20, 0x20	; 32
    3748:	51 e4       	ldi	r21, 0x41	; 65
    374a:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    374e:	dc 01       	movw	r26, r24
    3750:	cb 01       	movw	r24, r22
    3752:	bc 01       	movw	r22, r24
    3754:	cd 01       	movw	r24, r26
    3756:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    375a:	dc 01       	movw	r26, r24
    375c:	cb 01       	movw	r24, r22
    375e:	9a a3       	std	Y+34, r25	; 0x22
    3760:	89 a3       	std	Y+33, r24	; 0x21
    3762:	0f c0       	rjmp	.+30     	; 0x3782 <wprowadz_numer+0xe96>
    3764:	80 e9       	ldi	r24, 0x90	; 144
    3766:	91 e0       	ldi	r25, 0x01	; 1
    3768:	98 a3       	std	Y+32, r25	; 0x20
    376a:	8f 8f       	std	Y+31, r24	; 0x1f
    376c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    376e:	98 a1       	ldd	r25, Y+32	; 0x20
    3770:	01 97       	sbiw	r24, 0x01	; 1
    3772:	f1 f7       	brne	.-4      	; 0x3770 <wprowadz_numer+0xe84>
    3774:	98 a3       	std	Y+32, r25	; 0x20
    3776:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3778:	89 a1       	ldd	r24, Y+33	; 0x21
    377a:	9a a1       	ldd	r25, Y+34	; 0x22
    377c:	01 97       	sbiw	r24, 0x01	; 1
    377e:	9a a3       	std	Y+34, r25	; 0x22
    3780:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3782:	89 a1       	ldd	r24, Y+33	; 0x21
    3784:	9a a1       	ldd	r25, Y+34	; 0x22
    3786:	00 97       	sbiw	r24, 0x00	; 0
    3788:	69 f7       	brne	.-38     	; 0x3764 <wprowadz_numer+0xe78>
    378a:	14 c0       	rjmp	.+40     	; 0x37b4 <wprowadz_numer+0xec8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    378c:	6b a1       	ldd	r22, Y+35	; 0x23
    378e:	7c a1       	ldd	r23, Y+36	; 0x24
    3790:	8d a1       	ldd	r24, Y+37	; 0x25
    3792:	9e a1       	ldd	r25, Y+38	; 0x26
    3794:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3798:	dc 01       	movw	r26, r24
    379a:	cb 01       	movw	r24, r22
    379c:	9a a3       	std	Y+34, r25	; 0x22
    379e:	89 a3       	std	Y+33, r24	; 0x21
    37a0:	89 a1       	ldd	r24, Y+33	; 0x21
    37a2:	9a a1       	ldd	r25, Y+34	; 0x22
    37a4:	9e 8f       	std	Y+30, r25	; 0x1e
    37a6:	8d 8f       	std	Y+29, r24	; 0x1d
    37a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    37aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    37ac:	01 97       	sbiw	r24, 0x01	; 1
    37ae:	f1 f7       	brne	.-4      	; 0x37ac <wprowadz_numer+0xec0>
    37b0:	9e 8f       	std	Y+30, r25	; 0x1e
    37b2:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(200);
			}
		}
		if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    37b4:	e3 e3       	ldi	r30, 0x33	; 51
    37b6:	f0 e0       	ldi	r31, 0x00	; 0
    37b8:	80 81       	ld	r24, Z
    37ba:	88 2f       	mov	r24, r24
    37bc:	90 e0       	ldi	r25, 0x00	; 0
    37be:	81 70       	andi	r24, 0x01	; 1
    37c0:	90 70       	andi	r25, 0x00	; 0
    37c2:	00 97       	sbiw	r24, 0x00	; 0
    37c4:	09 f0       	breq	.+2      	; 0x37c8 <wprowadz_numer+0xedc>
    37c6:	f8 c0       	rjmp	.+496    	; 0x39b8 <wprowadz_numer+0x10cc>
    37c8:	80 e0       	ldi	r24, 0x00	; 0
    37ca:	90 e0       	ldi	r25, 0x00	; 0
    37cc:	a0 ea       	ldi	r26, 0xA0	; 160
    37ce:	b2 e4       	ldi	r27, 0x42	; 66
    37d0:	89 8f       	std	Y+25, r24	; 0x19
    37d2:	9a 8f       	std	Y+26, r25	; 0x1a
    37d4:	ab 8f       	std	Y+27, r26	; 0x1b
    37d6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37d8:	69 8d       	ldd	r22, Y+25	; 0x19
    37da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    37dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    37de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    37e0:	20 e0       	ldi	r18, 0x00	; 0
    37e2:	30 e0       	ldi	r19, 0x00	; 0
    37e4:	4a e7       	ldi	r20, 0x7A	; 122
    37e6:	55 e4       	ldi	r21, 0x45	; 69
    37e8:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    37ec:	dc 01       	movw	r26, r24
    37ee:	cb 01       	movw	r24, r22
    37f0:	8d 8b       	std	Y+21, r24	; 0x15
    37f2:	9e 8b       	std	Y+22, r25	; 0x16
    37f4:	af 8b       	std	Y+23, r26	; 0x17
    37f6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    37f8:	6d 89       	ldd	r22, Y+21	; 0x15
    37fa:	7e 89       	ldd	r23, Y+22	; 0x16
    37fc:	8f 89       	ldd	r24, Y+23	; 0x17
    37fe:	98 8d       	ldd	r25, Y+24	; 0x18
    3800:	20 e0       	ldi	r18, 0x00	; 0
    3802:	30 e0       	ldi	r19, 0x00	; 0
    3804:	40 e8       	ldi	r20, 0x80	; 128
    3806:	5f e3       	ldi	r21, 0x3F	; 63
    3808:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    380c:	88 23       	and	r24, r24
    380e:	2c f4       	brge	.+10     	; 0x381a <wprowadz_numer+0xf2e>
		__ticks = 1;
    3810:	81 e0       	ldi	r24, 0x01	; 1
    3812:	90 e0       	ldi	r25, 0x00	; 0
    3814:	9c 8b       	std	Y+20, r25	; 0x14
    3816:	8b 8b       	std	Y+19, r24	; 0x13
    3818:	3f c0       	rjmp	.+126    	; 0x3898 <wprowadz_numer+0xfac>
	else if (__tmp > 65535)
    381a:	6d 89       	ldd	r22, Y+21	; 0x15
    381c:	7e 89       	ldd	r23, Y+22	; 0x16
    381e:	8f 89       	ldd	r24, Y+23	; 0x17
    3820:	98 8d       	ldd	r25, Y+24	; 0x18
    3822:	20 e0       	ldi	r18, 0x00	; 0
    3824:	3f ef       	ldi	r19, 0xFF	; 255
    3826:	4f e7       	ldi	r20, 0x7F	; 127
    3828:	57 e4       	ldi	r21, 0x47	; 71
    382a:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    382e:	18 16       	cp	r1, r24
    3830:	4c f5       	brge	.+82     	; 0x3884 <wprowadz_numer+0xf98>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3832:	69 8d       	ldd	r22, Y+25	; 0x19
    3834:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3836:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3838:	9c 8d       	ldd	r25, Y+28	; 0x1c
    383a:	20 e0       	ldi	r18, 0x00	; 0
    383c:	30 e0       	ldi	r19, 0x00	; 0
    383e:	40 e2       	ldi	r20, 0x20	; 32
    3840:	51 e4       	ldi	r21, 0x41	; 65
    3842:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3846:	dc 01       	movw	r26, r24
    3848:	cb 01       	movw	r24, r22
    384a:	bc 01       	movw	r22, r24
    384c:	cd 01       	movw	r24, r26
    384e:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3852:	dc 01       	movw	r26, r24
    3854:	cb 01       	movw	r24, r22
    3856:	9c 8b       	std	Y+20, r25	; 0x14
    3858:	8b 8b       	std	Y+19, r24	; 0x13
    385a:	0f c0       	rjmp	.+30     	; 0x387a <wprowadz_numer+0xf8e>
    385c:	80 e9       	ldi	r24, 0x90	; 144
    385e:	91 e0       	ldi	r25, 0x01	; 1
    3860:	9a 8b       	std	Y+18, r25	; 0x12
    3862:	89 8b       	std	Y+17, r24	; 0x11
    3864:	89 89       	ldd	r24, Y+17	; 0x11
    3866:	9a 89       	ldd	r25, Y+18	; 0x12
    3868:	01 97       	sbiw	r24, 0x01	; 1
    386a:	f1 f7       	brne	.-4      	; 0x3868 <wprowadz_numer+0xf7c>
    386c:	9a 8b       	std	Y+18, r25	; 0x12
    386e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3870:	8b 89       	ldd	r24, Y+19	; 0x13
    3872:	9c 89       	ldd	r25, Y+20	; 0x14
    3874:	01 97       	sbiw	r24, 0x01	; 1
    3876:	9c 8b       	std	Y+20, r25	; 0x14
    3878:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    387a:	8b 89       	ldd	r24, Y+19	; 0x13
    387c:	9c 89       	ldd	r25, Y+20	; 0x14
    387e:	00 97       	sbiw	r24, 0x00	; 0
    3880:	69 f7       	brne	.-38     	; 0x385c <wprowadz_numer+0xf70>
    3882:	14 c0       	rjmp	.+40     	; 0x38ac <wprowadz_numer+0xfc0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3884:	6d 89       	ldd	r22, Y+21	; 0x15
    3886:	7e 89       	ldd	r23, Y+22	; 0x16
    3888:	8f 89       	ldd	r24, Y+23	; 0x17
    388a:	98 8d       	ldd	r25, Y+24	; 0x18
    388c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    3890:	dc 01       	movw	r26, r24
    3892:	cb 01       	movw	r24, r22
    3894:	9c 8b       	std	Y+20, r25	; 0x14
    3896:	8b 8b       	std	Y+19, r24	; 0x13
    3898:	8b 89       	ldd	r24, Y+19	; 0x13
    389a:	9c 89       	ldd	r25, Y+20	; 0x14
    389c:	98 8b       	std	Y+16, r25	; 0x10
    389e:	8f 87       	std	Y+15, r24	; 0x0f
    38a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    38a2:	98 89       	ldd	r25, Y+16	; 0x10
    38a4:	01 97       	sbiw	r24, 0x01	; 1
    38a6:	f1 f7       	brne	.-4      	; 0x38a4 <wprowadz_numer+0xfb8>
    38a8:	98 8b       	std	Y+16, r25	; 0x10
    38aa:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(80);
			if (! ( KEY_PIN & ( klawisz_NUM ) ) ){
    38ac:	e3 e3       	ldi	r30, 0x33	; 51
    38ae:	f0 e0       	ldi	r31, 0x00	; 0
    38b0:	80 81       	ld	r24, Z
    38b2:	88 2f       	mov	r24, r24
    38b4:	90 e0       	ldi	r25, 0x00	; 0
    38b6:	81 70       	andi	r24, 0x01	; 1
    38b8:	90 70       	andi	r25, 0x00	; 0
    38ba:	00 97       	sbiw	r24, 0x00	; 0
    38bc:	09 f0       	breq	.+2      	; 0x38c0 <wprowadz_numer+0xfd4>
    38be:	7c c0       	rjmp	.+248    	; 0x39b8 <wprowadz_numer+0x10cc>
				cyfra = kierunek_A;
    38c0:	80 91 b4 01 	lds	r24, 0x01B4
    38c4:	80 93 b3 01 	sts	0x01B3, r24
				wyswietl_numer (cyfra);
    38c8:	80 91 b3 01 	lds	r24, 0x01B3
    38cc:	88 2f       	mov	r24, r24
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	0e 94 77 01 	call	0x2ee	; 0x2ee <wyswietl_numer>
    38d4:	80 e0       	ldi	r24, 0x00	; 0
    38d6:	90 e0       	ldi	r25, 0x00	; 0
    38d8:	a8 e4       	ldi	r26, 0x48	; 72
    38da:	b3 e4       	ldi	r27, 0x43	; 67
    38dc:	8b 87       	std	Y+11, r24	; 0x0b
    38de:	9c 87       	std	Y+12, r25	; 0x0c
    38e0:	ad 87       	std	Y+13, r26	; 0x0d
    38e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    38e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    38e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    38ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    38ec:	20 e0       	ldi	r18, 0x00	; 0
    38ee:	30 e0       	ldi	r19, 0x00	; 0
    38f0:	4a e7       	ldi	r20, 0x7A	; 122
    38f2:	55 e4       	ldi	r21, 0x45	; 69
    38f4:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    38f8:	dc 01       	movw	r26, r24
    38fa:	cb 01       	movw	r24, r22
    38fc:	8f 83       	std	Y+7, r24	; 0x07
    38fe:	98 87       	std	Y+8, r25	; 0x08
    3900:	a9 87       	std	Y+9, r26	; 0x09
    3902:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3904:	6f 81       	ldd	r22, Y+7	; 0x07
    3906:	78 85       	ldd	r23, Y+8	; 0x08
    3908:	89 85       	ldd	r24, Y+9	; 0x09
    390a:	9a 85       	ldd	r25, Y+10	; 0x0a
    390c:	20 e0       	ldi	r18, 0x00	; 0
    390e:	30 e0       	ldi	r19, 0x00	; 0
    3910:	40 e8       	ldi	r20, 0x80	; 128
    3912:	5f e3       	ldi	r21, 0x3F	; 63
    3914:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__ltsf2>
    3918:	88 23       	and	r24, r24
    391a:	2c f4       	brge	.+10     	; 0x3926 <wprowadz_numer+0x103a>
		__ticks = 1;
    391c:	81 e0       	ldi	r24, 0x01	; 1
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	9e 83       	std	Y+6, r25	; 0x06
    3922:	8d 83       	std	Y+5, r24	; 0x05
    3924:	3f c0       	rjmp	.+126    	; 0x39a4 <wprowadz_numer+0x10b8>
	else if (__tmp > 65535)
    3926:	6f 81       	ldd	r22, Y+7	; 0x07
    3928:	78 85       	ldd	r23, Y+8	; 0x08
    392a:	89 85       	ldd	r24, Y+9	; 0x09
    392c:	9a 85       	ldd	r25, Y+10	; 0x0a
    392e:	20 e0       	ldi	r18, 0x00	; 0
    3930:	3f ef       	ldi	r19, 0xFF	; 255
    3932:	4f e7       	ldi	r20, 0x7F	; 127
    3934:	57 e4       	ldi	r21, 0x47	; 71
    3936:	0e 94 75 20 	call	0x40ea	; 0x40ea <__gtsf2>
    393a:	18 16       	cp	r1, r24
    393c:	4c f5       	brge	.+82     	; 0x3990 <wprowadz_numer+0x10a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    393e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3940:	7c 85       	ldd	r23, Y+12	; 0x0c
    3942:	8d 85       	ldd	r24, Y+13	; 0x0d
    3944:	9e 85       	ldd	r25, Y+14	; 0x0e
    3946:	20 e0       	ldi	r18, 0x00	; 0
    3948:	30 e0       	ldi	r19, 0x00	; 0
    394a:	40 e2       	ldi	r20, 0x20	; 32
    394c:	51 e4       	ldi	r21, 0x41	; 65
    394e:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <__mulsf3>
    3952:	dc 01       	movw	r26, r24
    3954:	cb 01       	movw	r24, r22
    3956:	bc 01       	movw	r22, r24
    3958:	cd 01       	movw	r24, r26
    395a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    395e:	dc 01       	movw	r26, r24
    3960:	cb 01       	movw	r24, r22
    3962:	9e 83       	std	Y+6, r25	; 0x06
    3964:	8d 83       	std	Y+5, r24	; 0x05
    3966:	0f c0       	rjmp	.+30     	; 0x3986 <wprowadz_numer+0x109a>
    3968:	80 e9       	ldi	r24, 0x90	; 144
    396a:	91 e0       	ldi	r25, 0x01	; 1
    396c:	9c 83       	std	Y+4, r25	; 0x04
    396e:	8b 83       	std	Y+3, r24	; 0x03
    3970:	8b 81       	ldd	r24, Y+3	; 0x03
    3972:	9c 81       	ldd	r25, Y+4	; 0x04
    3974:	01 97       	sbiw	r24, 0x01	; 1
    3976:	f1 f7       	brne	.-4      	; 0x3974 <wprowadz_numer+0x1088>
    3978:	9c 83       	std	Y+4, r25	; 0x04
    397a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    397c:	8d 81       	ldd	r24, Y+5	; 0x05
    397e:	9e 81       	ldd	r25, Y+6	; 0x06
    3980:	01 97       	sbiw	r24, 0x01	; 1
    3982:	9e 83       	std	Y+6, r25	; 0x06
    3984:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3986:	8d 81       	ldd	r24, Y+5	; 0x05
    3988:	9e 81       	ldd	r25, Y+6	; 0x06
    398a:	00 97       	sbiw	r24, 0x00	; 0
    398c:	69 f7       	brne	.-38     	; 0x3968 <wprowadz_numer+0x107c>
    398e:	14 c0       	rjmp	.+40     	; 0x39b8 <wprowadz_numer+0x10cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3990:	6f 81       	ldd	r22, Y+7	; 0x07
    3992:	78 85       	ldd	r23, Y+8	; 0x08
    3994:	89 85       	ldd	r24, Y+9	; 0x09
    3996:	9a 85       	ldd	r25, Y+10	; 0x0a
    3998:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <__fixunssfsi>
    399c:	dc 01       	movw	r26, r24
    399e:	cb 01       	movw	r24, r22
    39a0:	9e 83       	std	Y+6, r25	; 0x06
    39a2:	8d 83       	std	Y+5, r24	; 0x05
    39a4:	8d 81       	ldd	r24, Y+5	; 0x05
    39a6:	9e 81       	ldd	r25, Y+6	; 0x06
    39a8:	9a 83       	std	Y+2, r25	; 0x02
    39aa:	89 83       	std	Y+1, r24	; 0x01
    39ac:	89 81       	ldd	r24, Y+1	; 0x01
    39ae:	9a 81       	ldd	r25, Y+2	; 0x02
    39b0:	01 97       	sbiw	r24, 0x01	; 1
    39b2:	f1 f7       	brne	.-4      	; 0x39b0 <wprowadz_numer+0x10c4>
    39b4:	9a 83       	std	Y+2, r25	; 0x02
    39b6:	89 83       	std	Y+1, r24	; 0x01
		lcd_locate(1,0); lcd_str("Bledny numer"); _delay_ms(2000);
		lcd_locate(1,0); lcd_str("Nacisnij Reset  "); _delay_ms(2000);
	}
	_delay_ms(1000);
	wyswietl_numer(cyfra);
	while ( klawisz_ENT_pressed ){
    39b8:	e3 e3       	ldi	r30, 0x33	; 51
    39ba:	f0 e0       	ldi	r31, 0x00	; 0
    39bc:	80 81       	ld	r24, Z
    39be:	88 2f       	mov	r24, r24
    39c0:	90 e0       	ldi	r25, 0x00	; 0
    39c2:	82 70       	andi	r24, 0x02	; 2
    39c4:	90 70       	andi	r25, 0x00	; 0
    39c6:	00 97       	sbiw	r24, 0x00	; 0
    39c8:	09 f0       	breq	.+2      	; 0x39cc <wprowadz_numer+0x10e0>
    39ca:	f2 cd       	rjmp	.-1052   	; 0x35b0 <wprowadz_numer+0xcc4>
				wyswietl_numer (cyfra);
				_delay_ms(200);
			}
		}
	}
	autobusik_int[3] = cyfra+48;
    39cc:	80 91 b3 01 	lds	r24, 0x01B3
    39d0:	80 5d       	subi	r24, 0xD0	; 208
    39d2:	80 93 bd 01 	sts	0x01BD, r24

	return autobusik_int;
    39d6:	8a eb       	ldi	r24, 0xBA	; 186
    39d8:	91 e0       	ldi	r25, 0x01	; 1
}
    39da:	c4 57       	subi	r28, 0x74	; 116
    39dc:	df 4f       	sbci	r29, 0xFF	; 255
    39de:	0f b6       	in	r0, 0x3f	; 63
    39e0:	f8 94       	cli
    39e2:	de bf       	out	0x3e, r29	; 62
    39e4:	0f be       	out	0x3f, r0	; 63
    39e6:	cd bf       	out	0x3d, r28	; 61
    39e8:	cf 91       	pop	r28
    39ea:	df 91       	pop	r29
    39ec:	1f 91       	pop	r17
    39ee:	0f 91       	pop	r16
    39f0:	08 95       	ret

000039f2 <__fixunssfsi>:
    39f2:	ef 92       	push	r14
    39f4:	ff 92       	push	r15
    39f6:	0f 93       	push	r16
    39f8:	1f 93       	push	r17
    39fa:	7b 01       	movw	r14, r22
    39fc:	8c 01       	movw	r16, r24
    39fe:	20 e0       	ldi	r18, 0x00	; 0
    3a00:	30 e0       	ldi	r19, 0x00	; 0
    3a02:	40 e0       	ldi	r20, 0x00	; 0
    3a04:	5f e4       	ldi	r21, 0x4F	; 79
    3a06:	0e 94 a5 20 	call	0x414a	; 0x414a <__gesf2>
    3a0a:	88 23       	and	r24, r24
    3a0c:	8c f0       	brlt	.+34     	; 0x3a30 <__fixunssfsi+0x3e>
    3a0e:	c8 01       	movw	r24, r16
    3a10:	b7 01       	movw	r22, r14
    3a12:	20 e0       	ldi	r18, 0x00	; 0
    3a14:	30 e0       	ldi	r19, 0x00	; 0
    3a16:	40 e0       	ldi	r20, 0x00	; 0
    3a18:	5f e4       	ldi	r21, 0x4F	; 79
    3a1a:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <__subsf3>
    3a1e:	0e 94 05 21 	call	0x420a	; 0x420a <__fixsfsi>
    3a22:	9b 01       	movw	r18, r22
    3a24:	ac 01       	movw	r20, r24
    3a26:	20 50       	subi	r18, 0x00	; 0
    3a28:	30 40       	sbci	r19, 0x00	; 0
    3a2a:	40 40       	sbci	r20, 0x00	; 0
    3a2c:	50 48       	sbci	r21, 0x80	; 128
    3a2e:	06 c0       	rjmp	.+12     	; 0x3a3c <__fixunssfsi+0x4a>
    3a30:	c8 01       	movw	r24, r16
    3a32:	b7 01       	movw	r22, r14
    3a34:	0e 94 05 21 	call	0x420a	; 0x420a <__fixsfsi>
    3a38:	9b 01       	movw	r18, r22
    3a3a:	ac 01       	movw	r20, r24
    3a3c:	b9 01       	movw	r22, r18
    3a3e:	ca 01       	movw	r24, r20
    3a40:	1f 91       	pop	r17
    3a42:	0f 91       	pop	r16
    3a44:	ff 90       	pop	r15
    3a46:	ef 90       	pop	r14
    3a48:	08 95       	ret

00003a4a <_fpadd_parts>:
    3a4a:	a0 e0       	ldi	r26, 0x00	; 0
    3a4c:	b0 e0       	ldi	r27, 0x00	; 0
    3a4e:	eb e2       	ldi	r30, 0x2B	; 43
    3a50:	fd e1       	ldi	r31, 0x1D	; 29
    3a52:	0c 94 21 23 	jmp	0x4642	; 0x4642 <__prologue_saves__>
    3a56:	dc 01       	movw	r26, r24
    3a58:	2b 01       	movw	r4, r22
    3a5a:	fa 01       	movw	r30, r20
    3a5c:	9c 91       	ld	r25, X
    3a5e:	92 30       	cpi	r25, 0x02	; 2
    3a60:	08 f4       	brcc	.+2      	; 0x3a64 <_fpadd_parts+0x1a>
    3a62:	39 c1       	rjmp	.+626    	; 0x3cd6 <_fpadd_parts+0x28c>
    3a64:	eb 01       	movw	r28, r22
    3a66:	88 81       	ld	r24, Y
    3a68:	82 30       	cpi	r24, 0x02	; 2
    3a6a:	08 f4       	brcc	.+2      	; 0x3a6e <_fpadd_parts+0x24>
    3a6c:	33 c1       	rjmp	.+614    	; 0x3cd4 <_fpadd_parts+0x28a>
    3a6e:	94 30       	cpi	r25, 0x04	; 4
    3a70:	69 f4       	brne	.+26     	; 0x3a8c <_fpadd_parts+0x42>
    3a72:	84 30       	cpi	r24, 0x04	; 4
    3a74:	09 f0       	breq	.+2      	; 0x3a78 <_fpadd_parts+0x2e>
    3a76:	2f c1       	rjmp	.+606    	; 0x3cd6 <_fpadd_parts+0x28c>
    3a78:	11 96       	adiw	r26, 0x01	; 1
    3a7a:	9c 91       	ld	r25, X
    3a7c:	11 97       	sbiw	r26, 0x01	; 1
    3a7e:	89 81       	ldd	r24, Y+1	; 0x01
    3a80:	98 17       	cp	r25, r24
    3a82:	09 f4       	brne	.+2      	; 0x3a86 <_fpadd_parts+0x3c>
    3a84:	28 c1       	rjmp	.+592    	; 0x3cd6 <_fpadd_parts+0x28c>
    3a86:	a9 ea       	ldi	r26, 0xA9	; 169
    3a88:	b1 e0       	ldi	r27, 0x01	; 1
    3a8a:	25 c1       	rjmp	.+586    	; 0x3cd6 <_fpadd_parts+0x28c>
    3a8c:	84 30       	cpi	r24, 0x04	; 4
    3a8e:	09 f4       	brne	.+2      	; 0x3a92 <_fpadd_parts+0x48>
    3a90:	21 c1       	rjmp	.+578    	; 0x3cd4 <_fpadd_parts+0x28a>
    3a92:	82 30       	cpi	r24, 0x02	; 2
    3a94:	a9 f4       	brne	.+42     	; 0x3ac0 <_fpadd_parts+0x76>
    3a96:	92 30       	cpi	r25, 0x02	; 2
    3a98:	09 f0       	breq	.+2      	; 0x3a9c <_fpadd_parts+0x52>
    3a9a:	1d c1       	rjmp	.+570    	; 0x3cd6 <_fpadd_parts+0x28c>
    3a9c:	9a 01       	movw	r18, r20
    3a9e:	ad 01       	movw	r20, r26
    3aa0:	88 e0       	ldi	r24, 0x08	; 8
    3aa2:	ea 01       	movw	r28, r20
    3aa4:	09 90       	ld	r0, Y+
    3aa6:	ae 01       	movw	r20, r28
    3aa8:	e9 01       	movw	r28, r18
    3aaa:	09 92       	st	Y+, r0
    3aac:	9e 01       	movw	r18, r28
    3aae:	81 50       	subi	r24, 0x01	; 1
    3ab0:	c1 f7       	brne	.-16     	; 0x3aa2 <_fpadd_parts+0x58>
    3ab2:	e2 01       	movw	r28, r4
    3ab4:	89 81       	ldd	r24, Y+1	; 0x01
    3ab6:	11 96       	adiw	r26, 0x01	; 1
    3ab8:	9c 91       	ld	r25, X
    3aba:	89 23       	and	r24, r25
    3abc:	81 83       	std	Z+1, r24	; 0x01
    3abe:	08 c1       	rjmp	.+528    	; 0x3cd0 <_fpadd_parts+0x286>
    3ac0:	92 30       	cpi	r25, 0x02	; 2
    3ac2:	09 f4       	brne	.+2      	; 0x3ac6 <_fpadd_parts+0x7c>
    3ac4:	07 c1       	rjmp	.+526    	; 0x3cd4 <_fpadd_parts+0x28a>
    3ac6:	12 96       	adiw	r26, 0x02	; 2
    3ac8:	2d 90       	ld	r2, X+
    3aca:	3c 90       	ld	r3, X
    3acc:	13 97       	sbiw	r26, 0x03	; 3
    3ace:	eb 01       	movw	r28, r22
    3ad0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ad2:	9b 81       	ldd	r25, Y+3	; 0x03
    3ad4:	14 96       	adiw	r26, 0x04	; 4
    3ad6:	ad 90       	ld	r10, X+
    3ad8:	bd 90       	ld	r11, X+
    3ada:	cd 90       	ld	r12, X+
    3adc:	dc 90       	ld	r13, X
    3ade:	17 97       	sbiw	r26, 0x07	; 7
    3ae0:	ec 80       	ldd	r14, Y+4	; 0x04
    3ae2:	fd 80       	ldd	r15, Y+5	; 0x05
    3ae4:	0e 81       	ldd	r16, Y+6	; 0x06
    3ae6:	1f 81       	ldd	r17, Y+7	; 0x07
    3ae8:	91 01       	movw	r18, r2
    3aea:	28 1b       	sub	r18, r24
    3aec:	39 0b       	sbc	r19, r25
    3aee:	b9 01       	movw	r22, r18
    3af0:	37 ff       	sbrs	r19, 7
    3af2:	04 c0       	rjmp	.+8      	; 0x3afc <_fpadd_parts+0xb2>
    3af4:	66 27       	eor	r22, r22
    3af6:	77 27       	eor	r23, r23
    3af8:	62 1b       	sub	r22, r18
    3afa:	73 0b       	sbc	r23, r19
    3afc:	60 32       	cpi	r22, 0x20	; 32
    3afe:	71 05       	cpc	r23, r1
    3b00:	0c f0       	brlt	.+2      	; 0x3b04 <_fpadd_parts+0xba>
    3b02:	61 c0       	rjmp	.+194    	; 0x3bc6 <_fpadd_parts+0x17c>
    3b04:	12 16       	cp	r1, r18
    3b06:	13 06       	cpc	r1, r19
    3b08:	6c f5       	brge	.+90     	; 0x3b64 <_fpadd_parts+0x11a>
    3b0a:	37 01       	movw	r6, r14
    3b0c:	48 01       	movw	r8, r16
    3b0e:	06 2e       	mov	r0, r22
    3b10:	04 c0       	rjmp	.+8      	; 0x3b1a <_fpadd_parts+0xd0>
    3b12:	96 94       	lsr	r9
    3b14:	87 94       	ror	r8
    3b16:	77 94       	ror	r7
    3b18:	67 94       	ror	r6
    3b1a:	0a 94       	dec	r0
    3b1c:	d2 f7       	brpl	.-12     	; 0x3b12 <_fpadd_parts+0xc8>
    3b1e:	21 e0       	ldi	r18, 0x01	; 1
    3b20:	30 e0       	ldi	r19, 0x00	; 0
    3b22:	40 e0       	ldi	r20, 0x00	; 0
    3b24:	50 e0       	ldi	r21, 0x00	; 0
    3b26:	04 c0       	rjmp	.+8      	; 0x3b30 <_fpadd_parts+0xe6>
    3b28:	22 0f       	add	r18, r18
    3b2a:	33 1f       	adc	r19, r19
    3b2c:	44 1f       	adc	r20, r20
    3b2e:	55 1f       	adc	r21, r21
    3b30:	6a 95       	dec	r22
    3b32:	d2 f7       	brpl	.-12     	; 0x3b28 <_fpadd_parts+0xde>
    3b34:	21 50       	subi	r18, 0x01	; 1
    3b36:	30 40       	sbci	r19, 0x00	; 0
    3b38:	40 40       	sbci	r20, 0x00	; 0
    3b3a:	50 40       	sbci	r21, 0x00	; 0
    3b3c:	2e 21       	and	r18, r14
    3b3e:	3f 21       	and	r19, r15
    3b40:	40 23       	and	r20, r16
    3b42:	51 23       	and	r21, r17
    3b44:	21 15       	cp	r18, r1
    3b46:	31 05       	cpc	r19, r1
    3b48:	41 05       	cpc	r20, r1
    3b4a:	51 05       	cpc	r21, r1
    3b4c:	21 f0       	breq	.+8      	; 0x3b56 <_fpadd_parts+0x10c>
    3b4e:	21 e0       	ldi	r18, 0x01	; 1
    3b50:	30 e0       	ldi	r19, 0x00	; 0
    3b52:	40 e0       	ldi	r20, 0x00	; 0
    3b54:	50 e0       	ldi	r21, 0x00	; 0
    3b56:	79 01       	movw	r14, r18
    3b58:	8a 01       	movw	r16, r20
    3b5a:	e6 28       	or	r14, r6
    3b5c:	f7 28       	or	r15, r7
    3b5e:	08 29       	or	r16, r8
    3b60:	19 29       	or	r17, r9
    3b62:	3c c0       	rjmp	.+120    	; 0x3bdc <_fpadd_parts+0x192>
    3b64:	23 2b       	or	r18, r19
    3b66:	d1 f1       	breq	.+116    	; 0x3bdc <_fpadd_parts+0x192>
    3b68:	26 0e       	add	r2, r22
    3b6a:	37 1e       	adc	r3, r23
    3b6c:	35 01       	movw	r6, r10
    3b6e:	46 01       	movw	r8, r12
    3b70:	06 2e       	mov	r0, r22
    3b72:	04 c0       	rjmp	.+8      	; 0x3b7c <_fpadd_parts+0x132>
    3b74:	96 94       	lsr	r9
    3b76:	87 94       	ror	r8
    3b78:	77 94       	ror	r7
    3b7a:	67 94       	ror	r6
    3b7c:	0a 94       	dec	r0
    3b7e:	d2 f7       	brpl	.-12     	; 0x3b74 <_fpadd_parts+0x12a>
    3b80:	21 e0       	ldi	r18, 0x01	; 1
    3b82:	30 e0       	ldi	r19, 0x00	; 0
    3b84:	40 e0       	ldi	r20, 0x00	; 0
    3b86:	50 e0       	ldi	r21, 0x00	; 0
    3b88:	04 c0       	rjmp	.+8      	; 0x3b92 <_fpadd_parts+0x148>
    3b8a:	22 0f       	add	r18, r18
    3b8c:	33 1f       	adc	r19, r19
    3b8e:	44 1f       	adc	r20, r20
    3b90:	55 1f       	adc	r21, r21
    3b92:	6a 95       	dec	r22
    3b94:	d2 f7       	brpl	.-12     	; 0x3b8a <_fpadd_parts+0x140>
    3b96:	21 50       	subi	r18, 0x01	; 1
    3b98:	30 40       	sbci	r19, 0x00	; 0
    3b9a:	40 40       	sbci	r20, 0x00	; 0
    3b9c:	50 40       	sbci	r21, 0x00	; 0
    3b9e:	2a 21       	and	r18, r10
    3ba0:	3b 21       	and	r19, r11
    3ba2:	4c 21       	and	r20, r12
    3ba4:	5d 21       	and	r21, r13
    3ba6:	21 15       	cp	r18, r1
    3ba8:	31 05       	cpc	r19, r1
    3baa:	41 05       	cpc	r20, r1
    3bac:	51 05       	cpc	r21, r1
    3bae:	21 f0       	breq	.+8      	; 0x3bb8 <_fpadd_parts+0x16e>
    3bb0:	21 e0       	ldi	r18, 0x01	; 1
    3bb2:	30 e0       	ldi	r19, 0x00	; 0
    3bb4:	40 e0       	ldi	r20, 0x00	; 0
    3bb6:	50 e0       	ldi	r21, 0x00	; 0
    3bb8:	59 01       	movw	r10, r18
    3bba:	6a 01       	movw	r12, r20
    3bbc:	a6 28       	or	r10, r6
    3bbe:	b7 28       	or	r11, r7
    3bc0:	c8 28       	or	r12, r8
    3bc2:	d9 28       	or	r13, r9
    3bc4:	0b c0       	rjmp	.+22     	; 0x3bdc <_fpadd_parts+0x192>
    3bc6:	82 15       	cp	r24, r2
    3bc8:	93 05       	cpc	r25, r3
    3bca:	2c f0       	brlt	.+10     	; 0x3bd6 <_fpadd_parts+0x18c>
    3bcc:	1c 01       	movw	r2, r24
    3bce:	aa 24       	eor	r10, r10
    3bd0:	bb 24       	eor	r11, r11
    3bd2:	65 01       	movw	r12, r10
    3bd4:	03 c0       	rjmp	.+6      	; 0x3bdc <_fpadd_parts+0x192>
    3bd6:	ee 24       	eor	r14, r14
    3bd8:	ff 24       	eor	r15, r15
    3bda:	87 01       	movw	r16, r14
    3bdc:	11 96       	adiw	r26, 0x01	; 1
    3bde:	9c 91       	ld	r25, X
    3be0:	d2 01       	movw	r26, r4
    3be2:	11 96       	adiw	r26, 0x01	; 1
    3be4:	8c 91       	ld	r24, X
    3be6:	98 17       	cp	r25, r24
    3be8:	09 f4       	brne	.+2      	; 0x3bec <_fpadd_parts+0x1a2>
    3bea:	45 c0       	rjmp	.+138    	; 0x3c76 <_fpadd_parts+0x22c>
    3bec:	99 23       	and	r25, r25
    3bee:	39 f0       	breq	.+14     	; 0x3bfe <_fpadd_parts+0x1b4>
    3bf0:	a8 01       	movw	r20, r16
    3bf2:	97 01       	movw	r18, r14
    3bf4:	2a 19       	sub	r18, r10
    3bf6:	3b 09       	sbc	r19, r11
    3bf8:	4c 09       	sbc	r20, r12
    3bfa:	5d 09       	sbc	r21, r13
    3bfc:	06 c0       	rjmp	.+12     	; 0x3c0a <_fpadd_parts+0x1c0>
    3bfe:	a6 01       	movw	r20, r12
    3c00:	95 01       	movw	r18, r10
    3c02:	2e 19       	sub	r18, r14
    3c04:	3f 09       	sbc	r19, r15
    3c06:	40 0b       	sbc	r20, r16
    3c08:	51 0b       	sbc	r21, r17
    3c0a:	57 fd       	sbrc	r21, 7
    3c0c:	08 c0       	rjmp	.+16     	; 0x3c1e <_fpadd_parts+0x1d4>
    3c0e:	11 82       	std	Z+1, r1	; 0x01
    3c10:	33 82       	std	Z+3, r3	; 0x03
    3c12:	22 82       	std	Z+2, r2	; 0x02
    3c14:	24 83       	std	Z+4, r18	; 0x04
    3c16:	35 83       	std	Z+5, r19	; 0x05
    3c18:	46 83       	std	Z+6, r20	; 0x06
    3c1a:	57 83       	std	Z+7, r21	; 0x07
    3c1c:	1d c0       	rjmp	.+58     	; 0x3c58 <_fpadd_parts+0x20e>
    3c1e:	81 e0       	ldi	r24, 0x01	; 1
    3c20:	81 83       	std	Z+1, r24	; 0x01
    3c22:	33 82       	std	Z+3, r3	; 0x03
    3c24:	22 82       	std	Z+2, r2	; 0x02
    3c26:	88 27       	eor	r24, r24
    3c28:	99 27       	eor	r25, r25
    3c2a:	dc 01       	movw	r26, r24
    3c2c:	82 1b       	sub	r24, r18
    3c2e:	93 0b       	sbc	r25, r19
    3c30:	a4 0b       	sbc	r26, r20
    3c32:	b5 0b       	sbc	r27, r21
    3c34:	84 83       	std	Z+4, r24	; 0x04
    3c36:	95 83       	std	Z+5, r25	; 0x05
    3c38:	a6 83       	std	Z+6, r26	; 0x06
    3c3a:	b7 83       	std	Z+7, r27	; 0x07
    3c3c:	0d c0       	rjmp	.+26     	; 0x3c58 <_fpadd_parts+0x20e>
    3c3e:	22 0f       	add	r18, r18
    3c40:	33 1f       	adc	r19, r19
    3c42:	44 1f       	adc	r20, r20
    3c44:	55 1f       	adc	r21, r21
    3c46:	24 83       	std	Z+4, r18	; 0x04
    3c48:	35 83       	std	Z+5, r19	; 0x05
    3c4a:	46 83       	std	Z+6, r20	; 0x06
    3c4c:	57 83       	std	Z+7, r21	; 0x07
    3c4e:	82 81       	ldd	r24, Z+2	; 0x02
    3c50:	93 81       	ldd	r25, Z+3	; 0x03
    3c52:	01 97       	sbiw	r24, 0x01	; 1
    3c54:	93 83       	std	Z+3, r25	; 0x03
    3c56:	82 83       	std	Z+2, r24	; 0x02
    3c58:	24 81       	ldd	r18, Z+4	; 0x04
    3c5a:	35 81       	ldd	r19, Z+5	; 0x05
    3c5c:	46 81       	ldd	r20, Z+6	; 0x06
    3c5e:	57 81       	ldd	r21, Z+7	; 0x07
    3c60:	da 01       	movw	r26, r20
    3c62:	c9 01       	movw	r24, r18
    3c64:	01 97       	sbiw	r24, 0x01	; 1
    3c66:	a1 09       	sbc	r26, r1
    3c68:	b1 09       	sbc	r27, r1
    3c6a:	8f 5f       	subi	r24, 0xFF	; 255
    3c6c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c6e:	af 4f       	sbci	r26, 0xFF	; 255
    3c70:	bf 43       	sbci	r27, 0x3F	; 63
    3c72:	28 f3       	brcs	.-54     	; 0x3c3e <_fpadd_parts+0x1f4>
    3c74:	0b c0       	rjmp	.+22     	; 0x3c8c <_fpadd_parts+0x242>
    3c76:	91 83       	std	Z+1, r25	; 0x01
    3c78:	33 82       	std	Z+3, r3	; 0x03
    3c7a:	22 82       	std	Z+2, r2	; 0x02
    3c7c:	ea 0c       	add	r14, r10
    3c7e:	fb 1c       	adc	r15, r11
    3c80:	0c 1d       	adc	r16, r12
    3c82:	1d 1d       	adc	r17, r13
    3c84:	e4 82       	std	Z+4, r14	; 0x04
    3c86:	f5 82       	std	Z+5, r15	; 0x05
    3c88:	06 83       	std	Z+6, r16	; 0x06
    3c8a:	17 83       	std	Z+7, r17	; 0x07
    3c8c:	83 e0       	ldi	r24, 0x03	; 3
    3c8e:	80 83       	st	Z, r24
    3c90:	24 81       	ldd	r18, Z+4	; 0x04
    3c92:	35 81       	ldd	r19, Z+5	; 0x05
    3c94:	46 81       	ldd	r20, Z+6	; 0x06
    3c96:	57 81       	ldd	r21, Z+7	; 0x07
    3c98:	57 ff       	sbrs	r21, 7
    3c9a:	1a c0       	rjmp	.+52     	; 0x3cd0 <_fpadd_parts+0x286>
    3c9c:	c9 01       	movw	r24, r18
    3c9e:	aa 27       	eor	r26, r26
    3ca0:	97 fd       	sbrc	r25, 7
    3ca2:	a0 95       	com	r26
    3ca4:	ba 2f       	mov	r27, r26
    3ca6:	81 70       	andi	r24, 0x01	; 1
    3ca8:	90 70       	andi	r25, 0x00	; 0
    3caa:	a0 70       	andi	r26, 0x00	; 0
    3cac:	b0 70       	andi	r27, 0x00	; 0
    3cae:	56 95       	lsr	r21
    3cb0:	47 95       	ror	r20
    3cb2:	37 95       	ror	r19
    3cb4:	27 95       	ror	r18
    3cb6:	82 2b       	or	r24, r18
    3cb8:	93 2b       	or	r25, r19
    3cba:	a4 2b       	or	r26, r20
    3cbc:	b5 2b       	or	r27, r21
    3cbe:	84 83       	std	Z+4, r24	; 0x04
    3cc0:	95 83       	std	Z+5, r25	; 0x05
    3cc2:	a6 83       	std	Z+6, r26	; 0x06
    3cc4:	b7 83       	std	Z+7, r27	; 0x07
    3cc6:	82 81       	ldd	r24, Z+2	; 0x02
    3cc8:	93 81       	ldd	r25, Z+3	; 0x03
    3cca:	01 96       	adiw	r24, 0x01	; 1
    3ccc:	93 83       	std	Z+3, r25	; 0x03
    3cce:	82 83       	std	Z+2, r24	; 0x02
    3cd0:	df 01       	movw	r26, r30
    3cd2:	01 c0       	rjmp	.+2      	; 0x3cd6 <_fpadd_parts+0x28c>
    3cd4:	d2 01       	movw	r26, r4
    3cd6:	cd 01       	movw	r24, r26
    3cd8:	cd b7       	in	r28, 0x3d	; 61
    3cda:	de b7       	in	r29, 0x3e	; 62
    3cdc:	e2 e1       	ldi	r30, 0x12	; 18
    3cde:	0c 94 3d 23 	jmp	0x467a	; 0x467a <__epilogue_restores__>

00003ce2 <__subsf3>:
    3ce2:	a0 e2       	ldi	r26, 0x20	; 32
    3ce4:	b0 e0       	ldi	r27, 0x00	; 0
    3ce6:	e7 e7       	ldi	r30, 0x77	; 119
    3ce8:	fe e1       	ldi	r31, 0x1E	; 30
    3cea:	0c 94 2d 23 	jmp	0x465a	; 0x465a <__prologue_saves__+0x18>
    3cee:	69 83       	std	Y+1, r22	; 0x01
    3cf0:	7a 83       	std	Y+2, r23	; 0x02
    3cf2:	8b 83       	std	Y+3, r24	; 0x03
    3cf4:	9c 83       	std	Y+4, r25	; 0x04
    3cf6:	2d 83       	std	Y+5, r18	; 0x05
    3cf8:	3e 83       	std	Y+6, r19	; 0x06
    3cfa:	4f 83       	std	Y+7, r20	; 0x07
    3cfc:	58 87       	std	Y+8, r21	; 0x08
    3cfe:	e9 e0       	ldi	r30, 0x09	; 9
    3d00:	ee 2e       	mov	r14, r30
    3d02:	f1 2c       	mov	r15, r1
    3d04:	ec 0e       	add	r14, r28
    3d06:	fd 1e       	adc	r15, r29
    3d08:	ce 01       	movw	r24, r28
    3d0a:	01 96       	adiw	r24, 0x01	; 1
    3d0c:	b7 01       	movw	r22, r14
    3d0e:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3d12:	8e 01       	movw	r16, r28
    3d14:	0f 5e       	subi	r16, 0xEF	; 239
    3d16:	1f 4f       	sbci	r17, 0xFF	; 255
    3d18:	ce 01       	movw	r24, r28
    3d1a:	05 96       	adiw	r24, 0x05	; 5
    3d1c:	b8 01       	movw	r22, r16
    3d1e:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3d22:	8a 89       	ldd	r24, Y+18	; 0x12
    3d24:	91 e0       	ldi	r25, 0x01	; 1
    3d26:	89 27       	eor	r24, r25
    3d28:	8a 8b       	std	Y+18, r24	; 0x12
    3d2a:	c7 01       	movw	r24, r14
    3d2c:	b8 01       	movw	r22, r16
    3d2e:	ae 01       	movw	r20, r28
    3d30:	47 5e       	subi	r20, 0xE7	; 231
    3d32:	5f 4f       	sbci	r21, 0xFF	; 255
    3d34:	0e 94 25 1d 	call	0x3a4a	; 0x3a4a <_fpadd_parts>
    3d38:	0e 94 59 21 	call	0x42b2	; 0x42b2 <__pack_f>
    3d3c:	a0 96       	adiw	r28, 0x20	; 32
    3d3e:	e6 e0       	ldi	r30, 0x06	; 6
    3d40:	0c 94 49 23 	jmp	0x4692	; 0x4692 <__epilogue_restores__+0x18>

00003d44 <__addsf3>:
    3d44:	a0 e2       	ldi	r26, 0x20	; 32
    3d46:	b0 e0       	ldi	r27, 0x00	; 0
    3d48:	e8 ea       	ldi	r30, 0xA8	; 168
    3d4a:	fe e1       	ldi	r31, 0x1E	; 30
    3d4c:	0c 94 2d 23 	jmp	0x465a	; 0x465a <__prologue_saves__+0x18>
    3d50:	69 83       	std	Y+1, r22	; 0x01
    3d52:	7a 83       	std	Y+2, r23	; 0x02
    3d54:	8b 83       	std	Y+3, r24	; 0x03
    3d56:	9c 83       	std	Y+4, r25	; 0x04
    3d58:	2d 83       	std	Y+5, r18	; 0x05
    3d5a:	3e 83       	std	Y+6, r19	; 0x06
    3d5c:	4f 83       	std	Y+7, r20	; 0x07
    3d5e:	58 87       	std	Y+8, r21	; 0x08
    3d60:	f9 e0       	ldi	r31, 0x09	; 9
    3d62:	ef 2e       	mov	r14, r31
    3d64:	f1 2c       	mov	r15, r1
    3d66:	ec 0e       	add	r14, r28
    3d68:	fd 1e       	adc	r15, r29
    3d6a:	ce 01       	movw	r24, r28
    3d6c:	01 96       	adiw	r24, 0x01	; 1
    3d6e:	b7 01       	movw	r22, r14
    3d70:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3d74:	8e 01       	movw	r16, r28
    3d76:	0f 5e       	subi	r16, 0xEF	; 239
    3d78:	1f 4f       	sbci	r17, 0xFF	; 255
    3d7a:	ce 01       	movw	r24, r28
    3d7c:	05 96       	adiw	r24, 0x05	; 5
    3d7e:	b8 01       	movw	r22, r16
    3d80:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3d84:	c7 01       	movw	r24, r14
    3d86:	b8 01       	movw	r22, r16
    3d88:	ae 01       	movw	r20, r28
    3d8a:	47 5e       	subi	r20, 0xE7	; 231
    3d8c:	5f 4f       	sbci	r21, 0xFF	; 255
    3d8e:	0e 94 25 1d 	call	0x3a4a	; 0x3a4a <_fpadd_parts>
    3d92:	0e 94 59 21 	call	0x42b2	; 0x42b2 <__pack_f>
    3d96:	a0 96       	adiw	r28, 0x20	; 32
    3d98:	e6 e0       	ldi	r30, 0x06	; 6
    3d9a:	0c 94 49 23 	jmp	0x4692	; 0x4692 <__epilogue_restores__+0x18>

00003d9e <__mulsf3>:
    3d9e:	a0 e2       	ldi	r26, 0x20	; 32
    3da0:	b0 e0       	ldi	r27, 0x00	; 0
    3da2:	e5 ed       	ldi	r30, 0xD5	; 213
    3da4:	fe e1       	ldi	r31, 0x1E	; 30
    3da6:	0c 94 21 23 	jmp	0x4642	; 0x4642 <__prologue_saves__>
    3daa:	69 83       	std	Y+1, r22	; 0x01
    3dac:	7a 83       	std	Y+2, r23	; 0x02
    3dae:	8b 83       	std	Y+3, r24	; 0x03
    3db0:	9c 83       	std	Y+4, r25	; 0x04
    3db2:	2d 83       	std	Y+5, r18	; 0x05
    3db4:	3e 83       	std	Y+6, r19	; 0x06
    3db6:	4f 83       	std	Y+7, r20	; 0x07
    3db8:	58 87       	std	Y+8, r21	; 0x08
    3dba:	ce 01       	movw	r24, r28
    3dbc:	01 96       	adiw	r24, 0x01	; 1
    3dbe:	be 01       	movw	r22, r28
    3dc0:	67 5f       	subi	r22, 0xF7	; 247
    3dc2:	7f 4f       	sbci	r23, 0xFF	; 255
    3dc4:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3dc8:	ce 01       	movw	r24, r28
    3dca:	05 96       	adiw	r24, 0x05	; 5
    3dcc:	be 01       	movw	r22, r28
    3dce:	6f 5e       	subi	r22, 0xEF	; 239
    3dd0:	7f 4f       	sbci	r23, 0xFF	; 255
    3dd2:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3dd6:	99 85       	ldd	r25, Y+9	; 0x09
    3dd8:	92 30       	cpi	r25, 0x02	; 2
    3dda:	88 f0       	brcs	.+34     	; 0x3dfe <__mulsf3+0x60>
    3ddc:	89 89       	ldd	r24, Y+17	; 0x11
    3dde:	82 30       	cpi	r24, 0x02	; 2
    3de0:	c8 f0       	brcs	.+50     	; 0x3e14 <__mulsf3+0x76>
    3de2:	94 30       	cpi	r25, 0x04	; 4
    3de4:	19 f4       	brne	.+6      	; 0x3dec <__mulsf3+0x4e>
    3de6:	82 30       	cpi	r24, 0x02	; 2
    3de8:	51 f4       	brne	.+20     	; 0x3dfe <__mulsf3+0x60>
    3dea:	04 c0       	rjmp	.+8      	; 0x3df4 <__mulsf3+0x56>
    3dec:	84 30       	cpi	r24, 0x04	; 4
    3dee:	29 f4       	brne	.+10     	; 0x3dfa <__mulsf3+0x5c>
    3df0:	92 30       	cpi	r25, 0x02	; 2
    3df2:	81 f4       	brne	.+32     	; 0x3e14 <__mulsf3+0x76>
    3df4:	89 ea       	ldi	r24, 0xA9	; 169
    3df6:	91 e0       	ldi	r25, 0x01	; 1
    3df8:	c6 c0       	rjmp	.+396    	; 0x3f86 <__mulsf3+0x1e8>
    3dfa:	92 30       	cpi	r25, 0x02	; 2
    3dfc:	49 f4       	brne	.+18     	; 0x3e10 <__mulsf3+0x72>
    3dfe:	20 e0       	ldi	r18, 0x00	; 0
    3e00:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e02:	8a 89       	ldd	r24, Y+18	; 0x12
    3e04:	98 13       	cpse	r25, r24
    3e06:	21 e0       	ldi	r18, 0x01	; 1
    3e08:	2a 87       	std	Y+10, r18	; 0x0a
    3e0a:	ce 01       	movw	r24, r28
    3e0c:	09 96       	adiw	r24, 0x09	; 9
    3e0e:	bb c0       	rjmp	.+374    	; 0x3f86 <__mulsf3+0x1e8>
    3e10:	82 30       	cpi	r24, 0x02	; 2
    3e12:	49 f4       	brne	.+18     	; 0x3e26 <__mulsf3+0x88>
    3e14:	20 e0       	ldi	r18, 0x00	; 0
    3e16:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e18:	8a 89       	ldd	r24, Y+18	; 0x12
    3e1a:	98 13       	cpse	r25, r24
    3e1c:	21 e0       	ldi	r18, 0x01	; 1
    3e1e:	2a 8b       	std	Y+18, r18	; 0x12
    3e20:	ce 01       	movw	r24, r28
    3e22:	41 96       	adiw	r24, 0x11	; 17
    3e24:	b0 c0       	rjmp	.+352    	; 0x3f86 <__mulsf3+0x1e8>
    3e26:	2d 84       	ldd	r2, Y+13	; 0x0d
    3e28:	3e 84       	ldd	r3, Y+14	; 0x0e
    3e2a:	4f 84       	ldd	r4, Y+15	; 0x0f
    3e2c:	58 88       	ldd	r5, Y+16	; 0x10
    3e2e:	6d 88       	ldd	r6, Y+21	; 0x15
    3e30:	7e 88       	ldd	r7, Y+22	; 0x16
    3e32:	8f 88       	ldd	r8, Y+23	; 0x17
    3e34:	98 8c       	ldd	r9, Y+24	; 0x18
    3e36:	ee 24       	eor	r14, r14
    3e38:	ff 24       	eor	r15, r15
    3e3a:	87 01       	movw	r16, r14
    3e3c:	aa 24       	eor	r10, r10
    3e3e:	bb 24       	eor	r11, r11
    3e40:	65 01       	movw	r12, r10
    3e42:	40 e0       	ldi	r20, 0x00	; 0
    3e44:	50 e0       	ldi	r21, 0x00	; 0
    3e46:	60 e0       	ldi	r22, 0x00	; 0
    3e48:	70 e0       	ldi	r23, 0x00	; 0
    3e4a:	e0 e0       	ldi	r30, 0x00	; 0
    3e4c:	f0 e0       	ldi	r31, 0x00	; 0
    3e4e:	c1 01       	movw	r24, r2
    3e50:	81 70       	andi	r24, 0x01	; 1
    3e52:	90 70       	andi	r25, 0x00	; 0
    3e54:	89 2b       	or	r24, r25
    3e56:	e9 f0       	breq	.+58     	; 0x3e92 <__mulsf3+0xf4>
    3e58:	e6 0c       	add	r14, r6
    3e5a:	f7 1c       	adc	r15, r7
    3e5c:	08 1d       	adc	r16, r8
    3e5e:	19 1d       	adc	r17, r9
    3e60:	9a 01       	movw	r18, r20
    3e62:	ab 01       	movw	r20, r22
    3e64:	2a 0d       	add	r18, r10
    3e66:	3b 1d       	adc	r19, r11
    3e68:	4c 1d       	adc	r20, r12
    3e6a:	5d 1d       	adc	r21, r13
    3e6c:	80 e0       	ldi	r24, 0x00	; 0
    3e6e:	90 e0       	ldi	r25, 0x00	; 0
    3e70:	a0 e0       	ldi	r26, 0x00	; 0
    3e72:	b0 e0       	ldi	r27, 0x00	; 0
    3e74:	e6 14       	cp	r14, r6
    3e76:	f7 04       	cpc	r15, r7
    3e78:	08 05       	cpc	r16, r8
    3e7a:	19 05       	cpc	r17, r9
    3e7c:	20 f4       	brcc	.+8      	; 0x3e86 <__mulsf3+0xe8>
    3e7e:	81 e0       	ldi	r24, 0x01	; 1
    3e80:	90 e0       	ldi	r25, 0x00	; 0
    3e82:	a0 e0       	ldi	r26, 0x00	; 0
    3e84:	b0 e0       	ldi	r27, 0x00	; 0
    3e86:	ba 01       	movw	r22, r20
    3e88:	a9 01       	movw	r20, r18
    3e8a:	48 0f       	add	r20, r24
    3e8c:	59 1f       	adc	r21, r25
    3e8e:	6a 1f       	adc	r22, r26
    3e90:	7b 1f       	adc	r23, r27
    3e92:	aa 0c       	add	r10, r10
    3e94:	bb 1c       	adc	r11, r11
    3e96:	cc 1c       	adc	r12, r12
    3e98:	dd 1c       	adc	r13, r13
    3e9a:	97 fe       	sbrs	r9, 7
    3e9c:	08 c0       	rjmp	.+16     	; 0x3eae <__mulsf3+0x110>
    3e9e:	81 e0       	ldi	r24, 0x01	; 1
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
    3ea2:	a0 e0       	ldi	r26, 0x00	; 0
    3ea4:	b0 e0       	ldi	r27, 0x00	; 0
    3ea6:	a8 2a       	or	r10, r24
    3ea8:	b9 2a       	or	r11, r25
    3eaa:	ca 2a       	or	r12, r26
    3eac:	db 2a       	or	r13, r27
    3eae:	31 96       	adiw	r30, 0x01	; 1
    3eb0:	e0 32       	cpi	r30, 0x20	; 32
    3eb2:	f1 05       	cpc	r31, r1
    3eb4:	49 f0       	breq	.+18     	; 0x3ec8 <__mulsf3+0x12a>
    3eb6:	66 0c       	add	r6, r6
    3eb8:	77 1c       	adc	r7, r7
    3eba:	88 1c       	adc	r8, r8
    3ebc:	99 1c       	adc	r9, r9
    3ebe:	56 94       	lsr	r5
    3ec0:	47 94       	ror	r4
    3ec2:	37 94       	ror	r3
    3ec4:	27 94       	ror	r2
    3ec6:	c3 cf       	rjmp	.-122    	; 0x3e4e <__mulsf3+0xb0>
    3ec8:	fa 85       	ldd	r31, Y+10	; 0x0a
    3eca:	ea 89       	ldd	r30, Y+18	; 0x12
    3ecc:	2b 89       	ldd	r18, Y+19	; 0x13
    3ece:	3c 89       	ldd	r19, Y+20	; 0x14
    3ed0:	8b 85       	ldd	r24, Y+11	; 0x0b
    3ed2:	9c 85       	ldd	r25, Y+12	; 0x0c
    3ed4:	28 0f       	add	r18, r24
    3ed6:	39 1f       	adc	r19, r25
    3ed8:	2e 5f       	subi	r18, 0xFE	; 254
    3eda:	3f 4f       	sbci	r19, 0xFF	; 255
    3edc:	17 c0       	rjmp	.+46     	; 0x3f0c <__mulsf3+0x16e>
    3ede:	ca 01       	movw	r24, r20
    3ee0:	81 70       	andi	r24, 0x01	; 1
    3ee2:	90 70       	andi	r25, 0x00	; 0
    3ee4:	89 2b       	or	r24, r25
    3ee6:	61 f0       	breq	.+24     	; 0x3f00 <__mulsf3+0x162>
    3ee8:	16 95       	lsr	r17
    3eea:	07 95       	ror	r16
    3eec:	f7 94       	ror	r15
    3eee:	e7 94       	ror	r14
    3ef0:	80 e0       	ldi	r24, 0x00	; 0
    3ef2:	90 e0       	ldi	r25, 0x00	; 0
    3ef4:	a0 e0       	ldi	r26, 0x00	; 0
    3ef6:	b0 e8       	ldi	r27, 0x80	; 128
    3ef8:	e8 2a       	or	r14, r24
    3efa:	f9 2a       	or	r15, r25
    3efc:	0a 2b       	or	r16, r26
    3efe:	1b 2b       	or	r17, r27
    3f00:	76 95       	lsr	r23
    3f02:	67 95       	ror	r22
    3f04:	57 95       	ror	r21
    3f06:	47 95       	ror	r20
    3f08:	2f 5f       	subi	r18, 0xFF	; 255
    3f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f0c:	77 fd       	sbrc	r23, 7
    3f0e:	e7 cf       	rjmp	.-50     	; 0x3ede <__mulsf3+0x140>
    3f10:	0c c0       	rjmp	.+24     	; 0x3f2a <__mulsf3+0x18c>
    3f12:	44 0f       	add	r20, r20
    3f14:	55 1f       	adc	r21, r21
    3f16:	66 1f       	adc	r22, r22
    3f18:	77 1f       	adc	r23, r23
    3f1a:	17 fd       	sbrc	r17, 7
    3f1c:	41 60       	ori	r20, 0x01	; 1
    3f1e:	ee 0c       	add	r14, r14
    3f20:	ff 1c       	adc	r15, r15
    3f22:	00 1f       	adc	r16, r16
    3f24:	11 1f       	adc	r17, r17
    3f26:	21 50       	subi	r18, 0x01	; 1
    3f28:	30 40       	sbci	r19, 0x00	; 0
    3f2a:	40 30       	cpi	r20, 0x00	; 0
    3f2c:	90 e0       	ldi	r25, 0x00	; 0
    3f2e:	59 07       	cpc	r21, r25
    3f30:	90 e0       	ldi	r25, 0x00	; 0
    3f32:	69 07       	cpc	r22, r25
    3f34:	90 e4       	ldi	r25, 0x40	; 64
    3f36:	79 07       	cpc	r23, r25
    3f38:	60 f3       	brcs	.-40     	; 0x3f12 <__mulsf3+0x174>
    3f3a:	2b 8f       	std	Y+27, r18	; 0x1b
    3f3c:	3c 8f       	std	Y+28, r19	; 0x1c
    3f3e:	db 01       	movw	r26, r22
    3f40:	ca 01       	movw	r24, r20
    3f42:	8f 77       	andi	r24, 0x7F	; 127
    3f44:	90 70       	andi	r25, 0x00	; 0
    3f46:	a0 70       	andi	r26, 0x00	; 0
    3f48:	b0 70       	andi	r27, 0x00	; 0
    3f4a:	80 34       	cpi	r24, 0x40	; 64
    3f4c:	91 05       	cpc	r25, r1
    3f4e:	a1 05       	cpc	r26, r1
    3f50:	b1 05       	cpc	r27, r1
    3f52:	61 f4       	brne	.+24     	; 0x3f6c <__mulsf3+0x1ce>
    3f54:	47 fd       	sbrc	r20, 7
    3f56:	0a c0       	rjmp	.+20     	; 0x3f6c <__mulsf3+0x1ce>
    3f58:	e1 14       	cp	r14, r1
    3f5a:	f1 04       	cpc	r15, r1
    3f5c:	01 05       	cpc	r16, r1
    3f5e:	11 05       	cpc	r17, r1
    3f60:	29 f0       	breq	.+10     	; 0x3f6c <__mulsf3+0x1ce>
    3f62:	40 5c       	subi	r20, 0xC0	; 192
    3f64:	5f 4f       	sbci	r21, 0xFF	; 255
    3f66:	6f 4f       	sbci	r22, 0xFF	; 255
    3f68:	7f 4f       	sbci	r23, 0xFF	; 255
    3f6a:	40 78       	andi	r20, 0x80	; 128
    3f6c:	1a 8e       	std	Y+26, r1	; 0x1a
    3f6e:	fe 17       	cp	r31, r30
    3f70:	11 f0       	breq	.+4      	; 0x3f76 <__mulsf3+0x1d8>
    3f72:	81 e0       	ldi	r24, 0x01	; 1
    3f74:	8a 8f       	std	Y+26, r24	; 0x1a
    3f76:	4d 8f       	std	Y+29, r20	; 0x1d
    3f78:	5e 8f       	std	Y+30, r21	; 0x1e
    3f7a:	6f 8f       	std	Y+31, r22	; 0x1f
    3f7c:	78 a3       	std	Y+32, r23	; 0x20
    3f7e:	83 e0       	ldi	r24, 0x03	; 3
    3f80:	89 8f       	std	Y+25, r24	; 0x19
    3f82:	ce 01       	movw	r24, r28
    3f84:	49 96       	adiw	r24, 0x19	; 25
    3f86:	0e 94 59 21 	call	0x42b2	; 0x42b2 <__pack_f>
    3f8a:	a0 96       	adiw	r28, 0x20	; 32
    3f8c:	e2 e1       	ldi	r30, 0x12	; 18
    3f8e:	0c 94 3d 23 	jmp	0x467a	; 0x467a <__epilogue_restores__>

00003f92 <__divsf3>:
    3f92:	a8 e1       	ldi	r26, 0x18	; 24
    3f94:	b0 e0       	ldi	r27, 0x00	; 0
    3f96:	ef ec       	ldi	r30, 0xCF	; 207
    3f98:	ff e1       	ldi	r31, 0x1F	; 31
    3f9a:	0c 94 29 23 	jmp	0x4652	; 0x4652 <__prologue_saves__+0x10>
    3f9e:	69 83       	std	Y+1, r22	; 0x01
    3fa0:	7a 83       	std	Y+2, r23	; 0x02
    3fa2:	8b 83       	std	Y+3, r24	; 0x03
    3fa4:	9c 83       	std	Y+4, r25	; 0x04
    3fa6:	2d 83       	std	Y+5, r18	; 0x05
    3fa8:	3e 83       	std	Y+6, r19	; 0x06
    3faa:	4f 83       	std	Y+7, r20	; 0x07
    3fac:	58 87       	std	Y+8, r21	; 0x08
    3fae:	b9 e0       	ldi	r27, 0x09	; 9
    3fb0:	eb 2e       	mov	r14, r27
    3fb2:	f1 2c       	mov	r15, r1
    3fb4:	ec 0e       	add	r14, r28
    3fb6:	fd 1e       	adc	r15, r29
    3fb8:	ce 01       	movw	r24, r28
    3fba:	01 96       	adiw	r24, 0x01	; 1
    3fbc:	b7 01       	movw	r22, r14
    3fbe:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3fc2:	8e 01       	movw	r16, r28
    3fc4:	0f 5e       	subi	r16, 0xEF	; 239
    3fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    3fc8:	ce 01       	movw	r24, r28
    3fca:	05 96       	adiw	r24, 0x05	; 5
    3fcc:	b8 01       	movw	r22, r16
    3fce:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    3fd2:	29 85       	ldd	r18, Y+9	; 0x09
    3fd4:	22 30       	cpi	r18, 0x02	; 2
    3fd6:	08 f4       	brcc	.+2      	; 0x3fda <__divsf3+0x48>
    3fd8:	7e c0       	rjmp	.+252    	; 0x40d6 <__divsf3+0x144>
    3fda:	39 89       	ldd	r19, Y+17	; 0x11
    3fdc:	32 30       	cpi	r19, 0x02	; 2
    3fde:	10 f4       	brcc	.+4      	; 0x3fe4 <__divsf3+0x52>
    3fe0:	b8 01       	movw	r22, r16
    3fe2:	7c c0       	rjmp	.+248    	; 0x40dc <__divsf3+0x14a>
    3fe4:	8a 85       	ldd	r24, Y+10	; 0x0a
    3fe6:	9a 89       	ldd	r25, Y+18	; 0x12
    3fe8:	89 27       	eor	r24, r25
    3fea:	8a 87       	std	Y+10, r24	; 0x0a
    3fec:	24 30       	cpi	r18, 0x04	; 4
    3fee:	11 f0       	breq	.+4      	; 0x3ff4 <__divsf3+0x62>
    3ff0:	22 30       	cpi	r18, 0x02	; 2
    3ff2:	31 f4       	brne	.+12     	; 0x4000 <__divsf3+0x6e>
    3ff4:	23 17       	cp	r18, r19
    3ff6:	09 f0       	breq	.+2      	; 0x3ffa <__divsf3+0x68>
    3ff8:	6e c0       	rjmp	.+220    	; 0x40d6 <__divsf3+0x144>
    3ffa:	69 ea       	ldi	r22, 0xA9	; 169
    3ffc:	71 e0       	ldi	r23, 0x01	; 1
    3ffe:	6e c0       	rjmp	.+220    	; 0x40dc <__divsf3+0x14a>
    4000:	34 30       	cpi	r19, 0x04	; 4
    4002:	39 f4       	brne	.+14     	; 0x4012 <__divsf3+0x80>
    4004:	1d 86       	std	Y+13, r1	; 0x0d
    4006:	1e 86       	std	Y+14, r1	; 0x0e
    4008:	1f 86       	std	Y+15, r1	; 0x0f
    400a:	18 8a       	std	Y+16, r1	; 0x10
    400c:	1c 86       	std	Y+12, r1	; 0x0c
    400e:	1b 86       	std	Y+11, r1	; 0x0b
    4010:	04 c0       	rjmp	.+8      	; 0x401a <__divsf3+0x88>
    4012:	32 30       	cpi	r19, 0x02	; 2
    4014:	21 f4       	brne	.+8      	; 0x401e <__divsf3+0x8c>
    4016:	84 e0       	ldi	r24, 0x04	; 4
    4018:	89 87       	std	Y+9, r24	; 0x09
    401a:	b7 01       	movw	r22, r14
    401c:	5f c0       	rjmp	.+190    	; 0x40dc <__divsf3+0x14a>
    401e:	2b 85       	ldd	r18, Y+11	; 0x0b
    4020:	3c 85       	ldd	r19, Y+12	; 0x0c
    4022:	8b 89       	ldd	r24, Y+19	; 0x13
    4024:	9c 89       	ldd	r25, Y+20	; 0x14
    4026:	28 1b       	sub	r18, r24
    4028:	39 0b       	sbc	r19, r25
    402a:	3c 87       	std	Y+12, r19	; 0x0c
    402c:	2b 87       	std	Y+11, r18	; 0x0b
    402e:	ed 84       	ldd	r14, Y+13	; 0x0d
    4030:	fe 84       	ldd	r15, Y+14	; 0x0e
    4032:	0f 85       	ldd	r16, Y+15	; 0x0f
    4034:	18 89       	ldd	r17, Y+16	; 0x10
    4036:	ad 88       	ldd	r10, Y+21	; 0x15
    4038:	be 88       	ldd	r11, Y+22	; 0x16
    403a:	cf 88       	ldd	r12, Y+23	; 0x17
    403c:	d8 8c       	ldd	r13, Y+24	; 0x18
    403e:	ea 14       	cp	r14, r10
    4040:	fb 04       	cpc	r15, r11
    4042:	0c 05       	cpc	r16, r12
    4044:	1d 05       	cpc	r17, r13
    4046:	40 f4       	brcc	.+16     	; 0x4058 <__divsf3+0xc6>
    4048:	ee 0c       	add	r14, r14
    404a:	ff 1c       	adc	r15, r15
    404c:	00 1f       	adc	r16, r16
    404e:	11 1f       	adc	r17, r17
    4050:	21 50       	subi	r18, 0x01	; 1
    4052:	30 40       	sbci	r19, 0x00	; 0
    4054:	3c 87       	std	Y+12, r19	; 0x0c
    4056:	2b 87       	std	Y+11, r18	; 0x0b
    4058:	20 e0       	ldi	r18, 0x00	; 0
    405a:	30 e0       	ldi	r19, 0x00	; 0
    405c:	40 e0       	ldi	r20, 0x00	; 0
    405e:	50 e0       	ldi	r21, 0x00	; 0
    4060:	80 e0       	ldi	r24, 0x00	; 0
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	a0 e0       	ldi	r26, 0x00	; 0
    4066:	b0 e4       	ldi	r27, 0x40	; 64
    4068:	60 e0       	ldi	r22, 0x00	; 0
    406a:	70 e0       	ldi	r23, 0x00	; 0
    406c:	ea 14       	cp	r14, r10
    406e:	fb 04       	cpc	r15, r11
    4070:	0c 05       	cpc	r16, r12
    4072:	1d 05       	cpc	r17, r13
    4074:	40 f0       	brcs	.+16     	; 0x4086 <__divsf3+0xf4>
    4076:	28 2b       	or	r18, r24
    4078:	39 2b       	or	r19, r25
    407a:	4a 2b       	or	r20, r26
    407c:	5b 2b       	or	r21, r27
    407e:	ea 18       	sub	r14, r10
    4080:	fb 08       	sbc	r15, r11
    4082:	0c 09       	sbc	r16, r12
    4084:	1d 09       	sbc	r17, r13
    4086:	b6 95       	lsr	r27
    4088:	a7 95       	ror	r26
    408a:	97 95       	ror	r25
    408c:	87 95       	ror	r24
    408e:	ee 0c       	add	r14, r14
    4090:	ff 1c       	adc	r15, r15
    4092:	00 1f       	adc	r16, r16
    4094:	11 1f       	adc	r17, r17
    4096:	6f 5f       	subi	r22, 0xFF	; 255
    4098:	7f 4f       	sbci	r23, 0xFF	; 255
    409a:	6f 31       	cpi	r22, 0x1F	; 31
    409c:	71 05       	cpc	r23, r1
    409e:	31 f7       	brne	.-52     	; 0x406c <__divsf3+0xda>
    40a0:	da 01       	movw	r26, r20
    40a2:	c9 01       	movw	r24, r18
    40a4:	8f 77       	andi	r24, 0x7F	; 127
    40a6:	90 70       	andi	r25, 0x00	; 0
    40a8:	a0 70       	andi	r26, 0x00	; 0
    40aa:	b0 70       	andi	r27, 0x00	; 0
    40ac:	80 34       	cpi	r24, 0x40	; 64
    40ae:	91 05       	cpc	r25, r1
    40b0:	a1 05       	cpc	r26, r1
    40b2:	b1 05       	cpc	r27, r1
    40b4:	61 f4       	brne	.+24     	; 0x40ce <__divsf3+0x13c>
    40b6:	27 fd       	sbrc	r18, 7
    40b8:	0a c0       	rjmp	.+20     	; 0x40ce <__divsf3+0x13c>
    40ba:	e1 14       	cp	r14, r1
    40bc:	f1 04       	cpc	r15, r1
    40be:	01 05       	cpc	r16, r1
    40c0:	11 05       	cpc	r17, r1
    40c2:	29 f0       	breq	.+10     	; 0x40ce <__divsf3+0x13c>
    40c4:	20 5c       	subi	r18, 0xC0	; 192
    40c6:	3f 4f       	sbci	r19, 0xFF	; 255
    40c8:	4f 4f       	sbci	r20, 0xFF	; 255
    40ca:	5f 4f       	sbci	r21, 0xFF	; 255
    40cc:	20 78       	andi	r18, 0x80	; 128
    40ce:	2d 87       	std	Y+13, r18	; 0x0d
    40d0:	3e 87       	std	Y+14, r19	; 0x0e
    40d2:	4f 87       	std	Y+15, r20	; 0x0f
    40d4:	58 8b       	std	Y+16, r21	; 0x10
    40d6:	be 01       	movw	r22, r28
    40d8:	67 5f       	subi	r22, 0xF7	; 247
    40da:	7f 4f       	sbci	r23, 0xFF	; 255
    40dc:	cb 01       	movw	r24, r22
    40de:	0e 94 59 21 	call	0x42b2	; 0x42b2 <__pack_f>
    40e2:	68 96       	adiw	r28, 0x18	; 24
    40e4:	ea e0       	ldi	r30, 0x0A	; 10
    40e6:	0c 94 45 23 	jmp	0x468a	; 0x468a <__epilogue_restores__+0x10>

000040ea <__gtsf2>:
    40ea:	a8 e1       	ldi	r26, 0x18	; 24
    40ec:	b0 e0       	ldi	r27, 0x00	; 0
    40ee:	eb e7       	ldi	r30, 0x7B	; 123
    40f0:	f0 e2       	ldi	r31, 0x20	; 32
    40f2:	0c 94 2d 23 	jmp	0x465a	; 0x465a <__prologue_saves__+0x18>
    40f6:	69 83       	std	Y+1, r22	; 0x01
    40f8:	7a 83       	std	Y+2, r23	; 0x02
    40fa:	8b 83       	std	Y+3, r24	; 0x03
    40fc:	9c 83       	std	Y+4, r25	; 0x04
    40fe:	2d 83       	std	Y+5, r18	; 0x05
    4100:	3e 83       	std	Y+6, r19	; 0x06
    4102:	4f 83       	std	Y+7, r20	; 0x07
    4104:	58 87       	std	Y+8, r21	; 0x08
    4106:	89 e0       	ldi	r24, 0x09	; 9
    4108:	e8 2e       	mov	r14, r24
    410a:	f1 2c       	mov	r15, r1
    410c:	ec 0e       	add	r14, r28
    410e:	fd 1e       	adc	r15, r29
    4110:	ce 01       	movw	r24, r28
    4112:	01 96       	adiw	r24, 0x01	; 1
    4114:	b7 01       	movw	r22, r14
    4116:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    411a:	8e 01       	movw	r16, r28
    411c:	0f 5e       	subi	r16, 0xEF	; 239
    411e:	1f 4f       	sbci	r17, 0xFF	; 255
    4120:	ce 01       	movw	r24, r28
    4122:	05 96       	adiw	r24, 0x05	; 5
    4124:	b8 01       	movw	r22, r16
    4126:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    412a:	89 85       	ldd	r24, Y+9	; 0x09
    412c:	82 30       	cpi	r24, 0x02	; 2
    412e:	40 f0       	brcs	.+16     	; 0x4140 <__gtsf2+0x56>
    4130:	89 89       	ldd	r24, Y+17	; 0x11
    4132:	82 30       	cpi	r24, 0x02	; 2
    4134:	28 f0       	brcs	.+10     	; 0x4140 <__gtsf2+0x56>
    4136:	c7 01       	movw	r24, r14
    4138:	b8 01       	movw	r22, r16
    413a:	0e 94 a6 22 	call	0x454c	; 0x454c <__fpcmp_parts_f>
    413e:	01 c0       	rjmp	.+2      	; 0x4142 <__gtsf2+0x58>
    4140:	8f ef       	ldi	r24, 0xFF	; 255
    4142:	68 96       	adiw	r28, 0x18	; 24
    4144:	e6 e0       	ldi	r30, 0x06	; 6
    4146:	0c 94 49 23 	jmp	0x4692	; 0x4692 <__epilogue_restores__+0x18>

0000414a <__gesf2>:
    414a:	a8 e1       	ldi	r26, 0x18	; 24
    414c:	b0 e0       	ldi	r27, 0x00	; 0
    414e:	eb ea       	ldi	r30, 0xAB	; 171
    4150:	f0 e2       	ldi	r31, 0x20	; 32
    4152:	0c 94 2d 23 	jmp	0x465a	; 0x465a <__prologue_saves__+0x18>
    4156:	69 83       	std	Y+1, r22	; 0x01
    4158:	7a 83       	std	Y+2, r23	; 0x02
    415a:	8b 83       	std	Y+3, r24	; 0x03
    415c:	9c 83       	std	Y+4, r25	; 0x04
    415e:	2d 83       	std	Y+5, r18	; 0x05
    4160:	3e 83       	std	Y+6, r19	; 0x06
    4162:	4f 83       	std	Y+7, r20	; 0x07
    4164:	58 87       	std	Y+8, r21	; 0x08
    4166:	89 e0       	ldi	r24, 0x09	; 9
    4168:	e8 2e       	mov	r14, r24
    416a:	f1 2c       	mov	r15, r1
    416c:	ec 0e       	add	r14, r28
    416e:	fd 1e       	adc	r15, r29
    4170:	ce 01       	movw	r24, r28
    4172:	01 96       	adiw	r24, 0x01	; 1
    4174:	b7 01       	movw	r22, r14
    4176:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    417a:	8e 01       	movw	r16, r28
    417c:	0f 5e       	subi	r16, 0xEF	; 239
    417e:	1f 4f       	sbci	r17, 0xFF	; 255
    4180:	ce 01       	movw	r24, r28
    4182:	05 96       	adiw	r24, 0x05	; 5
    4184:	b8 01       	movw	r22, r16
    4186:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    418a:	89 85       	ldd	r24, Y+9	; 0x09
    418c:	82 30       	cpi	r24, 0x02	; 2
    418e:	40 f0       	brcs	.+16     	; 0x41a0 <__gesf2+0x56>
    4190:	89 89       	ldd	r24, Y+17	; 0x11
    4192:	82 30       	cpi	r24, 0x02	; 2
    4194:	28 f0       	brcs	.+10     	; 0x41a0 <__gesf2+0x56>
    4196:	c7 01       	movw	r24, r14
    4198:	b8 01       	movw	r22, r16
    419a:	0e 94 a6 22 	call	0x454c	; 0x454c <__fpcmp_parts_f>
    419e:	01 c0       	rjmp	.+2      	; 0x41a2 <__gesf2+0x58>
    41a0:	8f ef       	ldi	r24, 0xFF	; 255
    41a2:	68 96       	adiw	r28, 0x18	; 24
    41a4:	e6 e0       	ldi	r30, 0x06	; 6
    41a6:	0c 94 49 23 	jmp	0x4692	; 0x4692 <__epilogue_restores__+0x18>

000041aa <__ltsf2>:
    41aa:	a8 e1       	ldi	r26, 0x18	; 24
    41ac:	b0 e0       	ldi	r27, 0x00	; 0
    41ae:	eb ed       	ldi	r30, 0xDB	; 219
    41b0:	f0 e2       	ldi	r31, 0x20	; 32
    41b2:	0c 94 2d 23 	jmp	0x465a	; 0x465a <__prologue_saves__+0x18>
    41b6:	69 83       	std	Y+1, r22	; 0x01
    41b8:	7a 83       	std	Y+2, r23	; 0x02
    41ba:	8b 83       	std	Y+3, r24	; 0x03
    41bc:	9c 83       	std	Y+4, r25	; 0x04
    41be:	2d 83       	std	Y+5, r18	; 0x05
    41c0:	3e 83       	std	Y+6, r19	; 0x06
    41c2:	4f 83       	std	Y+7, r20	; 0x07
    41c4:	58 87       	std	Y+8, r21	; 0x08
    41c6:	89 e0       	ldi	r24, 0x09	; 9
    41c8:	e8 2e       	mov	r14, r24
    41ca:	f1 2c       	mov	r15, r1
    41cc:	ec 0e       	add	r14, r28
    41ce:	fd 1e       	adc	r15, r29
    41d0:	ce 01       	movw	r24, r28
    41d2:	01 96       	adiw	r24, 0x01	; 1
    41d4:	b7 01       	movw	r22, r14
    41d6:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    41da:	8e 01       	movw	r16, r28
    41dc:	0f 5e       	subi	r16, 0xEF	; 239
    41de:	1f 4f       	sbci	r17, 0xFF	; 255
    41e0:	ce 01       	movw	r24, r28
    41e2:	05 96       	adiw	r24, 0x05	; 5
    41e4:	b8 01       	movw	r22, r16
    41e6:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    41ea:	89 85       	ldd	r24, Y+9	; 0x09
    41ec:	82 30       	cpi	r24, 0x02	; 2
    41ee:	40 f0       	brcs	.+16     	; 0x4200 <__ltsf2+0x56>
    41f0:	89 89       	ldd	r24, Y+17	; 0x11
    41f2:	82 30       	cpi	r24, 0x02	; 2
    41f4:	28 f0       	brcs	.+10     	; 0x4200 <__ltsf2+0x56>
    41f6:	c7 01       	movw	r24, r14
    41f8:	b8 01       	movw	r22, r16
    41fa:	0e 94 a6 22 	call	0x454c	; 0x454c <__fpcmp_parts_f>
    41fe:	01 c0       	rjmp	.+2      	; 0x4202 <__ltsf2+0x58>
    4200:	81 e0       	ldi	r24, 0x01	; 1
    4202:	68 96       	adiw	r28, 0x18	; 24
    4204:	e6 e0       	ldi	r30, 0x06	; 6
    4206:	0c 94 49 23 	jmp	0x4692	; 0x4692 <__epilogue_restores__+0x18>

0000420a <__fixsfsi>:
    420a:	ac e0       	ldi	r26, 0x0C	; 12
    420c:	b0 e0       	ldi	r27, 0x00	; 0
    420e:	eb e0       	ldi	r30, 0x0B	; 11
    4210:	f1 e2       	ldi	r31, 0x21	; 33
    4212:	0c 94 31 23 	jmp	0x4662	; 0x4662 <__prologue_saves__+0x20>
    4216:	69 83       	std	Y+1, r22	; 0x01
    4218:	7a 83       	std	Y+2, r23	; 0x02
    421a:	8b 83       	std	Y+3, r24	; 0x03
    421c:	9c 83       	std	Y+4, r25	; 0x04
    421e:	ce 01       	movw	r24, r28
    4220:	01 96       	adiw	r24, 0x01	; 1
    4222:	be 01       	movw	r22, r28
    4224:	6b 5f       	subi	r22, 0xFB	; 251
    4226:	7f 4f       	sbci	r23, 0xFF	; 255
    4228:	0e 94 2e 22 	call	0x445c	; 0x445c <__unpack_f>
    422c:	8d 81       	ldd	r24, Y+5	; 0x05
    422e:	82 30       	cpi	r24, 0x02	; 2
    4230:	61 f1       	breq	.+88     	; 0x428a <__fixsfsi+0x80>
    4232:	82 30       	cpi	r24, 0x02	; 2
    4234:	50 f1       	brcs	.+84     	; 0x428a <__fixsfsi+0x80>
    4236:	84 30       	cpi	r24, 0x04	; 4
    4238:	21 f4       	brne	.+8      	; 0x4242 <__fixsfsi+0x38>
    423a:	8e 81       	ldd	r24, Y+6	; 0x06
    423c:	88 23       	and	r24, r24
    423e:	51 f1       	breq	.+84     	; 0x4294 <__fixsfsi+0x8a>
    4240:	2e c0       	rjmp	.+92     	; 0x429e <__fixsfsi+0x94>
    4242:	2f 81       	ldd	r18, Y+7	; 0x07
    4244:	38 85       	ldd	r19, Y+8	; 0x08
    4246:	37 fd       	sbrc	r19, 7
    4248:	20 c0       	rjmp	.+64     	; 0x428a <__fixsfsi+0x80>
    424a:	6e 81       	ldd	r22, Y+6	; 0x06
    424c:	2f 31       	cpi	r18, 0x1F	; 31
    424e:	31 05       	cpc	r19, r1
    4250:	1c f0       	brlt	.+6      	; 0x4258 <__fixsfsi+0x4e>
    4252:	66 23       	and	r22, r22
    4254:	f9 f0       	breq	.+62     	; 0x4294 <__fixsfsi+0x8a>
    4256:	23 c0       	rjmp	.+70     	; 0x429e <__fixsfsi+0x94>
    4258:	8e e1       	ldi	r24, 0x1E	; 30
    425a:	90 e0       	ldi	r25, 0x00	; 0
    425c:	82 1b       	sub	r24, r18
    425e:	93 0b       	sbc	r25, r19
    4260:	29 85       	ldd	r18, Y+9	; 0x09
    4262:	3a 85       	ldd	r19, Y+10	; 0x0a
    4264:	4b 85       	ldd	r20, Y+11	; 0x0b
    4266:	5c 85       	ldd	r21, Y+12	; 0x0c
    4268:	04 c0       	rjmp	.+8      	; 0x4272 <__fixsfsi+0x68>
    426a:	56 95       	lsr	r21
    426c:	47 95       	ror	r20
    426e:	37 95       	ror	r19
    4270:	27 95       	ror	r18
    4272:	8a 95       	dec	r24
    4274:	d2 f7       	brpl	.-12     	; 0x426a <__fixsfsi+0x60>
    4276:	66 23       	and	r22, r22
    4278:	b1 f0       	breq	.+44     	; 0x42a6 <__fixsfsi+0x9c>
    427a:	50 95       	com	r21
    427c:	40 95       	com	r20
    427e:	30 95       	com	r19
    4280:	21 95       	neg	r18
    4282:	3f 4f       	sbci	r19, 0xFF	; 255
    4284:	4f 4f       	sbci	r20, 0xFF	; 255
    4286:	5f 4f       	sbci	r21, 0xFF	; 255
    4288:	0e c0       	rjmp	.+28     	; 0x42a6 <__fixsfsi+0x9c>
    428a:	20 e0       	ldi	r18, 0x00	; 0
    428c:	30 e0       	ldi	r19, 0x00	; 0
    428e:	40 e0       	ldi	r20, 0x00	; 0
    4290:	50 e0       	ldi	r21, 0x00	; 0
    4292:	09 c0       	rjmp	.+18     	; 0x42a6 <__fixsfsi+0x9c>
    4294:	2f ef       	ldi	r18, 0xFF	; 255
    4296:	3f ef       	ldi	r19, 0xFF	; 255
    4298:	4f ef       	ldi	r20, 0xFF	; 255
    429a:	5f e7       	ldi	r21, 0x7F	; 127
    429c:	04 c0       	rjmp	.+8      	; 0x42a6 <__fixsfsi+0x9c>
    429e:	20 e0       	ldi	r18, 0x00	; 0
    42a0:	30 e0       	ldi	r19, 0x00	; 0
    42a2:	40 e0       	ldi	r20, 0x00	; 0
    42a4:	50 e8       	ldi	r21, 0x80	; 128
    42a6:	b9 01       	movw	r22, r18
    42a8:	ca 01       	movw	r24, r20
    42aa:	2c 96       	adiw	r28, 0x0c	; 12
    42ac:	e2 e0       	ldi	r30, 0x02	; 2
    42ae:	0c 94 4d 23 	jmp	0x469a	; 0x469a <__epilogue_restores__+0x20>

000042b2 <__pack_f>:
    42b2:	df 92       	push	r13
    42b4:	ef 92       	push	r14
    42b6:	ff 92       	push	r15
    42b8:	0f 93       	push	r16
    42ba:	1f 93       	push	r17
    42bc:	fc 01       	movw	r30, r24
    42be:	e4 80       	ldd	r14, Z+4	; 0x04
    42c0:	f5 80       	ldd	r15, Z+5	; 0x05
    42c2:	06 81       	ldd	r16, Z+6	; 0x06
    42c4:	17 81       	ldd	r17, Z+7	; 0x07
    42c6:	d1 80       	ldd	r13, Z+1	; 0x01
    42c8:	80 81       	ld	r24, Z
    42ca:	82 30       	cpi	r24, 0x02	; 2
    42cc:	48 f4       	brcc	.+18     	; 0x42e0 <__pack_f+0x2e>
    42ce:	80 e0       	ldi	r24, 0x00	; 0
    42d0:	90 e0       	ldi	r25, 0x00	; 0
    42d2:	a0 e1       	ldi	r26, 0x10	; 16
    42d4:	b0 e0       	ldi	r27, 0x00	; 0
    42d6:	e8 2a       	or	r14, r24
    42d8:	f9 2a       	or	r15, r25
    42da:	0a 2b       	or	r16, r26
    42dc:	1b 2b       	or	r17, r27
    42de:	a5 c0       	rjmp	.+330    	; 0x442a <__pack_f+0x178>
    42e0:	84 30       	cpi	r24, 0x04	; 4
    42e2:	09 f4       	brne	.+2      	; 0x42e6 <__pack_f+0x34>
    42e4:	9f c0       	rjmp	.+318    	; 0x4424 <__pack_f+0x172>
    42e6:	82 30       	cpi	r24, 0x02	; 2
    42e8:	21 f4       	brne	.+8      	; 0x42f2 <__pack_f+0x40>
    42ea:	ee 24       	eor	r14, r14
    42ec:	ff 24       	eor	r15, r15
    42ee:	87 01       	movw	r16, r14
    42f0:	05 c0       	rjmp	.+10     	; 0x42fc <__pack_f+0x4a>
    42f2:	e1 14       	cp	r14, r1
    42f4:	f1 04       	cpc	r15, r1
    42f6:	01 05       	cpc	r16, r1
    42f8:	11 05       	cpc	r17, r1
    42fa:	19 f4       	brne	.+6      	; 0x4302 <__pack_f+0x50>
    42fc:	e0 e0       	ldi	r30, 0x00	; 0
    42fe:	f0 e0       	ldi	r31, 0x00	; 0
    4300:	96 c0       	rjmp	.+300    	; 0x442e <__pack_f+0x17c>
    4302:	62 81       	ldd	r22, Z+2	; 0x02
    4304:	73 81       	ldd	r23, Z+3	; 0x03
    4306:	9f ef       	ldi	r25, 0xFF	; 255
    4308:	62 38       	cpi	r22, 0x82	; 130
    430a:	79 07       	cpc	r23, r25
    430c:	0c f0       	brlt	.+2      	; 0x4310 <__pack_f+0x5e>
    430e:	5b c0       	rjmp	.+182    	; 0x43c6 <__pack_f+0x114>
    4310:	22 e8       	ldi	r18, 0x82	; 130
    4312:	3f ef       	ldi	r19, 0xFF	; 255
    4314:	26 1b       	sub	r18, r22
    4316:	37 0b       	sbc	r19, r23
    4318:	2a 31       	cpi	r18, 0x1A	; 26
    431a:	31 05       	cpc	r19, r1
    431c:	2c f0       	brlt	.+10     	; 0x4328 <__pack_f+0x76>
    431e:	20 e0       	ldi	r18, 0x00	; 0
    4320:	30 e0       	ldi	r19, 0x00	; 0
    4322:	40 e0       	ldi	r20, 0x00	; 0
    4324:	50 e0       	ldi	r21, 0x00	; 0
    4326:	2a c0       	rjmp	.+84     	; 0x437c <__pack_f+0xca>
    4328:	b8 01       	movw	r22, r16
    432a:	a7 01       	movw	r20, r14
    432c:	02 2e       	mov	r0, r18
    432e:	04 c0       	rjmp	.+8      	; 0x4338 <__pack_f+0x86>
    4330:	76 95       	lsr	r23
    4332:	67 95       	ror	r22
    4334:	57 95       	ror	r21
    4336:	47 95       	ror	r20
    4338:	0a 94       	dec	r0
    433a:	d2 f7       	brpl	.-12     	; 0x4330 <__pack_f+0x7e>
    433c:	81 e0       	ldi	r24, 0x01	; 1
    433e:	90 e0       	ldi	r25, 0x00	; 0
    4340:	a0 e0       	ldi	r26, 0x00	; 0
    4342:	b0 e0       	ldi	r27, 0x00	; 0
    4344:	04 c0       	rjmp	.+8      	; 0x434e <__pack_f+0x9c>
    4346:	88 0f       	add	r24, r24
    4348:	99 1f       	adc	r25, r25
    434a:	aa 1f       	adc	r26, r26
    434c:	bb 1f       	adc	r27, r27
    434e:	2a 95       	dec	r18
    4350:	d2 f7       	brpl	.-12     	; 0x4346 <__pack_f+0x94>
    4352:	01 97       	sbiw	r24, 0x01	; 1
    4354:	a1 09       	sbc	r26, r1
    4356:	b1 09       	sbc	r27, r1
    4358:	8e 21       	and	r24, r14
    435a:	9f 21       	and	r25, r15
    435c:	a0 23       	and	r26, r16
    435e:	b1 23       	and	r27, r17
    4360:	00 97       	sbiw	r24, 0x00	; 0
    4362:	a1 05       	cpc	r26, r1
    4364:	b1 05       	cpc	r27, r1
    4366:	21 f0       	breq	.+8      	; 0x4370 <__pack_f+0xbe>
    4368:	81 e0       	ldi	r24, 0x01	; 1
    436a:	90 e0       	ldi	r25, 0x00	; 0
    436c:	a0 e0       	ldi	r26, 0x00	; 0
    436e:	b0 e0       	ldi	r27, 0x00	; 0
    4370:	9a 01       	movw	r18, r20
    4372:	ab 01       	movw	r20, r22
    4374:	28 2b       	or	r18, r24
    4376:	39 2b       	or	r19, r25
    4378:	4a 2b       	or	r20, r26
    437a:	5b 2b       	or	r21, r27
    437c:	da 01       	movw	r26, r20
    437e:	c9 01       	movw	r24, r18
    4380:	8f 77       	andi	r24, 0x7F	; 127
    4382:	90 70       	andi	r25, 0x00	; 0
    4384:	a0 70       	andi	r26, 0x00	; 0
    4386:	b0 70       	andi	r27, 0x00	; 0
    4388:	80 34       	cpi	r24, 0x40	; 64
    438a:	91 05       	cpc	r25, r1
    438c:	a1 05       	cpc	r26, r1
    438e:	b1 05       	cpc	r27, r1
    4390:	39 f4       	brne	.+14     	; 0x43a0 <__pack_f+0xee>
    4392:	27 ff       	sbrs	r18, 7
    4394:	09 c0       	rjmp	.+18     	; 0x43a8 <__pack_f+0xf6>
    4396:	20 5c       	subi	r18, 0xC0	; 192
    4398:	3f 4f       	sbci	r19, 0xFF	; 255
    439a:	4f 4f       	sbci	r20, 0xFF	; 255
    439c:	5f 4f       	sbci	r21, 0xFF	; 255
    439e:	04 c0       	rjmp	.+8      	; 0x43a8 <__pack_f+0xf6>
    43a0:	21 5c       	subi	r18, 0xC1	; 193
    43a2:	3f 4f       	sbci	r19, 0xFF	; 255
    43a4:	4f 4f       	sbci	r20, 0xFF	; 255
    43a6:	5f 4f       	sbci	r21, 0xFF	; 255
    43a8:	e0 e0       	ldi	r30, 0x00	; 0
    43aa:	f0 e0       	ldi	r31, 0x00	; 0
    43ac:	20 30       	cpi	r18, 0x00	; 0
    43ae:	a0 e0       	ldi	r26, 0x00	; 0
    43b0:	3a 07       	cpc	r19, r26
    43b2:	a0 e0       	ldi	r26, 0x00	; 0
    43b4:	4a 07       	cpc	r20, r26
    43b6:	a0 e4       	ldi	r26, 0x40	; 64
    43b8:	5a 07       	cpc	r21, r26
    43ba:	10 f0       	brcs	.+4      	; 0x43c0 <__pack_f+0x10e>
    43bc:	e1 e0       	ldi	r30, 0x01	; 1
    43be:	f0 e0       	ldi	r31, 0x00	; 0
    43c0:	79 01       	movw	r14, r18
    43c2:	8a 01       	movw	r16, r20
    43c4:	27 c0       	rjmp	.+78     	; 0x4414 <__pack_f+0x162>
    43c6:	60 38       	cpi	r22, 0x80	; 128
    43c8:	71 05       	cpc	r23, r1
    43ca:	64 f5       	brge	.+88     	; 0x4424 <__pack_f+0x172>
    43cc:	fb 01       	movw	r30, r22
    43ce:	e1 58       	subi	r30, 0x81	; 129
    43d0:	ff 4f       	sbci	r31, 0xFF	; 255
    43d2:	d8 01       	movw	r26, r16
    43d4:	c7 01       	movw	r24, r14
    43d6:	8f 77       	andi	r24, 0x7F	; 127
    43d8:	90 70       	andi	r25, 0x00	; 0
    43da:	a0 70       	andi	r26, 0x00	; 0
    43dc:	b0 70       	andi	r27, 0x00	; 0
    43de:	80 34       	cpi	r24, 0x40	; 64
    43e0:	91 05       	cpc	r25, r1
    43e2:	a1 05       	cpc	r26, r1
    43e4:	b1 05       	cpc	r27, r1
    43e6:	39 f4       	brne	.+14     	; 0x43f6 <__pack_f+0x144>
    43e8:	e7 fe       	sbrs	r14, 7
    43ea:	0d c0       	rjmp	.+26     	; 0x4406 <__pack_f+0x154>
    43ec:	80 e4       	ldi	r24, 0x40	; 64
    43ee:	90 e0       	ldi	r25, 0x00	; 0
    43f0:	a0 e0       	ldi	r26, 0x00	; 0
    43f2:	b0 e0       	ldi	r27, 0x00	; 0
    43f4:	04 c0       	rjmp	.+8      	; 0x43fe <__pack_f+0x14c>
    43f6:	8f e3       	ldi	r24, 0x3F	; 63
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	a0 e0       	ldi	r26, 0x00	; 0
    43fc:	b0 e0       	ldi	r27, 0x00	; 0
    43fe:	e8 0e       	add	r14, r24
    4400:	f9 1e       	adc	r15, r25
    4402:	0a 1f       	adc	r16, r26
    4404:	1b 1f       	adc	r17, r27
    4406:	17 ff       	sbrs	r17, 7
    4408:	05 c0       	rjmp	.+10     	; 0x4414 <__pack_f+0x162>
    440a:	16 95       	lsr	r17
    440c:	07 95       	ror	r16
    440e:	f7 94       	ror	r15
    4410:	e7 94       	ror	r14
    4412:	31 96       	adiw	r30, 0x01	; 1
    4414:	87 e0       	ldi	r24, 0x07	; 7
    4416:	16 95       	lsr	r17
    4418:	07 95       	ror	r16
    441a:	f7 94       	ror	r15
    441c:	e7 94       	ror	r14
    441e:	8a 95       	dec	r24
    4420:	d1 f7       	brne	.-12     	; 0x4416 <__pack_f+0x164>
    4422:	05 c0       	rjmp	.+10     	; 0x442e <__pack_f+0x17c>
    4424:	ee 24       	eor	r14, r14
    4426:	ff 24       	eor	r15, r15
    4428:	87 01       	movw	r16, r14
    442a:	ef ef       	ldi	r30, 0xFF	; 255
    442c:	f0 e0       	ldi	r31, 0x00	; 0
    442e:	6e 2f       	mov	r22, r30
    4430:	67 95       	ror	r22
    4432:	66 27       	eor	r22, r22
    4434:	67 95       	ror	r22
    4436:	90 2f       	mov	r25, r16
    4438:	9f 77       	andi	r25, 0x7F	; 127
    443a:	d7 94       	ror	r13
    443c:	dd 24       	eor	r13, r13
    443e:	d7 94       	ror	r13
    4440:	8e 2f       	mov	r24, r30
    4442:	86 95       	lsr	r24
    4444:	49 2f       	mov	r20, r25
    4446:	46 2b       	or	r20, r22
    4448:	58 2f       	mov	r21, r24
    444a:	5d 29       	or	r21, r13
    444c:	b7 01       	movw	r22, r14
    444e:	ca 01       	movw	r24, r20
    4450:	1f 91       	pop	r17
    4452:	0f 91       	pop	r16
    4454:	ff 90       	pop	r15
    4456:	ef 90       	pop	r14
    4458:	df 90       	pop	r13
    445a:	08 95       	ret

0000445c <__unpack_f>:
    445c:	fc 01       	movw	r30, r24
    445e:	db 01       	movw	r26, r22
    4460:	40 81       	ld	r20, Z
    4462:	51 81       	ldd	r21, Z+1	; 0x01
    4464:	22 81       	ldd	r18, Z+2	; 0x02
    4466:	62 2f       	mov	r22, r18
    4468:	6f 77       	andi	r22, 0x7F	; 127
    446a:	70 e0       	ldi	r23, 0x00	; 0
    446c:	22 1f       	adc	r18, r18
    446e:	22 27       	eor	r18, r18
    4470:	22 1f       	adc	r18, r18
    4472:	93 81       	ldd	r25, Z+3	; 0x03
    4474:	89 2f       	mov	r24, r25
    4476:	88 0f       	add	r24, r24
    4478:	82 2b       	or	r24, r18
    447a:	28 2f       	mov	r18, r24
    447c:	30 e0       	ldi	r19, 0x00	; 0
    447e:	99 1f       	adc	r25, r25
    4480:	99 27       	eor	r25, r25
    4482:	99 1f       	adc	r25, r25
    4484:	11 96       	adiw	r26, 0x01	; 1
    4486:	9c 93       	st	X, r25
    4488:	11 97       	sbiw	r26, 0x01	; 1
    448a:	21 15       	cp	r18, r1
    448c:	31 05       	cpc	r19, r1
    448e:	a9 f5       	brne	.+106    	; 0x44fa <__unpack_f+0x9e>
    4490:	41 15       	cp	r20, r1
    4492:	51 05       	cpc	r21, r1
    4494:	61 05       	cpc	r22, r1
    4496:	71 05       	cpc	r23, r1
    4498:	11 f4       	brne	.+4      	; 0x449e <__unpack_f+0x42>
    449a:	82 e0       	ldi	r24, 0x02	; 2
    449c:	37 c0       	rjmp	.+110    	; 0x450c <__unpack_f+0xb0>
    449e:	82 e8       	ldi	r24, 0x82	; 130
    44a0:	9f ef       	ldi	r25, 0xFF	; 255
    44a2:	13 96       	adiw	r26, 0x03	; 3
    44a4:	9c 93       	st	X, r25
    44a6:	8e 93       	st	-X, r24
    44a8:	12 97       	sbiw	r26, 0x02	; 2
    44aa:	9a 01       	movw	r18, r20
    44ac:	ab 01       	movw	r20, r22
    44ae:	67 e0       	ldi	r22, 0x07	; 7
    44b0:	22 0f       	add	r18, r18
    44b2:	33 1f       	adc	r19, r19
    44b4:	44 1f       	adc	r20, r20
    44b6:	55 1f       	adc	r21, r21
    44b8:	6a 95       	dec	r22
    44ba:	d1 f7       	brne	.-12     	; 0x44b0 <__unpack_f+0x54>
    44bc:	83 e0       	ldi	r24, 0x03	; 3
    44be:	8c 93       	st	X, r24
    44c0:	0d c0       	rjmp	.+26     	; 0x44dc <__unpack_f+0x80>
    44c2:	22 0f       	add	r18, r18
    44c4:	33 1f       	adc	r19, r19
    44c6:	44 1f       	adc	r20, r20
    44c8:	55 1f       	adc	r21, r21
    44ca:	12 96       	adiw	r26, 0x02	; 2
    44cc:	8d 91       	ld	r24, X+
    44ce:	9c 91       	ld	r25, X
    44d0:	13 97       	sbiw	r26, 0x03	; 3
    44d2:	01 97       	sbiw	r24, 0x01	; 1
    44d4:	13 96       	adiw	r26, 0x03	; 3
    44d6:	9c 93       	st	X, r25
    44d8:	8e 93       	st	-X, r24
    44da:	12 97       	sbiw	r26, 0x02	; 2
    44dc:	20 30       	cpi	r18, 0x00	; 0
    44de:	80 e0       	ldi	r24, 0x00	; 0
    44e0:	38 07       	cpc	r19, r24
    44e2:	80 e0       	ldi	r24, 0x00	; 0
    44e4:	48 07       	cpc	r20, r24
    44e6:	80 e4       	ldi	r24, 0x40	; 64
    44e8:	58 07       	cpc	r21, r24
    44ea:	58 f3       	brcs	.-42     	; 0x44c2 <__unpack_f+0x66>
    44ec:	14 96       	adiw	r26, 0x04	; 4
    44ee:	2d 93       	st	X+, r18
    44f0:	3d 93       	st	X+, r19
    44f2:	4d 93       	st	X+, r20
    44f4:	5c 93       	st	X, r21
    44f6:	17 97       	sbiw	r26, 0x07	; 7
    44f8:	08 95       	ret
    44fa:	2f 3f       	cpi	r18, 0xFF	; 255
    44fc:	31 05       	cpc	r19, r1
    44fe:	79 f4       	brne	.+30     	; 0x451e <__unpack_f+0xc2>
    4500:	41 15       	cp	r20, r1
    4502:	51 05       	cpc	r21, r1
    4504:	61 05       	cpc	r22, r1
    4506:	71 05       	cpc	r23, r1
    4508:	19 f4       	brne	.+6      	; 0x4510 <__unpack_f+0xb4>
    450a:	84 e0       	ldi	r24, 0x04	; 4
    450c:	8c 93       	st	X, r24
    450e:	08 95       	ret
    4510:	64 ff       	sbrs	r22, 4
    4512:	03 c0       	rjmp	.+6      	; 0x451a <__unpack_f+0xbe>
    4514:	81 e0       	ldi	r24, 0x01	; 1
    4516:	8c 93       	st	X, r24
    4518:	12 c0       	rjmp	.+36     	; 0x453e <__unpack_f+0xe2>
    451a:	1c 92       	st	X, r1
    451c:	10 c0       	rjmp	.+32     	; 0x453e <__unpack_f+0xe2>
    451e:	2f 57       	subi	r18, 0x7F	; 127
    4520:	30 40       	sbci	r19, 0x00	; 0
    4522:	13 96       	adiw	r26, 0x03	; 3
    4524:	3c 93       	st	X, r19
    4526:	2e 93       	st	-X, r18
    4528:	12 97       	sbiw	r26, 0x02	; 2
    452a:	83 e0       	ldi	r24, 0x03	; 3
    452c:	8c 93       	st	X, r24
    452e:	87 e0       	ldi	r24, 0x07	; 7
    4530:	44 0f       	add	r20, r20
    4532:	55 1f       	adc	r21, r21
    4534:	66 1f       	adc	r22, r22
    4536:	77 1f       	adc	r23, r23
    4538:	8a 95       	dec	r24
    453a:	d1 f7       	brne	.-12     	; 0x4530 <__unpack_f+0xd4>
    453c:	70 64       	ori	r23, 0x40	; 64
    453e:	14 96       	adiw	r26, 0x04	; 4
    4540:	4d 93       	st	X+, r20
    4542:	5d 93       	st	X+, r21
    4544:	6d 93       	st	X+, r22
    4546:	7c 93       	st	X, r23
    4548:	17 97       	sbiw	r26, 0x07	; 7
    454a:	08 95       	ret

0000454c <__fpcmp_parts_f>:
    454c:	1f 93       	push	r17
    454e:	dc 01       	movw	r26, r24
    4550:	fb 01       	movw	r30, r22
    4552:	9c 91       	ld	r25, X
    4554:	92 30       	cpi	r25, 0x02	; 2
    4556:	08 f4       	brcc	.+2      	; 0x455a <__fpcmp_parts_f+0xe>
    4558:	47 c0       	rjmp	.+142    	; 0x45e8 <__fpcmp_parts_f+0x9c>
    455a:	80 81       	ld	r24, Z
    455c:	82 30       	cpi	r24, 0x02	; 2
    455e:	08 f4       	brcc	.+2      	; 0x4562 <__fpcmp_parts_f+0x16>
    4560:	43 c0       	rjmp	.+134    	; 0x45e8 <__fpcmp_parts_f+0x9c>
    4562:	94 30       	cpi	r25, 0x04	; 4
    4564:	51 f4       	brne	.+20     	; 0x457a <__fpcmp_parts_f+0x2e>
    4566:	11 96       	adiw	r26, 0x01	; 1
    4568:	1c 91       	ld	r17, X
    456a:	84 30       	cpi	r24, 0x04	; 4
    456c:	99 f5       	brne	.+102    	; 0x45d4 <__fpcmp_parts_f+0x88>
    456e:	81 81       	ldd	r24, Z+1	; 0x01
    4570:	68 2f       	mov	r22, r24
    4572:	70 e0       	ldi	r23, 0x00	; 0
    4574:	61 1b       	sub	r22, r17
    4576:	71 09       	sbc	r23, r1
    4578:	3f c0       	rjmp	.+126    	; 0x45f8 <__fpcmp_parts_f+0xac>
    457a:	84 30       	cpi	r24, 0x04	; 4
    457c:	21 f0       	breq	.+8      	; 0x4586 <__fpcmp_parts_f+0x3a>
    457e:	92 30       	cpi	r25, 0x02	; 2
    4580:	31 f4       	brne	.+12     	; 0x458e <__fpcmp_parts_f+0x42>
    4582:	82 30       	cpi	r24, 0x02	; 2
    4584:	b9 f1       	breq	.+110    	; 0x45f4 <__fpcmp_parts_f+0xa8>
    4586:	81 81       	ldd	r24, Z+1	; 0x01
    4588:	88 23       	and	r24, r24
    458a:	89 f1       	breq	.+98     	; 0x45ee <__fpcmp_parts_f+0xa2>
    458c:	2d c0       	rjmp	.+90     	; 0x45e8 <__fpcmp_parts_f+0x9c>
    458e:	11 96       	adiw	r26, 0x01	; 1
    4590:	1c 91       	ld	r17, X
    4592:	11 97       	sbiw	r26, 0x01	; 1
    4594:	82 30       	cpi	r24, 0x02	; 2
    4596:	f1 f0       	breq	.+60     	; 0x45d4 <__fpcmp_parts_f+0x88>
    4598:	81 81       	ldd	r24, Z+1	; 0x01
    459a:	18 17       	cp	r17, r24
    459c:	d9 f4       	brne	.+54     	; 0x45d4 <__fpcmp_parts_f+0x88>
    459e:	12 96       	adiw	r26, 0x02	; 2
    45a0:	2d 91       	ld	r18, X+
    45a2:	3c 91       	ld	r19, X
    45a4:	13 97       	sbiw	r26, 0x03	; 3
    45a6:	82 81       	ldd	r24, Z+2	; 0x02
    45a8:	93 81       	ldd	r25, Z+3	; 0x03
    45aa:	82 17       	cp	r24, r18
    45ac:	93 07       	cpc	r25, r19
    45ae:	94 f0       	brlt	.+36     	; 0x45d4 <__fpcmp_parts_f+0x88>
    45b0:	28 17       	cp	r18, r24
    45b2:	39 07       	cpc	r19, r25
    45b4:	bc f0       	brlt	.+46     	; 0x45e4 <__fpcmp_parts_f+0x98>
    45b6:	14 96       	adiw	r26, 0x04	; 4
    45b8:	8d 91       	ld	r24, X+
    45ba:	9d 91       	ld	r25, X+
    45bc:	0d 90       	ld	r0, X+
    45be:	bc 91       	ld	r27, X
    45c0:	a0 2d       	mov	r26, r0
    45c2:	24 81       	ldd	r18, Z+4	; 0x04
    45c4:	35 81       	ldd	r19, Z+5	; 0x05
    45c6:	46 81       	ldd	r20, Z+6	; 0x06
    45c8:	57 81       	ldd	r21, Z+7	; 0x07
    45ca:	28 17       	cp	r18, r24
    45cc:	39 07       	cpc	r19, r25
    45ce:	4a 07       	cpc	r20, r26
    45d0:	5b 07       	cpc	r21, r27
    45d2:	18 f4       	brcc	.+6      	; 0x45da <__fpcmp_parts_f+0x8e>
    45d4:	11 23       	and	r17, r17
    45d6:	41 f0       	breq	.+16     	; 0x45e8 <__fpcmp_parts_f+0x9c>
    45d8:	0a c0       	rjmp	.+20     	; 0x45ee <__fpcmp_parts_f+0xa2>
    45da:	82 17       	cp	r24, r18
    45dc:	93 07       	cpc	r25, r19
    45de:	a4 07       	cpc	r26, r20
    45e0:	b5 07       	cpc	r27, r21
    45e2:	40 f4       	brcc	.+16     	; 0x45f4 <__fpcmp_parts_f+0xa8>
    45e4:	11 23       	and	r17, r17
    45e6:	19 f0       	breq	.+6      	; 0x45ee <__fpcmp_parts_f+0xa2>
    45e8:	61 e0       	ldi	r22, 0x01	; 1
    45ea:	70 e0       	ldi	r23, 0x00	; 0
    45ec:	05 c0       	rjmp	.+10     	; 0x45f8 <__fpcmp_parts_f+0xac>
    45ee:	6f ef       	ldi	r22, 0xFF	; 255
    45f0:	7f ef       	ldi	r23, 0xFF	; 255
    45f2:	02 c0       	rjmp	.+4      	; 0x45f8 <__fpcmp_parts_f+0xac>
    45f4:	60 e0       	ldi	r22, 0x00	; 0
    45f6:	70 e0       	ldi	r23, 0x00	; 0
    45f8:	cb 01       	movw	r24, r22
    45fa:	1f 91       	pop	r17
    45fc:	08 95       	ret

000045fe <__udivmodsi4>:
    45fe:	a1 e2       	ldi	r26, 0x21	; 33
    4600:	1a 2e       	mov	r1, r26
    4602:	aa 1b       	sub	r26, r26
    4604:	bb 1b       	sub	r27, r27
    4606:	fd 01       	movw	r30, r26
    4608:	0d c0       	rjmp	.+26     	; 0x4624 <__udivmodsi4_ep>

0000460a <__udivmodsi4_loop>:
    460a:	aa 1f       	adc	r26, r26
    460c:	bb 1f       	adc	r27, r27
    460e:	ee 1f       	adc	r30, r30
    4610:	ff 1f       	adc	r31, r31
    4612:	a2 17       	cp	r26, r18
    4614:	b3 07       	cpc	r27, r19
    4616:	e4 07       	cpc	r30, r20
    4618:	f5 07       	cpc	r31, r21
    461a:	20 f0       	brcs	.+8      	; 0x4624 <__udivmodsi4_ep>
    461c:	a2 1b       	sub	r26, r18
    461e:	b3 0b       	sbc	r27, r19
    4620:	e4 0b       	sbc	r30, r20
    4622:	f5 0b       	sbc	r31, r21

00004624 <__udivmodsi4_ep>:
    4624:	66 1f       	adc	r22, r22
    4626:	77 1f       	adc	r23, r23
    4628:	88 1f       	adc	r24, r24
    462a:	99 1f       	adc	r25, r25
    462c:	1a 94       	dec	r1
    462e:	69 f7       	brne	.-38     	; 0x460a <__udivmodsi4_loop>
    4630:	60 95       	com	r22
    4632:	70 95       	com	r23
    4634:	80 95       	com	r24
    4636:	90 95       	com	r25
    4638:	9b 01       	movw	r18, r22
    463a:	ac 01       	movw	r20, r24
    463c:	bd 01       	movw	r22, r26
    463e:	cf 01       	movw	r24, r30
    4640:	08 95       	ret

00004642 <__prologue_saves__>:
    4642:	2f 92       	push	r2
    4644:	3f 92       	push	r3
    4646:	4f 92       	push	r4
    4648:	5f 92       	push	r5
    464a:	6f 92       	push	r6
    464c:	7f 92       	push	r7
    464e:	8f 92       	push	r8
    4650:	9f 92       	push	r9
    4652:	af 92       	push	r10
    4654:	bf 92       	push	r11
    4656:	cf 92       	push	r12
    4658:	df 92       	push	r13
    465a:	ef 92       	push	r14
    465c:	ff 92       	push	r15
    465e:	0f 93       	push	r16
    4660:	1f 93       	push	r17
    4662:	cf 93       	push	r28
    4664:	df 93       	push	r29
    4666:	cd b7       	in	r28, 0x3d	; 61
    4668:	de b7       	in	r29, 0x3e	; 62
    466a:	ca 1b       	sub	r28, r26
    466c:	db 0b       	sbc	r29, r27
    466e:	0f b6       	in	r0, 0x3f	; 63
    4670:	f8 94       	cli
    4672:	de bf       	out	0x3e, r29	; 62
    4674:	0f be       	out	0x3f, r0	; 63
    4676:	cd bf       	out	0x3d, r28	; 61
    4678:	09 94       	ijmp

0000467a <__epilogue_restores__>:
    467a:	2a 88       	ldd	r2, Y+18	; 0x12
    467c:	39 88       	ldd	r3, Y+17	; 0x11
    467e:	48 88       	ldd	r4, Y+16	; 0x10
    4680:	5f 84       	ldd	r5, Y+15	; 0x0f
    4682:	6e 84       	ldd	r6, Y+14	; 0x0e
    4684:	7d 84       	ldd	r7, Y+13	; 0x0d
    4686:	8c 84       	ldd	r8, Y+12	; 0x0c
    4688:	9b 84       	ldd	r9, Y+11	; 0x0b
    468a:	aa 84       	ldd	r10, Y+10	; 0x0a
    468c:	b9 84       	ldd	r11, Y+9	; 0x09
    468e:	c8 84       	ldd	r12, Y+8	; 0x08
    4690:	df 80       	ldd	r13, Y+7	; 0x07
    4692:	ee 80       	ldd	r14, Y+6	; 0x06
    4694:	fd 80       	ldd	r15, Y+5	; 0x05
    4696:	0c 81       	ldd	r16, Y+4	; 0x04
    4698:	1b 81       	ldd	r17, Y+3	; 0x03
    469a:	aa 81       	ldd	r26, Y+2	; 0x02
    469c:	b9 81       	ldd	r27, Y+1	; 0x01
    469e:	ce 0f       	add	r28, r30
    46a0:	d1 1d       	adc	r29, r1
    46a2:	0f b6       	in	r0, 0x3f	; 63
    46a4:	f8 94       	cli
    46a6:	de bf       	out	0x3e, r29	; 62
    46a8:	0f be       	out	0x3f, r0	; 63
    46aa:	cd bf       	out	0x3d, r28	; 61
    46ac:	ed 01       	movw	r28, r26
    46ae:	08 95       	ret

000046b0 <itoa>:
    46b0:	fb 01       	movw	r30, r22
    46b2:	9f 01       	movw	r18, r30
    46b4:	e8 94       	clt
    46b6:	42 30       	cpi	r20, 0x02	; 2
    46b8:	c4 f0       	brlt	.+48     	; 0x46ea <itoa+0x3a>
    46ba:	45 32       	cpi	r20, 0x25	; 37
    46bc:	b4 f4       	brge	.+44     	; 0x46ea <itoa+0x3a>
    46be:	4a 30       	cpi	r20, 0x0A	; 10
    46c0:	29 f4       	brne	.+10     	; 0x46cc <itoa+0x1c>
    46c2:	97 fb       	bst	r25, 7
    46c4:	1e f4       	brtc	.+6      	; 0x46cc <itoa+0x1c>
    46c6:	90 95       	com	r25
    46c8:	81 95       	neg	r24
    46ca:	9f 4f       	sbci	r25, 0xFF	; 255
    46cc:	64 2f       	mov	r22, r20
    46ce:	77 27       	eor	r23, r23
    46d0:	0e 94 c5 23 	call	0x478a	; 0x478a <__udivmodhi4>
    46d4:	80 5d       	subi	r24, 0xD0	; 208
    46d6:	8a 33       	cpi	r24, 0x3A	; 58
    46d8:	0c f0       	brlt	.+2      	; 0x46dc <itoa+0x2c>
    46da:	89 5d       	subi	r24, 0xD9	; 217
    46dc:	81 93       	st	Z+, r24
    46de:	cb 01       	movw	r24, r22
    46e0:	00 97       	sbiw	r24, 0x00	; 0
    46e2:	a1 f7       	brne	.-24     	; 0x46cc <itoa+0x1c>
    46e4:	16 f4       	brtc	.+4      	; 0x46ea <itoa+0x3a>
    46e6:	5d e2       	ldi	r21, 0x2D	; 45
    46e8:	51 93       	st	Z+, r21
    46ea:	10 82       	st	Z, r1
    46ec:	c9 01       	movw	r24, r18
    46ee:	0c 94 b5 23 	jmp	0x476a	; 0x476a <strrev>

000046f2 <ltoa>:
    46f2:	fa 01       	movw	r30, r20
    46f4:	cf 93       	push	r28
    46f6:	ff 93       	push	r31
    46f8:	ef 93       	push	r30
    46fa:	22 30       	cpi	r18, 0x02	; 2
    46fc:	44 f1       	brlt	.+80     	; 0x474e <ltoa+0x5c>
    46fe:	25 32       	cpi	r18, 0x25	; 37
    4700:	34 f5       	brge	.+76     	; 0x474e <ltoa+0x5c>
    4702:	c2 2f       	mov	r28, r18
    4704:	e8 94       	clt
    4706:	ca 30       	cpi	r28, 0x0A	; 10
    4708:	49 f4       	brne	.+18     	; 0x471c <ltoa+0x2a>
    470a:	97 fb       	bst	r25, 7
    470c:	3e f4       	brtc	.+14     	; 0x471c <ltoa+0x2a>
    470e:	90 95       	com	r25
    4710:	80 95       	com	r24
    4712:	70 95       	com	r23
    4714:	61 95       	neg	r22
    4716:	7f 4f       	sbci	r23, 0xFF	; 255
    4718:	8f 4f       	sbci	r24, 0xFF	; 255
    471a:	9f 4f       	sbci	r25, 0xFF	; 255
    471c:	2c 2f       	mov	r18, r28
    471e:	33 27       	eor	r19, r19
    4720:	44 27       	eor	r20, r20
    4722:	55 27       	eor	r21, r21
    4724:	ff 93       	push	r31
    4726:	ef 93       	push	r30
    4728:	0e 94 ff 22 	call	0x45fe	; 0x45fe <__udivmodsi4>
    472c:	ef 91       	pop	r30
    472e:	ff 91       	pop	r31
    4730:	60 5d       	subi	r22, 0xD0	; 208
    4732:	6a 33       	cpi	r22, 0x3A	; 58
    4734:	0c f0       	brlt	.+2      	; 0x4738 <ltoa+0x46>
    4736:	69 5d       	subi	r22, 0xD9	; 217
    4738:	61 93       	st	Z+, r22
    473a:	b9 01       	movw	r22, r18
    473c:	ca 01       	movw	r24, r20
    473e:	60 50       	subi	r22, 0x00	; 0
    4740:	70 40       	sbci	r23, 0x00	; 0
    4742:	80 40       	sbci	r24, 0x00	; 0
    4744:	90 40       	sbci	r25, 0x00	; 0
    4746:	51 f7       	brne	.-44     	; 0x471c <ltoa+0x2a>
    4748:	16 f4       	brtc	.+4      	; 0x474e <ltoa+0x5c>
    474a:	cd e2       	ldi	r28, 0x2D	; 45
    474c:	c1 93       	st	Z+, r28
    474e:	10 82       	st	Z, r1
    4750:	8f 91       	pop	r24
    4752:	9f 91       	pop	r25
    4754:	cf 91       	pop	r28
    4756:	0c 94 b5 23 	jmp	0x476a	; 0x476a <strrev>

0000475a <__eerd_byte_m32>:
    475a:	e1 99       	sbic	0x1c, 1	; 28
    475c:	fe cf       	rjmp	.-4      	; 0x475a <__eerd_byte_m32>
    475e:	9f bb       	out	0x1f, r25	; 31
    4760:	8e bb       	out	0x1e, r24	; 30
    4762:	e0 9a       	sbi	0x1c, 0	; 28
    4764:	99 27       	eor	r25, r25
    4766:	8d b3       	in	r24, 0x1d	; 29
    4768:	08 95       	ret

0000476a <strrev>:
    476a:	dc 01       	movw	r26, r24
    476c:	fc 01       	movw	r30, r24
    476e:	67 2f       	mov	r22, r23
    4770:	71 91       	ld	r23, Z+
    4772:	77 23       	and	r23, r23
    4774:	e1 f7       	brne	.-8      	; 0x476e <strrev+0x4>
    4776:	32 97       	sbiw	r30, 0x02	; 2
    4778:	04 c0       	rjmp	.+8      	; 0x4782 <strrev+0x18>
    477a:	7c 91       	ld	r23, X
    477c:	6d 93       	st	X+, r22
    477e:	70 83       	st	Z, r23
    4780:	62 91       	ld	r22, -Z
    4782:	ae 17       	cp	r26, r30
    4784:	bf 07       	cpc	r27, r31
    4786:	c8 f3       	brcs	.-14     	; 0x477a <strrev+0x10>
    4788:	08 95       	ret

0000478a <__udivmodhi4>:
    478a:	aa 1b       	sub	r26, r26
    478c:	bb 1b       	sub	r27, r27
    478e:	51 e1       	ldi	r21, 0x11	; 17
    4790:	07 c0       	rjmp	.+14     	; 0x47a0 <__udivmodhi4_ep>

00004792 <__udivmodhi4_loop>:
    4792:	aa 1f       	adc	r26, r26
    4794:	bb 1f       	adc	r27, r27
    4796:	a6 17       	cp	r26, r22
    4798:	b7 07       	cpc	r27, r23
    479a:	10 f0       	brcs	.+4      	; 0x47a0 <__udivmodhi4_ep>
    479c:	a6 1b       	sub	r26, r22
    479e:	b7 0b       	sbc	r27, r23

000047a0 <__udivmodhi4_ep>:
    47a0:	88 1f       	adc	r24, r24
    47a2:	99 1f       	adc	r25, r25
    47a4:	5a 95       	dec	r21
    47a6:	a9 f7       	brne	.-22     	; 0x4792 <__udivmodhi4_loop>
    47a8:	80 95       	com	r24
    47aa:	90 95       	com	r25
    47ac:	bc 01       	movw	r22, r24
    47ae:	cd 01       	movw	r24, r26
    47b0:	08 95       	ret

000047b2 <_exit>:
    47b2:	f8 94       	cli

000047b4 <__stop_program>:
    47b4:	ff cf       	rjmp	.-2      	; 0x47b4 <__stop_program>
